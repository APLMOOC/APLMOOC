{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Array Programming in APL MOOC","text":"<p>This is an online course on array programming in APL. No prior array programming knowledge is required; however, being familiar with at least one other programming language is highly recommended. This course is a work-in-progress. When complete, it is intended to be an official 5 ECTS credit course at the University of Helsinki.</p>"},{"location":"#contact-us","title":"Contact Us","text":"<p>This course is written and developed by University of Helsinki students Sergey Ichtchenko, Dani Adham, and Hex. Feel free to contact us here for any questions, comments, or otherwise. Anonymous messages welcome.</p> <p>What are you waiting for?</p> <p>Get started!</p>"},{"location":"account/","title":"Account","text":"<p>Sign in with your mooc.fi credentials to be able to submit write problems to TMC and receive problem points.</p> Log in <p>Log out</p>"},{"location":"progress/","title":"Progress","text":"<p>After you have completed at least 60% of the graded exercises, you can use the credits request form to request ECTS credits for the course.</p>"},{"location":"progress/#your-progress","title":"Your progress","text":"<p>Table</p> <p>There will be a table here tracking which exercises you've done and your current grade.</p>"},{"location":"progress/#statistics","title":"Statistics","text":"<p>Table</p> <p>There will be a table here showing how many people have done each exercise in the course.</p>"},{"location":"progress/#request-credits","title":"Request credits","text":"<p>Once you have successfully completed at least 60% of the write exercises in each chapter, you can get 5 ECTS credits for completion.</p> <ul> <li>If you solve at least 60% of the exercises, you get a grade of 1.</li> <li>If you solve at least 90% of the exercises, you get a grade of 4.</li> <li>If you solve at least 99% of the exercises, you get a grade of 5.</li> </ul> <p>Please use the below form to submit a request for credits once you have completed enough exercises.</p> <p>Note</p> <p>This form is not currently available, as the course has not been registered as a University of Helsinki MOOC yet.</p>"},{"location":"course/ch0/part1/","title":"Welcome to the wonderful world of APL programming!","text":"<p>APL is quirky, different, and not like the other programming languages.</p> <p>One December, I was doing the Advent of Code (AoC) challenges. These are fun, small programming projects that are given to you in the form of a Christmas advent calendar. There are 2 challenges per day, for a grand total of 50 throughout December.</p> <p>Throughout the month, text like this was posted on forums:</p> <pre><code>east  \u2190 \u22a2{(\u237a+\u00af1\u233d\u2375)-\u2375}     0\u2218&lt;\u22270=1\u2218\u233d   \u235d (1)!\n</code></pre> <ol> <li>Example taken from https://github.com/pitr/aoc/blob/main/2021/25.apl</li> </ol> <p>I was very confused. These were meant to be solutions to the AoC problems. However, I couldn't see how in the world these could represent any sort of algorithm, much less a solution. Were these...</p> <ul> <li>Encrypted solutions?</li> <li>Solutions encoded in some weird format?</li> <li>Trolls meant to confuse me?</li> <li>My computer bugging out?</li> </ul> <p>Turns out, it was none of these. After a bit more research, I found out that it was something called APL.</p> <p>APL</p> <p>APL stands for...</p> <p>A</p> <p>Programming</p> <p>Language.</p> <p>Great naming, right?</p> <p>Out of curiosity, I tried finding APL solutions to the AoC challenges after Christmas passed. At one point, I found a solution that spanned just 50 lines. As a note, a Python solution for one challenge (towards the end of the month) is usually about 150-200 lines long. In its 50 lines, the APL solution apparently solved all the problems.</p> <p>That was cool.</p> <p>APL looks different, feels different, and it challenges your normal way of thinking about programming.</p> <p>I hope that this course will expand your mind and let you approach programming from a whole new perspective.</p>"},{"location":"course/ch0/part2/","title":"What's the big idea?","text":""},{"location":"course/ch0/part2/#apl","title":"APL...","text":""},{"location":"course/ch0/part2/#is-an-array-language","title":"...is an array language.","text":"<p>Another (unofficial) name for APL is \"Array Programming Language\". All operations in the language work on lists, matrices, and higher dimensional arrays.</p> <p>Many tasks that require data processing and operations on large amounts of structured data work really well in APL.</p> <p>You might have heard that programming languages can be classified into a few different types:</p> <ul> <li>Imperative languages (Python, Java, C, R, etc.)</li> <li>Functional languages (Haskell, Clojure, etc.)</li> </ul> <p>A new addition to this list, which you might not have heard of, is</p> <ul> <li>Array languages (APL and its derivatives, Fortran, etc.)</li> </ul> <p>Array languages are considered separate from the previous two categories, as they operate differently. Instead of having variables and operations (imperative) or functions (functional) as primitive objects, array languages use arrays and array algorithms as primitives. This requires a separate form of thinking from how you would program in other languages, which makes it interesting to learn even if you already know an imperative language like Python.</p>"},{"location":"course/ch0/part2/#uses-special-characters","title":"...uses special characters.","text":"<p>Look at the top of the screen: that long bar with characters is the APL language!</p> <p>Don't be afraid: while mysterious at first, you'll grow to learn and love them.</p>"},{"location":"course/ch0/part2/#is-untyped","title":"...is untyped.","text":"<p>There is no concept of type in APL. The underlying interpreter abstracts it all away from you and lets you focus on processing data, not its types.</p>"},{"location":"course/ch0/part2/#is-high-level","title":"...is high-level.","text":"<p>In fact, APL abstracts a lot of normal operations from you.</p> <p>There are no concepts of memory, pointers, loops (in their traditional sense), or other primitives that, as a traditional (imperative) programmer, one needs to think about and understand when writing algorithms and code.</p>"},{"location":"course/ch0/part2/#the-power-of-apl","title":"The power of APL","text":"<p>Some people say that APL is \"confusing\" and \"difficult to read\" due to its special characters.</p> <p>However, I disagree. APL is just as readable as any language. An English person can't read Finnish either without a little practice!</p> <p>On the contrary, APL is sometimes easier to read than imperative languages. Consider the following problem:</p> <p>Example problem</p> <p>Write a program that takes in a list of numbers. Is the product of all the numbers positive, negative, or zero?</p> <p>Return the sign of the product (1 if it is positive, -1 if it is negative, and 0 if it is zero).</p> <p>There are many ways to solve this problem (try it in Python or a language you are already familiar with!). The na\u00efve way - multiplying all the numbers together - is inefficient and may cause integer overflow for big lists or big numbers in some languages.</p> <p>Consider the following efficient solution in Python.</p> <p>Python solution</p> <p>Solution: <pre><code>def solution(values):\n    result = 1\n\n    for value in values:\n        if value == 0:\n            result = 0\n            break\n        elif value &gt; 0:\n            continue\n        else:\n            result *= -1\n\n    print(result)\n</code></pre></p> <p>Execution: <pre><code>solution([1, 3, 5, -4])\n</code></pre></p> <p>Result: <pre><code>-1\n</code></pre></p> <p>Sure, this solution could definitely be optimised and shortened. However, this is also how beginner Python programmers are often taught to approach problems such as this.</p> <p>You'll notice that there is a lot of overhead in this solution: the programmer manually go through the list using a loop, handle all of the different cases (making sure they are exhaustive), and print the result to the screen themselves. New students have to understand that functions are called using parentheses, while square brackets and commas are used for lists.</p> <p>Compare this to the equivalent APL solution.</p> <p>APL solution</p> <p>Solution: <pre><code>solution \u2190 \u00d7/\u00d7\n</code></pre></p> <p>Execution: <pre><code>solution 1 3 5 \u00af4\n</code></pre></p> <p>Result: <pre><code>\u00af1\n</code></pre></p> <p>This isn't just part of the solution, this isn't a little section thereof, this is the whole solution.</p> <p>To an APL thinker, this is perfectly clear and legible! The symbols essentially tell the interpreter the following: \"Take the signs of all the elements of the input list, and multiply them together\". There is no mention of types, no mention of loops, just operations acting on a structured list of data.</p> <p>This is the power of APL: you can express simple constructs simply and effectively, with the rest abstracted away!</p>"},{"location":"course/ch0/part3/","title":"Resources","text":"<p>For some extra practice and information, check out the following resources:</p> <ul> <li>Dyalog, the developer of the Dyalog APL interpreter we will be using in this course</li> <li>Dyalog Videos, recorded talks and videos from previous Dyalog user meetings</li> <li>The APL Challenge, event aimed at newcomers to APL held four times a year</li> <li>APL Practice Problems, from previous APL events</li> <li>APL Forge, annual competition aimed at developing software in APL</li> <li>APL Cart, collection of useful APL idioms and phrases</li> </ul> <p>and many other excellent APL courses that have come before, such as Learning APL, Mastering Dyalog APL, APL Tutor, and Dyalog APL Course.</p>"},{"location":"course/ch0/part4/","title":"About the course","text":""},{"location":"course/ch0/part4/#chapters","title":"Chapters","text":"<p>This course consists of 7 chapters.</p> <p>Each chapter has multiple parts with material. At the end of each chapter, you can find the following parts:</p> <ul> <li>Summary, which contains a recap of the symbols used in the chapter material</li> <li>Read exercises, which are ungraded problems you can use to test your knowledge of the material by reading</li> <li>Write exercises, which are graded programming exercises you need to submit to the server</li> <li>Bonus content, which is additional content you might find interesting but which is fully optional and not assessed. These pages cover slightly larger projects and may use topics that have not yet been discussed in the course.</li> </ul>"},{"location":"course/ch0/part4/#grading","title":"Grading","text":"<p>Once you have successfully completed at least 60% of the write exercises in each chapter, you can get 5 ECTS credits for completion.</p> <ul> <li>If you solve at least 60% of the exercises, you get a grade of 1.</li> <li>If you solve at least 90% of the exercises, you get a grade of 4.</li> <li>If you solve at least 99% of the exercises, you get a grade of 5.</li> </ul> <p>Please see the progress page for instructions on getting study credits for this course.</p> <p>Note</p> <p>ECTS credits are not currently available, as the course has not been registered as a University of Helsinki MOOC yet.</p>"},{"location":"course/ch1/part1/","title":"Immediate execution mode","text":"<p>Let's get started with some basic APL!</p> <p>For the first few chapters, we will be working with the REPL available at TryAPL. If you've ever tried running <code>python3</code> (<code>py</code> for W*ndows users) or the IDLE editor on your computer, this is the same thing. The REPL will wait for you to enter a command, then evaluate and print the result (if your command resulted in a result), after which it will return control back to you. This will repeat for as long as your heart desires.</p> <p>Try it yourself</p> <p>You can run APL code at</p> <p>tryapl.org</p> <p>Try running the commands in this chapter yourself.</p> <p>You can also use the REPL for playing around, testing out ideas, and working on the write exercises at the end of the chapter.</p> <p>The mode you land in by default is called Immediate Execution mode (because it immediately executes whatever you give it). Other modes include Execution mode, Function Editing mode, Character Input mode, Evaluated Input mode, and GUI Input Form mode. We will get back to these modes in future chapters.</p> <p>Surprisingly enough, this style of prompt is how APL code has been written for the longest time! By using the different modes outlined above, alongside APL workspaces and an APL IDE, you can write any programs you like. Thankfully, since we live in the 2000s, some APL developers have realised that it might be smart to finally get with the times and let programmers write their code in text files that are executed by an APL interpreter. This is fairly straightforward to do but requires some configuration, so we will get back to this in a later chapter. For now, the TryAPL interpreter will be enough.</p>"},{"location":"course/ch1/part2/","title":"Basic operations and input","text":"<p>This part will cover</p> <ul> <li>Basic operations in APL</li> <li>Monadic and dyadic functions</li> <li>Some pitfalls</li> </ul> <p>Okay, so we have TryAPL open. Now what?</p> <p>APL is a programming language, so it would make sense if it could, at least, do some basic arithmetic. Let's try it out!</p> <p>How about addition?</p> <pre><code>      2+2\n4\n</code></pre> <p>Okay, it seems to be able to handle that. Great start!</p> <p>You'll notice that the programmer's input is indented, while the interpreter's output is not. You can think of it as a conversation, where you are on the right and the interpreter is on the left. Keep this in mind. It will be important for later.</p> <p>Time to try subtraction...</p> <pre><code>      8-5\n3\n      5-8\n\u00af3\n</code></pre> <p>Okay, so that seems to work as well. But wait, why is the negative sign before the number 3 rendered weirdly? It looks different from the minus sign we typed.</p> <p>As it turns out, there are two signs for negation in APL. One of them is a minus function (<code>-</code>), that subtracts two numbers. The other is a negative sign (<code>\u00af</code>), which is slightly higher and tells APL that a number is negative. The negative sign is not a function! In the same way that a full stop (<code>.</code>) decorates a number (<code>3.14159</code>) to show that it has a decimal part, the negative sign (<code>\u00af</code>) decorates a number (<code>\u00af1337</code>) to show that it's negative.</p> <p>Functions</p> <p>In APL, functions take in arguments and produce results.</p> <p>Most APL symbols are functions. You will get familiar with them in the next chapters.</p> <p>Functions can have arguments to their left and right.</p> <ul> <li>If a function has both left and right arguments, it is called dyadic (di = two).</li> <li>If a function has only one argument on the right, it is called monadic (mono = one).</li> <li>If a function doesn't take arguments (quite rare!), it is called niladic (nil = zero).</li> </ul> <p>Functions with only one argument on the left do not exist in APL.</p> <p>Results are what a function \"spits out\". You can imagine the result of the function replacing the function after its execution is done, just like in any other programming language. There are also functions that do not return any results.</p> <p>Multiplication should work just as intuitively.</p> <pre><code>      2*2\n4\n      2*5\n32\n</code></pre> <p>Wait, what? <code>2*2</code> evaluated to <code>4</code>, while <code>2*5</code> evaluated to <code>32</code>?! This isn't multiplication, it's exponentiation! What's going on here?</p> <p>Warning</p> <p>APL was created by mathematicians in the 1960s. Mathematicians love weird and funny symbols.</p> <p>This was the time before Unicode, the standard way in which we encode characters today, was invented. As such, the creators were free to invent any typewriter symbols they wanted (yes, APL was written on a typewriter), and added a lot of special symbols that look really cool but aren't found on any modern keyboards. There are lots of symbols implemented in Unicode even today just because they were invented by APL'ers before any proper standards were written.</p> <p>You will learn how to type them shortly!</p> <p>In fact, the creators of APL added a special multiplication cross (<code>\u00d7</code>) to do multiplication. Not to be confused with the letter <code>x</code>! Similarly, division is done with the dedicated mathematical division symbol (<code>\u00f7</code>).</p> <p>Let's try them out:</p> <pre><code>      2\u00d72\n4\n      2\u00d75\n10\n      7\u00f72\n3.5\n      2\u00f77\n0.2857142857\n      123\u00d7\u00af456\n\u00af56088\n</code></pre> <p>Funkar som den ska.</p> <p>Significant figures</p> <p>APL will display results of your calculations to 10 significant figures.   Internally, APL calculates all floating-point operations to 16 or 17 significant figures,   which is a suitable level of accuracy for most (if not all) applications.</p>"},{"location":"course/ch1/part3/","title":"How do I type these characters?!?!?!?","text":"<p>Step 1: go to Amazon and buy a special APL typewriter keyboard...</p> <p>Just kidding (thankfully). In the modern day and age, there are way better options:</p>"},{"location":"course/ch1/part3/#simplest-press-the-buttons-in-the-ide","title":"Simplest: Press the buttons in the IDE","text":"<p>At the top of the TryAPL page (and this course page) there are symbols you can click. You can also hover over them to get a quick overview of what each symbol does in APL.</p> <p>This is, however, quite slow when you need to write APL code fast. Find some alternatives below.</p>"},{"location":"course/ch1/part3/#quickest-use-keyboard-shortcuts","title":"Quickest: Use keyboard shortcuts","text":"<p>On TryAPL (and this page), you can use prefixes to insert various special symbols.</p> <p>You can use any of the following keys as a prefix: ` \u00a7 \u00b0 \u00b2 \u00b5 \u00ba \u00bd \u00f9</p> <p>On Finnish keyboards, the \u00a7 key (located to the left of 1) is the easiest to use. On US and UK keyboards, the ` key is preferred. Whichever key you pick we will denote as PREFIX from now on.</p> <p>To use prefixes, hit whatever prefix key you are using, followed by the key you want to type. For example, the multiplication symbol <code>\u00d7</code> is inserted by typing PREFIX - and division <code>\u00f7</code> is inserted with PREFIX =.</p> <p>While these might seem unintuitive at first, you'll get used to them fairly quickly. You can see the completion shortcut if you hover over the symbol in the top language bar. For example, hovering over <code>\u00d7</code> shows tells you the following: <code>Prefix: &lt;prefix&gt; -</code>. These are just instructions telling you to do what we did above.</p>"},{"location":"course/ch1/part3/#quickest-alternative-tab-completion","title":"Quickest (alternative): Tab completion","text":"<p>Sometimes, if you have a Finnish keyboard, you will be unable to type certain prefix shortcuts that were designed for US keyboards. Thankfully, there is an alternative: tab completions. You can find the keys needed for tab completion in the same tooltip that shows you what keys to use for the prefix shortcuts.</p> <p>For example, hovering over the arrow symbol (<code>\u2190</code>) shows the follwing information: <code>&lt; - &lt;tab&gt;</code>. Just follow the instructions and hit the keys &lt; - Tab. You'll notice that the alternative, PREFIX [ is impossible to type on a Finnish keyboard, as it doesn't have a separate [ key (and using AltGr breaks the APL shortcut).</p> <p>Note!</p> <p>Tab completion is only required for non-US users due to a bug feature in TryAPL, which is that it's designed with only US keyboards in mind.</p> <p>When we install the Dyalog IDE in a future chapter, this will no longer be a concern, as that supports Finnish (and various other non-US) keyboards natively.</p>"},{"location":"course/ch1/part3/#excessive-install-the-apl-keyboard","title":"Excessive: Install the APL Keyboard","text":"<p>You can install a dedicated keyboard for APL glyphs. See further instructions on the Dyalog website. This method provides no extra benefits unless you want to type APL outside of TryAPL, this webpage, or the IDE.</p> <p>We will also see in a later chapter how to install a plugin for Visual Studio Code that allows you to type APL characters.</p>"},{"location":"course/ch1/part4/","title":"Order of execution","text":"<p>This part will cover</p> <ul> <li>Right-to-left execution</li> <li>Using parentheses</li> <li>Comments</li> </ul> <p>Okay, we've tried adding and multiplying two numbers together. What if we try adding and multiplying three numbers at the same time?</p> <pre><code>      2\u00d72\n4\n      2\u00d72+1\n6\n</code></pre> <p>Oops. What happened here? Instead of doing the arithmetic operations in the normal order, 2 times 2 and add 1 (PEMDAS, remember?) APL seems to have done them in the reverse order, 2 plus 1 and the whole thing times 2. Let's see why that is.</p> <p>The creators of APL were faced with a dillemma. Every new symbol they added to the language was to be considered a function. In other languages, like Python, functions take in arguments inside parentheses. However, in APL, functions only take in arguments from the left and right. Because of this, all functions look and act like the multiplication and addition functions, and it isn't clear in which order they should be executed (e.g. consider the new symbol <code>1\u230a2+2</code>: would you perform the addition first or whatever this new <code>\u230a</code> function does first?) So, for every new function they added, the creators would have to decide where to put it in the hierarchy. And this doesn't even take into account functions that programmers can create themselves!</p> <p>\"Screw it,\" the creators decided, and made one, solid, unambiguous, easy-to-remember rule.</p> <p>Order of execution</p> <p>In APL, all operations are executed right-to-left.</p> <p>When APL runs a line of code, it first looks at the rightmost function symbol and executes it with the arguments to its left and right. It then looks at the function symbol to the left of the one just processed, and executes it, treating the result it just got as a right argument.</p> <p>An equivalent formulation of this would be</p> <p>Order of execution</p> <p>In APL, every function takes in the whole expression on its right as a right argument.</p> <p>Can you see why these two formulations are equivalent?</p> <p>Example</p> <p>Suppose you have the expression <code>3+5\u00f70.25\u00d76*10-8</code>.</p> <p>This will get evaluated right-to-left as: <pre><code>3+5\u00f70.25\u00d76*10-8\n3+5\u00f70.25\u00d76*2\n3+5\u00f70.25\u00d736\n3+5\u00f79\n3+0.5555555556\n3.555555556\n</code></pre></p> <p>About spaces</p> <p>APL ignores extra spaces when processing statements. For example, all of the following statements will produce the same result:</p> <pre><code>        2\u00d72+1\n6\n        2\u00d72 + 1\n6\n        2\u00d72       +           1\n6\n        2         \u00d7           2+1\n6\n</code></pre>"},{"location":"course/ch1/part4/#altering-the-order-of-execution","title":"Altering the order of execution","text":"<p>You can use parentheses, <code>(</code> and <code>)</code>, to alter the order of execution in APL.</p> <p>This is the same as in mathematics or any other programming language: statements within parentheses are executed before anything else.</p> <p>Let's look at our previous example once again:</p> <pre><code>      2\u00d72+1\n6\n      2\u00d7(2+1) \u235d (1)!\n6\n      (2\u00d72)+1 \u235d (2)!\n5\n</code></pre> <ol> <li>Same result as before; the parentheses changed nothing</li> <li>Finally, the result we wanted!</li> </ol> <p>As a beginner APL programmer, it's easy to want to put parentheses everywhere when your code doesn't work. Resist the urge. Use parentheses for readability, and when needed to change the order of operations. However, your code generally ends up cleaner if you can write it with as few parentheses as possible.</p> <p>In the above case, for example, we could have simply restructured the expression to be the following:</p> <pre><code>      1+2\u00d72\n5\n</code></pre> <p>No parentheses, and we get the correct answer!</p> <p>In general, when you have parentheses on the right, they are redundant. This is easier to understand in context. Consider the following expression:</p> <pre><code>      (1+(2\u00d7(3\u00f7(4-5))))\n\u00af5\n</code></pre> <p>In this case, all of the parentheses are unnecessary, since it is telling the APL interpreter to execute everything from right to left, which it would do anyway. So, in this case, you could achieve the same result with the shorter and more readable code:</p> <pre><code>      1+2\u00d73\u00f74-5\n\u00af5\n</code></pre> <p>Pretty, isn't it?</p> <p>Before we conclude, here are some tips on how to reduce parentheses in your code to avoid a parenthesis jungle:</p> <p>Reducing parentheses</p> <ol> <li>No APL expression needs to end with a closing parenthesis. It's redundant.</li> <li>For example, the expression <code>(2\u00d73)+(4\u00d75)</code> can be rewritten as <code>(2\u00d73)+4\u00d75</code></li> <li>You never need two consecutive closing parentheses. It's redundant.</li> <li>For example, the expression <code>(2\u00d7(3+4))\u00f75</code> is equivalent to <code>(2\u00d73+4)\u00f75</code></li> <li>If you can easily rewrite the expression to avoid parentheses, do so.</li> <li>For example, the expression <code>((2\u00f73)+4)\u00d75</code> can be reversed to give <code>5\u00d74+2\u00f73</code></li> <li>Do not shovel in extra parentheses in a panicked, desperate attempt to fix your code. Do shovel in parentheses if it genuinely helps the readability of your code.</li> </ol> <p>This isn't to say that you should avoid using parentheses. They often help your thought process and improve understanding of the code. They do not slow down execution, so feel free to use as many as you'd like (and potentially reduce their amount afterwards)!</p> <p>This funny order of execution and the rules for placing parentheses might take getting used to. Don't worry, as you progress further, you will forget how else computers can execute code!</p>"},{"location":"course/ch1/part4/#lamp","title":"Lamp","text":"<p>One last handy symbol: <code>\u235d</code>. Can you figure out what it does from this example?</p> <pre><code>      \u235d asdfada (1)\n      \u235d adsfljsakfdjlkdsajflkdsajf\n      \u235d =\u2260\u2228\u00af\u2265&gt;\u2260\u2260=\u2264&lt;\u00af\u00e4\u00f6'j\u2206\u2283\u2282\u2308\u220a\u2191j|\u22a4\u2282\u236aAQWED\u2286A\u2370\u22645\u2265&gt;\u22288\u2227\u00b4\u00a7\u00c4&amp;\u2364\u2368\u233f&amp;\u00a4\u2286\u2261\u234e^\u00c5\n      2+2  \u235d This is addition\n4\n      123\u00d7456  \u235d yay\n56088\n</code></pre> <ol> <li>Hint: ong it kinda looks like \u0d9e</li> </ol> <p>That's right, it's a comment. It makes the APL interpreter ignore whatever symbols come after it on the same line. You can use it to temporarily remove code from your programs or to add extra information to whatever code you have written.</p> <p>The official name for this symbol is \"lamp\". Why?</p> <p>Because comments illuminate your code.</p>"},{"location":"course/ch1/part5/","title":"When things go wrong","text":"<p>This part will cover</p> <ul> <li>Error handling</li> <li>Different errors in APL</li> </ul> <p>Let's do some more arithmetic:</p> <pre><code>      5\u00f75\n1\n      5\u00f74\n1.25\n      5\u00f73\n1.666666667\n      5\u00f72\n2.5\n      5\u00f71\n5\n      5\u00f70\nDOMAIN ERROR: Divide by zero\n      5\u00f70\n       \u2227\n</code></pre> <p>Like most mathematicians, APL is deathly afraid of dividing by zero. As such, APL doesn't allow zero as a right argument to the division function. In other words, zero is outside the domain of the right argument of <code>\u00f7</code>.</p> <p>When something like this happens, APL displays that there has been an error of a certain type (in this case, a DOMAIN ERROR), as well as a short description and an arrow pointing to the function that produced the error. So much better than errors in other languages! (looking at Java and Python right now)</p> <p>Here are some examples of error types you will come across in the future.</p> <pre><code>   DOMAIN ERROR\n   LENGTH ERROR\n   VALUE ERROR\n   RANK ERROR\n   SYNTAX ERROR\n   INDEX ERROR\n   WS FULL\n</code></pre> <p>A common fight-or-flight response when seeing an error is ignoring it, smashing your computer screen, and trying to re-run the same line of code with a random modification you don't understand.</p> <p>Don't!</p> <p>Even if you think you might know how to solve the problem immediately, try looking at the error message and figuring out exactly what it's complaining about, and where the error happens. For example, if you see a <code>LENGTH ERROR</code>, APL is trying to tell you that your arguments are of the wrong length. See if you can pinpoint the exact location the error is happening at! If, on the other hand, you see a <code>SYNTAX ERROR</code>, it most likely means that you've either made a typo somewhere or constructed an incomplete APL expression like <code>3+</code> (the <code>+</code> function is missing its right argument).</p> <p>When faced with an error</p> <p>Stop, take a breath, read the error message, and analyse the situation.</p>"},{"location":"course/ch1/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p>"},{"location":"course/ch1/read/#number-manipulation","title":"Number manipulation","text":"<p>Read problem 1</p> InputOutput <pre><code>2 + 3\n</code></pre> <pre><code>5\n</code></pre> <p>Read problem 2</p> InputOutput <pre><code>2-3\n</code></pre> <pre><code>\u00af1\n</code></pre> <p>The negative sign (<code>\u00af</code>) is different from the minus function (<code>-</code>)</p> <p>Read problem 3</p> InputOutput <pre><code>3*3\n</code></pre> <pre><code>27\n</code></pre> <p><code>*</code> is used for exponentiation, not multiplication</p> <p>Read problem 4</p> InputOutput <pre><code>3\u00d73\n</code></pre> <pre><code>9\n</code></pre> <p>Read problem 5</p> InputOutput <pre><code>3\u00f72\n</code></pre> <pre><code>1.5\n</code></pre> <p>Read problem 6</p> InputOutput <pre><code>2\u00af7\n</code></pre> <pre><code>SYNTAX ERROR\n      2\u00af 7\n      \u2227\n</code></pre> <p>The negative sign (<code>\u00af</code>) is not a function. Use the <code>-</code> function instead.</p> <p>Read problem 7</p> InputOutput <pre><code>1+2\u00f7\n</code></pre> <pre><code>SYNTAX ERROR\n      1+2\u00f7\n         \u2227\n</code></pre> <p>The divide function is missing its right argument.</p> <p>Read problem 8</p> InputOutput <pre><code>100\u00f70\n</code></pre> <pre><code>DOMAIN ERROR: Divide by zero\n      100\u00f70\n         \u2227\n</code></pre> <p>Can't divide by zero!</p> <p>Read problem 9</p> InputOutput <pre><code>0\u00f7100\n</code></pre> <pre><code>0\n</code></pre> <p>Read problem 10</p> InputOutput <pre><code>0\u00f70\n</code></pre> <pre><code>1\n</code></pre> <p>Ah, the age-old dilemma! Were you expecting a <code>DOMAIN ERROR</code>? The APL developers decided to add this feature since it is useful in some contexts. There is the option to change this if it really upsets you.</p> <p>Read problem 11</p> InputOutput <pre><code>\u00af2\u00d7\u00af3\n</code></pre> <pre><code>6\n</code></pre>"},{"location":"course/ch1/read/#order-of-execution","title":"Order of execution","text":"<p>Read problem 12</p> InputOutput <pre><code>4\u00d72+3\n</code></pre> <pre><code>20\n</code></pre> <p>Right-to-left.</p> <p>Read problem 13</p> InputOutput <pre><code>5\u00d72   +   3\u00d72\n</code></pre> <pre><code>40\n</code></pre> <p>Still right-to-left, regardless of spaces.</p> <p>Read problem 14</p> InputOutput <pre><code>24\u00f78\u00f72\n</code></pre> <pre><code>6\n</code></pre> <p>Read problem 15</p> InputOutput <pre><code>3\u00f712 + 4\u00d7\u00af3\n</code></pre> <pre><code>DOMAIN ERROR: Divide by zero\n      3\u00f712+4\u00d7\u00af3\n       \u2227\n</code></pre> <p>The <code>12 + \u00af12</code> results in zero, which is outside of the domain of the divide function's right argument.</p> <p>Read problem 16</p> InputOutput <pre><code>(((2+3)))\n</code></pre> <pre><code>5\n</code></pre> <p>Extra parentheses never hurt anyone.</p> <p>Read problem 17</p> InputOutput <pre><code>(((5))+((((3)))\u00d7(2)))\n</code></pre> <pre><code>11\n</code></pre> <p>Very readable! Is this LISP?</p> <p>Read problem 18</p> InputOutput <pre><code>4\u00d724\u00f73\n</code></pre> <pre><code>32\n</code></pre> <p>Read problem 19</p> InputOutput <pre><code>24\u00f74\u00d73\n</code></pre> <pre><code>2\n</code></pre> <p>Read problem 20</p> InputOutput <pre><code>6\u00d73-\n</code></pre> <pre><code>SYNTAX ERROR\n      6\u00d73-\n         \u2227\n</code></pre> <p>Typo.</p>"},{"location":"course/ch1/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p> Symbol Name Function Key combination (Prefix) Key combination (Tab) <code>+</code> Plus Addition + + <code>-</code> Minus Subtraction - - <code>\u00d7</code> Times Multiplication PREFIX - x x Tab <code>\u00f7</code> Divide Division PREFIX = : - Tab <code>*</code> Power Exponentiation * * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 - - Tab <code>\u235d</code> Lamp Comment PREFIX , o n Tab"},{"location":"course/ch1/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p> <p>Write problem 1</p> <p>Calculate the area of a room which is 13.7 long and 206.55 wide.  \u2395\u2190 A\u2190{ 13.7 206.55 } Submit <p></p></p> <p>Write problem 2</p> <p>A grandpa decreases in height by 2.5cm every year. If he is 150cm tall now, how tall will he be in 15 years?  \u2395\u2190 A\u2190{ 150 2.5 15 } Submit <p></p></p> <p>Write problem 3</p> <p>If 12 chairs cost you 200000, what is the price per chair?  \u2395\u2190 A\u2190{ 12 200000 } Submit <p></p></p> <p>Write problem 4</p> <p>Your current bank balance is \u00af420\u20ac. You are in big trouble. What will be your balance if you take just another quick loan of 100\u20ac?  \u2395\u2190 A\u2190{ \u00af420 100 } Submit <p></p></p> <p>Write problem 5</p> <p>Cause a <code>SYNTAX ERROR</code> using as few symbols as possible.  \u2395\u2190 A\u2190{ } Submit <p></p></p> <p>Write problem 6</p> <p>Cause a <code>DOMAIN ERROR</code>.  \u2395\u2190 A\u2190{ } Submit <p></p></p> <p>Write problem 7</p> <p>Rewrite the following expression with as few parentheses as possible. <pre><code>(((x*2)+(y*2))*.5)\n</code></pre> \u2395\u2190 A\u2190{ } Submit <p></p></p> <p>Write problem 8</p> <p>Compute the mean of the numbers 1, 57, 237, \u00af5, 42.  \u2395\u2190 A\u2190{ 1 57 237 \u00af5 42 } Submit <p></p></p> <p>Write problem 9</p> <p>You've got a 5 megawatt laser due in 15 days. If you've already got a 2.5 megawatt laser, how many megawatts a day do you have to add?  \u2395\u2190 A\u2190{ 5 15 } Submit <p></p></p> <p>Write problem 10</p> <p>Subtract 7 from 16, divide the result by 3, add 8, multiply by 2.5, and square the result. Use as few parentheses as possible.  \u2395\u2190 A\u2190{ } Submit <p></p></p> <p>Write problem 11</p> <p>Write a nonempty line of code that does nothing (doesn't display anything on the screen).  \u2395\u2190 A\u2190{ } Submit <p></p></p> <p>Write problem 12</p> <p>Rewrite the following line of code using less than 7 parentheses. <pre><code>((((x+3.5)\u00d7(x+6))-(((2+y)\u00d7(z\u00d78.5))\u00f7\u00af20)\u235d((()())))()()((()()))()()()()))())))()(((\n</code></pre> \u2395\u2190 A\u2190{ } Submit <p></p></p>"},{"location":"course/ch2/part1/","title":"Assignment","text":"<p>This part will cover</p> <ul> <li>Assignment statements</li> <li>Variables and naming</li> <li>Intermediate assignment</li> </ul> <p>Allow me to introduce you to a new symbol; the assignment symbol:</p> <pre><code>\u2190\n</code></pre> <p>Typing the assignment symbol <code>\u2190</code></p> <p>Prefix method: PREFIX ]</p> <p>Tab method: &lt; - Tab</p> <p>Here is an example of assignment:</p> <pre><code>      BANANA \u2190 3\n</code></pre> <p>As you can see, there is no output, because assignment does not return anything. This is what's called a shy operation in APL.</p> <p>It is convention to use capital letters for variable names in APL. You can also use lowercase letters, underscores, and numbers (but a variable name cannot start with a number). In addition, you can use the characters <code>\u2206</code> and <code>\u2359</code>, called delta and delta underbar. These have no special meaning, and can be used to separate parts of a variable.</p> <p>For example, all of the following are valid variable names: <pre><code>STATS2020       BalanceDiff       _Rate_of_change      \nSTATS\u22062020      \u2206Balance          _ROC\nS20             \u2206                 \u2359R\n</code></pre></p> <p>If you try creating a variable that starts with a number, it will cause a <code>SYNTAX ERROR</code>.</p> <p>We can use variables in place of a number.</p> <pre><code>      BANANA \u2190 3\n      BANANA-1\n2\n      BANANA\u00f72\n1.5\n      BANANA\u00d7BANANA\n9\n</code></pre> <p>Note that variables keep their value even if you perform operations with them. The only way to change a variable's value is to use assignment again:</p> <pre><code>      BANANA \u2190 3\n      BANANA\n3\n      BANANA+1\n4\n      BANANA \u2190 0\n      BANANA\n0\n      BANANA+1\n1\n      BANANA \u2190 BANANA + 3\n      BANANA\n4\n</code></pre> <p>Notice, at the end there we did a common operation: increasing the value of a variable by some amount. This is such a common operation, that the creators of APL introduced a shorthand:</p> <pre><code>      BANANA +\u2190 3\n</code></pre> <p>This has the same effect as the earlier <code>BANANA \u2190 BANANA + 3</code>, but may save you some keystrokes. You can also use this same technique with all other APL functions, some more useful than others. With any function <code>F</code>, the expression <code>VAR F\u2190 X</code> will expand to become <code>VAR \u2190 VAR F X</code>. This is often handy to conserve space.</p>"},{"location":"course/ch2/part1/#intermediate-assignment","title":"Intermediate assignment","text":"<p>One more thing. We saw above that assignment was a shy operation. What if we really wanted to see what was assigned to a variable immediately? This is where intermediate assignment, or chaining assignments, comes into play.</p> <p>For an example, say we were trying to solve the equation \"one plus the value of five times six\", and we assigned it to a variable.</p> <pre><code>      RES \u2190 1+5*6\n(nothing is displayed)\n</code></pre> <p>Now, something seems wrong. Let's see whether we got the result we wanted...</p> <pre><code>      \u2395 \u2190 RES \u2190 1+5*6\n15626\n</code></pre> <p>Here, we \"assigned\" to a symbol called a quad. All this does is print whatever is assigned to it to the screen. The developers of APL picked this because it looks kinda like a (arguably, vertical) computer monitor.</p> <p>Typing the quad symbol <code>\u2395</code></p> <p>Prefix method: PREFIX L</p> <p>Tab method: [ ] Tab</p> <p>We also realised that we made a mistake somewhere in our calculation (it should be fairly obvious, but let's pretend we have a very complex program here). To debug what's going on, we can use intermediate assignment in the middle of our calculation as follows:</p> <pre><code>      RES \u2190 1 + DEBUG \u2190 5*6\n(nothing is displayed)\n      DEBUG\n15625\n</code></pre> <p>This makes it easy to identify and debug different parts of our code. We could have also done both the assigning and the printing in one line, using our familiar quad symbol:</p> <pre><code>      RES \u2190 1 + \u2395 \u2190 5*6\n15625\n</code></pre> <p>With this, we can fix our code to work as it should.</p> <pre><code>      \u2395 \u2190 RES \u2190 1+5\u00d76\n31\n</code></pre> <p>Nice!</p> <p>Intermediate quad symbol</p> <p>It appears as though currently, TryAPL does not support the intermediate quad symbol. That is, the above expression <code>RES \u2190 1 + \u2395 \u2190 5*6</code> will throw a <code>NOT PERMITTED</code> error. This is rather unfortunate but will not be an issue later, when we install the Dyalog IDE to write bigger programs.</p>"},{"location":"course/ch2/part2/","title":"Vectors","text":"<p>This part will cover</p> <ul> <li>Creating vectors</li> <li>Spaces Separate Scalars</li> </ul> <p>You are an astronaut aboard the International Space Station. You are currently orbiting the Earth at an altitude of 413km at a speed of 28,013km/h.</p> <p>In brief intervals of time spent waiting between tasks, you enjoy logging temperatures from sensors all around the ship into a small notebook. Unfortunately for you, your notebook\u2019s completely filled, and none of your colleagues seem to share your enthusiasm for data collection. Unfortunately for mission control, you\u2019ve decided to use critical APL machines on board to store your data.</p> <p>Typing as fast as possible without the aid of gravity, you manage to write some data without being caught.</p> <pre><code>       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR7_MINUTE42 \u2190 21.4\n       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR8_MINUTE47 \u2190 21.8\n       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR10_MINUTE10 \u2190 22.0\n       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR12_MINUTE01 \u2190 21.5\n       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR14_MINUTE36 \u2190 21.3\n       TEMPERATURE_PAGE1_YEAR1_DAY2_HOUR16_MINUTE50 \u2190 22.3\n       TEMPERATURE_PAGE2_YEAR1_DAY2_HOUR18_MINUTE23 \u2190 22.8\n       TEMPERATURE_PAGE2_YEAR1_DAY2_HOUR19_MINUTE30 \u2190 21.5\n       TEMPERATURE_PAGE2_YEAR1_DAY2_HOUR21_MINUTE12 \u2190 22.1\n       TEMPERATURE_PAGE2_YEAR1_DAY3_HOUR7_MINUTE15 \u2190 22.0\n       TEMPERATURE_PAGE2_YEAR1_DAY3_HOUR8_MINUTE30 \u2190 21.9\n       TEMPERATURE_PAGE2_YEAR1_DAY3_HOUR9_MINUTE45 \u2190 22.4\n</code></pre> <p>This is not the most efficient, or readable, method to input data into your system, and while flicking through your APL notes now crowded with temperatures, you refresh your workspace and instead decide to store your data using vectors.</p> <p>Vectors are lines of values. They are defined by writing values separated by one or more spaces. </p> <p>Vectors are also ordered, it is possible to talk about the element at a specific position, called an index. For example, the first (1) element, the second (2) element, and so on. In code, they can be accessed by adding square brackets to the vector with an index (or multiple indices) in between.</p> <pre><code>      \u235d This is a vector\n      FIBB \u2190 1 1 2 3 5 8 13 21 34 55 \n\n      \u235d This is also a vector\n      KEYA \u2190 9 249  17 2 157   116 227 91 216    65 86 197 99 86 136 192 \n\n      \u235d The following are all scalars\n      PRIME \u2190 57\n      NUMERALS \u2190 413\n      MCBRT7 \u2190 -7*\u00f73\n      EPSILON \u2190 2*\u00af53\n      MAGIC \u2190 1597463007\n\n      \u235d Note that the decimal separator in APL is the dot\n      PI \u2190 11.001001 \u235d This is a scalar\n\n      \u235d This is a vector\n      LIST \u2190 PRIME 100 NUMERALS MCBRT7 0.6 EPSILON MAGIC 31.5 \n\n      \u235d Selecting a single element using an index\n      LIST[2] \n100\n      \u235d Selecting multiple values using indices\n      LIST[2 1 3]\n100 57 413\n\n      \u235d Selecting multiple values using a vector of indices\n      INDICES \u2190 2 1 3\n      LIST[INDICES] \n100 57 413\n</code></pre> <pre><code>      \u235d The above temperature lists as vectors\n      TEMPERATURE_PAGE1 \u2190 21.4 21.8 22.0 21.5 21.3 22.3\n      TEMPERATURE_PAGE2 \u2190 22.8 21.5 22.1 22.0 21.9 22.4\n\n      TEMPERATURE_PAGE1[1 2 3]\n      21.4 21.8 22.0\n</code></pre>"},{"location":"course/ch2/part3/","title":"Arithmetic operations on vectors","text":"<p>This part will cover</p> <ul> <li>Operations work on vectors all at once</li> <li>Length error</li> </ul> <p>You might wonder, why would we want to put a bunch of numbers inside a vector? Is it just to organise data? Let\u2019s say you mistakenly bought a bunch of measuring equipment from America, and only found out later that all the readings are in Fahrenheit. Terrible news! After about 2000 milliseconds of googling about it, you found this formula to convert it into Celsius:</p> <p>Celsius = (Fahrenheit - 32) * 5 / 9</p> <p>To test it out, you looked up the current room temperature reading, which says 72.1. Doing the calculation in APL:</p> <pre><code>      (5 \u00d7 72.1 - 32) \u00f7 9\n22.27777778\n</code></pre> <p>Great! What\u2019s not so great is that the temperature sensor has been left generating data for the whole week, and there are a bunch of readings to convert to Celsius.</p> <pre><code>      TEMP_F \u2190 71.2 71.4 73.3 73.0 73.1 72.8 72.5\n</code></pre> <p>You are going to spend ages plugging the data from this one sensor, and you have 200 of them lying around! Fortunately, APL is designed to deal with data assorted in a vector. You can:</p> <pre><code>      \u2395 \u2190 TEMP_CELSIUS \u2190 (5 \u00d7 TEMP_F - 32) \u00f7 9\n21.77777778 21.88888889 22.94444444 22.77777778 22.83333333 22.66666667 22.5\n</code></pre> <p>There\u2019s all the Celsius! What\u2019s going on here?</p> <p>In APL, all the basic arithmetic functions apply to all the elements of a vector. If you are familiar with functional programming, you might know the <code>map</code> function, which applies a function to each element of a vector. In APL, this is done automatically for all the basic arithmetic functions, if one of the parameters is a scalar:</p> <pre><code>      TEMP_F - 32\n39.2 39.4 41.3 41 41.1 40.8 40.5\n      TEMP_F + 32\n103.2 103.4 105.3 105 105.1 104.8 104.5\n      32 - TEMP_F\n\u00af39.2 \u00af39.4 \u00af41.3 \u00af41 \u00af41.1 \u00af40.8 \u00af40.5\n      100+1 2 3      \n101 102 103\n      1 2 3+100      \n101 102 103  \n</code></pre> <p>Pay close attention to the last two examples; constructing a vector using spaces always takes precedence over other operations, otherwise <code>1 2 3+100</code> would be <code>1 2 103</code>. If that is what we want, we can add extra parentheses</p> <pre><code>      1 2 (3+100)\n1 2 103\n</code></pre> <p>Now you can do arithmetic to a list of numbers however you like! After figuring this out, you decided to also check the temperature reading of a sensor outside the ISS:</p> <pre><code>      TEMP_OUTSIDE \u2190 118.5 97.1 59.5 30.0 \u00af9.7 \u00af62.3 \u00af113.2\n</code></pre> <p>That\u2019s some extreme temperature right there! And it makes you start to wonder, what temperature difference is the hull bearing? Turns out it\u2019s also very simple in APL:</p> <pre><code>      \u2395 \u2190 TEMP_DIFF \u2190 TEMP_OUTSIDE - TEMP_CELSIUS\n96.72222222 75.21111111 36.55555556 7.222222222 \u00af32.53333333 \u00af84.96666667 \u00af135.7\n</code></pre> <p>Applying a basic arithmetic function to two vectors applies it to their components! It applies this function for the first element on the left with the first element on the right, noting the result, then the second element on the left with the second element on the right, and so on. This is analogous to <code>map</code> with a binary operation and two iterators in Python, and <code>zipWith</code> in Haskell. </p> <pre><code>      \u235d Approximations to pi\n      3 256 25 339 22 3927 \u00f7 1 81 8 108 7 1250\n      3 3.160493827 3.125 3.138888889 3.142857143 3.1416\n</code></pre> <p>There is one serious caveat though:</p> <pre><code>      1 2 3 - 4 5\nLENGTH ERROR: Mismatched left and right argument shapes\n      1 2 3-4 5\n           \u2227\n</code></pre> <p>The length of the vectors must match, APL will not silently truncate the longer one or fill in the difference.</p> <pre><code>      1 2 3 \u00f7 2 2 0\nDOMAIN ERROR: Divide by zero\n      1 2 3\u00f72 2 0\n           \u2227\n</code></pre> <p>Unfortunately, APL doesn\u2019t point out on which element the error occurred. If you get this kind of error in a complex expression, you can use the intermediate assignment and printout to help debug the situation.</p>"},{"location":"course/ch2/part4/","title":"Higher dimensional space","text":"<p>This part will cover</p> <ul> <li>Constructing matrices</li> <li>Constructing 3D arrays</li> <li>The reshape function</li> </ul> <p></p> <p>The astute reader may have noticed that, although the vector data is much more structured, the dates and times of the measurements have been completely forgotten.</p> <p>One solution is to use more vectors to organize this data. We represent dates here using floating-point decimal encoded format. This format stores the dates as decimal numbers, where the integer part stores the year, month, and day, and the fractional part stores the hour, minute, and second, yyyymmdd.hhmmss.</p> <p>For example, 20240806.070130 is year 2024, month 08, day 06, hour 05, minute 01, and second 30.</p> <pre><code>      TEMPERATURE_PAGE1 \u2190 21.4 21.8 22.0 21.5 21.3 22.3\n      TEMPERATURE_PAGE1_DATE \u2190 00010101.074200 00010101.084700 00010101.101000 00010101.120100 00010101.143600 00010101.165000\n      TEMPERATURE_PAGE2 \u2190 22.8 21.5 22.1 22.0 21.9 22.4\n      TEMPERATURE_PAGE2_DATE \u2190 00010101.182300 00010101.193000 00010101.211200 00010102.071500 00010102.083000 00010102.094500\n</code></pre> <p>and access dates and times using the same index;</p> <pre><code>      TEMPERATURE_PAGE1[2]\n21.8\n      TEMPERATURE_PAGE1_DATE[2]\n00010101.084700\n</code></pre> <p>There is a built-in function to deal with dates and times, the \u2395DT command, which will be introduced in chapter 3.</p> <p>However, this lack of structure is exactly what introducing vectors was supposed to solve; two closely related pieces of information, the time of a measurement and the value of the measurement, are kept separate when they should logically be part of the same collection of data. Measurement data of this form are usually stored in tables, and it is only natural to try to store them in the same manner in a computer system.</p> <p>You decide to start over yet again, and decide to store data in a matrix instead</p> <pre><code>      TEMPERATURE_PAGE1 \u2190 6 2 \u2374 21.4 00010101.074200 21.8 00010101.084700 22.0 00010101.101000 21.5 00010101.120100 21.3 00010101.143600 22.3 00010101.165000\n      TEMPERATURE_PAGE2 \u2190 6 2 \u2374 22.8 00010101.182300 21.5 00010101.193000 22.1 00010102.211200 22.0 00010103.071500 21.9 00010103.083000 22.4 00010103.094500\n</code></pre> <p>Matrices are rectangles of data. They can be created by reshaping (\u2374) a vector.</p> <p>Typing the reshape function <code>\u2374</code></p> <p>Prefix method: PREFIX r  Tab method: r r Tab</p> <p>Function Valence</p> <p>The symbol \u2374 actually represents two different functions depending on the manner in which arguments are given. </p> <p>When applied to a single argument, \u2374X, it acts as the shape function; when two arguments are given one on either side, X\u2374Y, it acts as the reshape function. </p> <p>The former function is the monadic function associated to the symbol \u2374, and the latter is the dyadic function associated with the symbol \u2374. </p> <p>The reshape function acts by returning an array whose entries are the entries of its right argument, and whose axes are specified by a vector of integers as its left argument, more concretely,</p> <pre><code>      TEMPERATURE_DATA \u2190 21.4 00010101.074200 21.8 00010101.084700 22.0 00010101.101000 21.5 00010101.120100 21.3 00010101.143600 22.3 00010101.165000\n      6 2 \u2374 TEMPERATURE_DATA\n21.4 10101.0742\n21.8 10101.0847\n22   10101.101\n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165\n      \u235d The reshaped matrix has 6 rows and 2 columns\n</code></pre> <p>turns the vector TEMPERATURE_DATA into a matrix with axes of length six and two, consisting of the entries in TEMPERATURE_DATA.</p> <pre><code>     PYRAMID_ENTRIES \u2190 1 1 1 1 1 1 2 2 2 1 1 2 3 2 1 1 2 2 2 1 1 1 1 1 1 1\n      5 5 \u2374 PYRAMID_ENTRIES \u235d 5 rows and 5 columns\n1 1 1 1 1\n1 2 2 2 1\n1 2 3 2 1\n1 2 2 2 1\n1 1 1 1 1\n</code></pre> <p>Strings in APL are vectors of characters, defined using single quotes. The useful \u2395A system constant stores the upper-case english alphabet 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.</p> <pre><code>      WORD \u2190 'STONE'\n      WORD\nSTONE\n\n      ALPHABET \u2190 \u2395A \n      ALPHABET\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n</code></pre> <p>If the right argument is too short to fill the array, the reshape (dyadic \u2374) function repeats the right argument's entries.</p> <pre><code>      5 25 \u2374 ALPHABET \nABCDEFGHIJKLMNOPQRSTUVWXY\nZABCDEFGHIJKLMNOPQRSTUVWX\nYZABCDEFGHIJKLMNOPQRSTUVW\nXYZABCDEFGHIJKLMNOPQRSTUV\nWXYZABCDEFGHIJKLMNOPQRSTU\n\n      5 4\u2374WORD\nSTON\nESTO\nNEST\nONES\nTONE\n</code></pre> <p>The shape (monadic \u2374) function acts on one array, its right argument, by returning a vector whose entries are the lengths of the axes.</p> <pre><code>      TEMPERATURE_DATA \u2190 21.4 00010101.074200 21.8 00010101.084700 22.0 00010101.101000 21.5 00010101.120100 21.3 00010101.143600 22.3 00010101.165000\n      TEMPERATURE_PAGE1 \u2190 6 2 \u2374 TEMPERATURE_DATA\n      \u2374TEMPERATURE_PAGE1\n6 2\n      \u2374100 \u235d The shape of a scalar is the empty list\n\n      \u2374\u2395A \u235d Number of letters in the alphabet\n26\n</code></pre> <p>Since elements in matrices are ordered along two axes, an element of a matrix can be specified by two position, the row and column. If only a row position (or column position) is specified, the whole row (or column) is returned.</p> <pre><code>     TABLE \u2190 5 5 \u2374 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n     TABLE\n 1  2  3  4  5\n 6  7  8  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n     TABLE[1;1]\n1\n     TABLE[1;]\n1 2 3 4 5\n     TABLE[;1]\n1 6 11 16 21\n\n     WORD_SQUARE \u2190 5 5 \u2374 \"HEARTEMBERABUSERESINTREND\"\n     WORD_SQUARE\nHEART\nEMBER\nABUSE\nRESIN\nTREND\n     WORD_SQUARE[1;]\nHEART\n     WORD_SQUARE[;1]\nHEART\n     WORD_SQUARE[5;]\nTREND\n     WORD_SQUARE[;5]\nTREND\n\n      TEMPERATURE_DATA1 \u2190 21.4 00010101.074200 21.8 00010101.084700 22.0 00010101.101000 21.5 00010101.120100 21.3 00010101.143600 22.3 00010101.165000\n      TEMPERATURE_PAGE1 \u2190 6 2 \u2374 TEMPERATURE_DATA1\n      TEMPERATURE_PAGE1\n21.4 10101.0742\n21.8 10101.0847\n22   10101.101\n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165\n      TEMPERATURE_PAGE1[1;1]\n21.4\n      TEMPERATURE_PAGE1[1;2]\n10101.0742\n      TEMPERATURE_PAGE1[1;]\n21.4 10101.0742\n      TEMPERATURE_PAGE1[3;2]\n10101.101\n\n     TEMPERATURE_PAGE2 \u2190 6 2 \u2374 22.8 00010101.182300 21.5 00010101.193000 22.1 00010102.211200 22.0 00010103.071500 21.9 00010103.083000 22.4 00010103.094500\n     TEMPERATURE_PAGE2\n22.8 10101.1823\n21.5 10101.193 \n22.1 10102.2112\n22   10103.0715\n21.9 10103.083 \n22.4 10103.0945\n     TEMPERATURE_PAGE2[1;2]\n10101.1823\n     TEMPERATURE_PAGE2[2;2]\n10101.193\n     TEMPERATURE_PAGE2[3;2]\n10102.2112\n     TEMPERATURE_PAGE2[;2]\n0101.1823 10101.193 10102.2112 10103.0715 10103.083 10103.0945\n</code></pre> <p>Multiple numbers can be specified for both row and column indices.</p> <pre><code>       ALPHABET \u2190 5 5\u2374\u2395A\n       ALPHABET[1;]\nABCDE\n       ALPHABET[1 2 3;]\nABCDE\nFGHIJ\nKLMNO\n       ALPHABET[1 2 3; 1 2 3]\nABC\nFGH\nKLM\n</code></pre> <p>However again, the data measurements are separated without reason, the problem that introducing matrices was supposed to solve. Going one dimension further, the data can be arranged in a three-dimensional ordered collection of data:</p> <pre><code>     TEMPERATURE_ARRAY \u2190 2 6 2 \u2374 21.4 00010101.074200 21.8 00010101.084700 22.0 00010101.101000 21.5 00010101.120100 21.3 00010101.143600 22.3 00010101.165000 22.8 00010101.182300 21.5 00010101.193000 22.1 00010102.211200 22.0 00010103.071500 21.9 00010103.083000 22.4 00010103.094500\n     TEMPERATURE_ARRAY\n21.4 10101.0742\n21.8 10101.0847\n22   10101.101 \n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165 \n\n22.8 10101.1823\n21.5 10101.193 \n22.1 10102.2112\n22   10103.0715\n21.9 10103.083 \n22.4 10103.0945\n\n     \u2374TEMPERATURE_ARRAY \n2 6 2\n\n     \u2374\u2374TEMPERATURE_ARRAY \n3\n\n     TEMPERATURE_ARRAY[1;;]\n21.4 10101.0742\n21.8 10101.0847\n22   10101.101 \n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165\n\n     TEMPERATURE_ARRAY[2;;]\n22.8 10101.1823\n21.5 10101.193 \n22.1 10102.2112\n22   10103.0715\n21.9 10103.083 \n22.4 10103.0945\n\n     TEMPERATURE_ARRAY[;;1]\n21.4 21.8 22   21.5 21.3 22.3\n22.8 21.5 22.1 22   21.9 22.4\n</code></pre> <p>Rank</p> <p>The number of axes of an array is called the rank of the array. </p> <p>The arrays we\u2019ve constructed so far are of rank 0 (scalars), rank 1 (vectors), rank 2 (matrices), and rank 3. The maximum rank of an array in Dyalog APL is 15. </p> <p>A useful idiom for getting the rank of an array is the shape of the shape of an array, \u2374\u2374X.</p> <p>Now with your temperature table safely stored in your APL workspace, you can only imagine how many more values you can log and maintain. You excitedly gesture at one of your unimpressed coworkers before you notice you\u2019ve accidentally logged the temperature of the cabin as 226 degrees. Before they have a chance to look at your mistake, you quickly and shamefully change the value.</p> <pre><code>     TEMPERATURE_ARRAY\n21.4 10101.0742\n21.8 10101.0847\n226  10101.101 \n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165 \n\n22.8 10101.1823\n21.5 10101.193 \n22.1 10102.2112\n22   10103.0715\n21.9 10103.083 \n22.4 10103.0945\n     TEMPERATURE_ARRAY[1;3;1] \u2190 22.6\n     TEMPERATURE_ARRAY\n21.4 10101.0742\n21.8 10101.0847\n22.6 10101.101 \n21.5 10101.1201\n21.3 10101.1436\n22.3 10101.165 \n\n22.8 10101.1823\n21.5 10101.193 \n22.1 10102.2112\n22   10103.0715\n21.9 10103.083 \n22.4 10103.0945\n</code></pre> <p>That was close!</p> <p>Changing values in arrays acts in the same manner as it does for the case of changing variables, specify the element(s) to change and assign a new value.</p> <pre><code>     BOX \u2190 '\u2554\u2550\u2550\u2550\u2557\u2551TRY\u2551\u2560\u2550 \u2550\u2563\u2551APL\u2551\u255a\u2550\u2550\u2550\u255d'\n     BOX \u2190 5 5 \u2374 BOX\n     BOX\n\u2554\u2550\u2550\u2550\u2557\n\u2551TRY\u2551\n\u2560\u2550 \u2550\u2563\n\u2551APL\u2551\n\u255a\u2550\u2550\u2550\u255d\n\n     BOX[3;3] \u2190 '\u2550'\n     BOX\n\u2554\u2550\u2550\u2550\u2557\n\u2551TRY\u2551\n\u2560\u2550\u2550\u2550\u2563\n\u2551APL\u2551\n\u255a\u2550\u2550\u2550\u255d\n\n     BOX[3;]\n\u2560\u2550\u2550\u2550\u2563\n     BOX[3;] \u2190 '\u2551   \u2551'\n     BOX\n\u2554\u2550\u2550\u2550\u2557\n\u2551TRY\u2551\n\u2551   \u2551\n\u2551APL\u2551\n\u255a\u2550\u2550\u2550\u255d\n\n     BOX[3;] \u2190 '\u256c'\n     BOX\n\u2554\u2550\u2550\u2550\u2557\n\u2551TRY\u2551\n\u256c\u256c\u256c\u256c\u256c\n\u2551APL\u2551\n\u255a\u2550\u2550\u2550\u255d\n</code></pre>"},{"location":"course/ch2/part5/","title":"Nested arrays","text":"<p>This part will cover</p> <ul> <li>Basics of nested arrays</li> <li>How to catenate vectors properly</li> </ul> <p>Be warned, elements of arrays can be vectors, or matrices, or arrays of higher rank as well! We will discuss this in depth in Chapter 5, so take this section as a word of warning.</p> <p>Look what happens when we try to create the new temperature matrix from the already existing temperature vectors</p> <pre><code>       TEMPERATURE_DATA1 \u2190 21.4 00010101.074200 21.8 00010101.084700\n       TEMPERATURE_DATA2 \u2190 22.8 00010101.182300 21.5 00010101.193000 \n       TEMPERATURE_ARRAY \u2190 2 2 2 \u2374 TEMPERATURE_DATA1 TEMPERATURE_DATA2\n\n       TEMPERATURE_ARRAY\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250221.4 10101.0742 21.8 10101.0847\u250222.8 10101.1823 21.5 10101.193\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250221.4 10101.0742 21.8 10101.0847\u250222.8 10101.1823 21.5 10101.193\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250221.4 10101.0742 21.8 10101.0847\u250222.8 10101.1823 21.5 10101.193\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250221.4 10101.0742 21.8 10101.0847\u250222.8 10101.1823 21.5 10101.193\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>compared to the expected result, which is</p> <pre><code>21.4 00010101.074200 \n21.8 00010101.084700\n\n22.8 00010101.182300 \n21.5 00010101.193000\n</code></pre> <p>Attempting to access the elements of the rank 3 array returns vectors, this is because we\u2019ve accidentally created an array of vectors rather than an array of their elements. </p> <p>If we replace TEMPERATURE_DATA1 and TEMPERATURE_DATA2 with scalars, the situation is a bit more clear. <pre><code>       ARRAY \u2190 2 2 2 \u2374 'AB'\n       ARRAY\nA B\nA B\n\nA B\nA B\n</code></pre></p> <p>The proper way to combine two vectors into a single longer vector is using the catenate <code>,</code> function,  generally joining two arrays along a common edge. Monadically, the ravel <code>,</code> function can be used to \"unravel\" a matrix into a vector of its elements in top-down left-right order, called ravel order.</p> <pre><code>       WORD \u2190 3 2 2 \u2374 'BOROSILICATE'\n       WORD\nBO\nRO\n\nSI\nLI\n\nCA\nTE\n\n       ,WORD\nBOROSILICATE\n\n       WORD,'T'\nBOT\nROT\n\nSIT\nLIT\n\nCAT\nTET\n\n       WORD,WORD\nBOBO\nRORO\n\nSISI\nLILI\n\nCACA\nTETE\n\n       TEMPERATURE_DATA1 \u2190 21.4 00010101.074200 21.8 00010101.084700\n       TEMPERATURE_DATA2 \u2190 22.8 00010101.182300 21.5 00010101.193000 \n       TEMPERATURE_ARRAY \u2190 2 2 2 \u2374 TEMPERATURE_DATA1 , TEMPERATURE_DATA2\n21.4 10101.0742\n21.8 10101.0847\n\n22.8 10101.1823\n21.5 10101.193\n</code></pre> <p>Boxing</p> <p>The ]Box user command controls how array output is displayed, with levels of nesting shown as boxes.</p> <pre><code>       nested \u2190 2 2 \u2374 (\u23733) ('  ') ('   ') (2 2 \u2374 ('  ') (\u23733) (2 2 \u2374 (\u23733) ('  ') ('   ') (\u23732)) ('   '))\n       nested\n1 2 3                        \n                1 2 3  \n   1 2 3               \n          1 2          \n\n       ]Box on\nWas OFF\n       nested\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 3\u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502     \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502     \u2502\u2502           \u25021 2 3\u2502\u2502\n\u2502     \u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502     \u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\u2502     \u2502\u2502\n\u2502     \u2502\u2502\u25021 2 3\u2502   \u2502\u2502     \u2502\u2502\n\u2502     \u2502\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\u2502     \u2502\u2502\n\u2502     \u2502\u2502\u2502     \u25021 2\u2502\u2502     \u2502\u2502\n\u2502     \u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\u2502     \u2502\u2502\n\u2502     \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"course/ch2/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p> <p>Read problem 1</p> InputOutput <pre><code>1 4 9 16 25[4]\n</code></pre> <pre><code>16\n</code></pre> <p>Read problem 2</p> InputOutput <pre><code>1 4 9 16 25[3 4 5]\n</code></pre> <pre><code>9 16 25\n</code></pre> <p>Read problem 3</p> InputOutput <pre><code>(2\u00d71 4 9 16 25)[4]\n</code></pre> <p><pre><code>32\n</code></pre> Remember, creating a vector takes precedence over any other operations.</p> <p>Read problem 4</p> InputOutput <pre><code>(2\u00d71) 4 9 16 25[4]\n</code></pre> <pre><code>16\n</code></pre> <p>Read problem 5</p> InputOutput <pre><code>\u00af1 4 9 16 25[2]\n</code></pre> <pre><code>4\n</code></pre> <p>Read problem 6</p> InputOutput <pre><code>-1 4 9 16 25[2]\n</code></pre> <p><pre><code>\u00af4\n</code></pre> - is a function, which is applied to the whole vector, \u00af is the correct way to write negative numbers</p> <p>Read problem 7</p> InputOutput <pre><code>1 2 3 4 \u00f7 2 3 4 5\n</code></pre> <pre><code>0.5 0.6666666667 0.75 0.8\n</code></pre> <p>Read problem 8</p> InputOutput <pre><code>1 2 \u00f7 2 3 4 5\n</code></pre> <pre><code>LENGTH ERROR: Mismatched left and right argument shapes\n1 2\u00f73 4 5\n   \u2227\n</code></pre> <p>Read problem 9</p> InputOutput <pre><code>5 5 \u2374 0\n</code></pre> <pre><code>0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n</code></pre> <p>Read problem 10</p> InputOutput <pre><code>5 5 \u2374 \u2395A\n</code></pre> <pre><code>ABCDE\nFGHIJ\nKLMNO\nPQRST\nUVWXY\n</code></pre> <p>Read problem 11</p> InputOutput <pre><code>(5 5 \u2374 \u2395A)[2 3 4;2 3 4]\n</code></pre> <pre><code>GHI\nLMN\nQRS\n</code></pre> <p>Read problem 12</p> InputOutput <pre><code>10 11 \u2374 '\u255a\u2557\u2591'\n</code></pre> <pre><code>\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\n\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\n\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\n\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\n\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\n\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\n\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\n\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\n\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\n\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\u2591\u255a\u2557\n</code></pre>"},{"location":"course/ch2/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch2/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination (Prefix) Key combination (Tab) <code>\u2190</code> Assignment symbol Assigning variables PREFIX [ &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L [ ] Tab"},{"location":"course/ch2/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination (Prefix) Key combination (Tab) <code>+</code> Plus Addition + + <code>-</code> Minus Subtraction - - <code>\u00d7</code> Times Multiplication PREFIX - x x Tab <code>\u00f7</code> Divide Division PREFIX = : - Tab <code>*</code> Power Exponentiation * * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 - - Tab <code>\u235d</code> Lamp Comment PREFIX , o n Tab"},{"location":"course/ch2/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p> <p>Create vector Manipulate vector Index vector Index vector, multiple</p> <p>Create matrix Manipulate matrix Index matrix (1) Index matrix (2) Index matrix, square</p> <p>Write problem 1</p> <p>Create a vector consisting of the first ten prime numbers called PRIMES  \u2395\u2190 Submit <p></p></p> <p>Write problem 2</p> <p>Create a vector called POWER of value 2 to the power of PRIMES, minus two  \u2395\u2190 Submit <p></p></p> <p>Write problem 3</p> <p>Divide the vector POWER by PRIMES  \u2395\u2190 Submit <p></p></p> <p>Write problem 4</p> <p>Create the word \"BUNNY\" by indexing the alphabet vector \u2395A  \u2395\u2190 \u2395A[ Submit <p></p></p> <p>Write problem 5</p> <p>The following matrix CIPHER consists of shifted versions of the alphabet for every row. <pre><code>      CIPHER\n  ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  BCDEFGHIJKLMNOPQRSTUVWXYZA\n  CDEFGHIJKLMNOPQRSTUVWXYZAB\n  DEFGHIJKLMNOPQRSTUVWXYZABC\n  EFGHIJKLMNOPQRSTUVWXYZABCD\n  FGHIJKLMNOPQRSTUVWXYZABCDE\n  GHIJKLMNOPQRSTUVWXYZABCDEF\n  HIJKLMNOPQRSTUVWXYZABCDEFG\n  IJKLMNOPQRSTUVWXYZABCDEFGH\n  JKLMNOPQRSTUVWXYZABCDEFGHI\n  KLMNOPQRSTUVWXYZABCDEFGHIJ\n  LMNOPQRSTUVWXYZABCDEFGHIJK\n  MNOPQRSTUVWXYZABCDEFGHIJKL\n  NOPQRSTUVWXYZABCDEFGHIJKLM\n  OPQRSTUVWXYZABCDEFGHIJKLMN\n  PQRSTUVWXYZABCDEFGHIJKLMNO\n  QRSTUVWXYZABCDEFGHIJKLMNOP\n  RSTUVWXYZABCDEFGHIJKLMNOPQ\n  STUVWXYZABCDEFGHIJKLMNOPQR\n  TUVWXYZABCDEFGHIJKLMNOPQRS\n  UVWXYZABCDEFGHIJKLMNOPQRST\n  VWXYZABCDEFGHIJKLMNOPQRSTU\n  WXYZABCDEFGHIJKLMNOPQRSTUV\n  XYZABCDEFGHIJKLMNOPQRSTUVW\n  YZABCDEFGHIJKLMNOPQRSTUVWX\n  ZABCDEFGHIJKLMNOPQRSTUVWXY\n</code></pre> The Caesar cipher encrypts a phrase by shifting all its letters by a specific amount along the alphabet. For example, \"ARENA\" becomes \"RIVER\" under a shift of 9 places. Use indexing of the above matrix to encipher the word \"BUNNY\" by shifting its letters 17 places.  \u2395\u2190 CIPHER[ Submit <p></p></p> <p>Write problem 6</p> <p>Consider the following ASCII art stored in a matrix called ART <pre><code>      APL\n     ._________________.\n     |.---------------.|\n     ||  __  ____ __  ||\n     || / _\\(  _ (  ) ||\n     ||/    \\) __/ (_/||\n     ||\\_/\\_(__) \\____||\n     ||_______________||\n     /.-.-.-.-.-.-.-.-.\\\n    /.-.-.-.-.-.-.-.-.-.\\\n   /.-.-.-.-.-.-.-.-.-.-.\\\n  /______/__________\\_____\\ \n  \\_______________________/\n</code></pre> Create a matrix called APL which consists of the following subarray obtained by indexing ART <pre><code>  __  ____ __ \n / _\\(  _ (  )  \n/    \\) __/ (_/ \n\\_/\\_(__) \\____        \n</code></pre> \u2395\u2190 ART[ Submit <p></p></p> <p>Write problem 7</p> <p>Create a 3 by 3 grid of 'X's and 'O's called BOARD   \u2395\u2190 'XO' Submit <p></p></p> <p>Write problem 8</p> <p>Considering the above array as a game of noughts and crosses, change a single element to make the O player win.  \u2395\u2190 BOARD[ Submit <p></p></p> <p>Write problem 9</p> <p>Given the coefficients list C of a quadratic $P(x) = C[1] x^2 + C[2] x + C[3]$, evaluate the polynomial for a value X. For example, for C \u2190 1 2 3, and X \u2190 10, this should evaluate to $ 1 \\cdot 10^2 + 2 \\cdot 10 + 3 = 123 $.  \u2395\u2190 Submit <p></p></p> <p>Write problem 10</p> <p>Consider the following list of GAMES <pre><code>      GAMES\nCHESS                   \nCHECKERS                \nBACKGAMMON              \nPOKER                   \nGLOBAL THERMONUCLEAR WAR\n</code></pre> Get the first letter of each of the games listed using indexing  \u2395\u2190 GAMES[ Submit <p></p></p> <p>Write problem 11</p> <p>Get the first three letters of the second and fifth game listed above using indexing  \u2395\u2190 GAMES[ Submit <p></p></p> <p>Write problem 12</p> <p>Consider a tape-controlled computer which operates by reading a certain section of a tape, changing its internal state based on the value of that section, writing a certain value to that section, then possibly moving the tape along to the next or previous section. For this specific machine, the value of the tape sections is either a 1 or a 2, the internal state of the machine is either 1 2 or 3, and the matrix which specifies the actions to be taken is the following <pre><code>      INSTRUCTIONS\n  \u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n  \u25021 R 2\u25021 L 1\u25021 L 2\u2502\n  \u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n  \u25021 L 3\u25021 R 2\u25021 N H\u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> The first value in each element is what to write to the section of tape, the second whether to move right 'R' left 'L' or stay in place 'N', and the last value is the next state of the machine 1, 2, 3, or 'H' for halting the machine.</p> <p>The first (second) row of the matrix specifies the possible instructions when the value of the section of tape is a 1 (2). The columns similarly specify the possible instructions depending on the state of the machine.</p> <p>Using indexing, find the instruction for the tape section having value 1 when the machine is in state 3.</p> <p> \u2395\u2190 INSTRUCTIONS[ Submit <p></p></p>"},{"location":"course/ch3/bonus/","title":"Bonus content: A Musical Interlude","text":"<p>This part is optional</p> <p>This part is considered to be bonus content. It contains some more advanced topics that are not covered in the main course. It can also give some examples of functions and topics that are introuced later in the course. There are no exercises related to this content.</p> <p>Feel free to skim or skip this section for now, and return to it later!</p> <p>In addition to a linear progression of ideas, this course will have several projects that showcase features of the language in a non-linear order. These projects will use ideas or operations that might not have been covered yet, so brief explanations will be given, anticipating more complete explanations in later chapters.</p> <p>In this project, we will use basic music theory to algorithmically generate melodies entirely in APL.</p>"},{"location":"course/ch3/bonus/#the-theoretical-minimum","title":"The Theoretical Minimum","text":"<p>For most people, the sensation of sound is mediated through the ears. The ears achieve this by allowing vibrations in the air to produce waves in the fluids of the inner ear, stimulating the inner ear hair cells whose signals are eventually processed by the brain. </p> <p>The pitch of a sound is the frequency of this vibration. \"Notes\" distinguish sounds by their pitch. In western music, the standard convention is to consider pitches whose ratio is a power of 2 as equivalent notes, this is called \"octave equivalence\". Equivalent notes with higher or lower pitch are said to be an \"octave\" above or below the note, for reasons that will be made clear.</p> <pre><code>      \u235d For example, between the pitches 440Hz and 880Hz,\n      \u230a440\u00d7(2*(\u237311)\u00f712)\n466 493 523 554 587 622 659 698 739 783 830\n      \u235d \u230a        Floor of\n      \u235d 440\u00d7     440 times\n      \u235d 2*       2 to the power of\n      \u235d (\u237311)\u00f712  the numbers 1,2,3,...,11 divided by 12\n</code></pre> <p>Notes are labelled using the seven letters A through G,  with sharps (\u266f) and flats (\u266d) to signify the notes in-between by raising or lowering pitch, with redundancy. There are eight letters from A through G back to A, justifying the use of the word \"octave\". Starting from C, the twelve notes are C, C\u266f or D\u266d, D, D\u266f or E\u266d, E, F, F\u266f or G\u266d, G, G\u266f or A\u266d, A, A\u266f or B\u266d, and B.</p> <p>A musical scale is a certain selection of these notes, usually spanning an octave. In our case, we will restrict ourselves to using the C major scale, the notes C, D, E, F, G, A, B. The notes of a major scale are usually referred to using an ordinal number from 1st through 7th, or by roman numerals I, II, III, IV, V, VI, VII.</p>"},{"location":"course/ch3/bonus/#implementation","title":"Implementation","text":"<p>From the above discussion, the problem is now clear. Given some starting note, we want to generate movements between the notes with some preference for certain special movements. </p> <p></p> <p>In the table above, red numerals represent a preferred following note. For example, we want VI to resolve to a  V  more frequently than to move to a  VII  or down to a  IV . Note that the next note depends only on the previous note, so we can represent this data as a graph.</p> <p></p> <p>Then, the data is a list of triples, consisting of the starting note, the ending note, and the color (or, priority) of the arrow between those notes. We can lay out this data in the form of a table as follows, where the row represents the starting note and the column represents the ending note. For example, the first row says that, for I as the starting note, we can get to I itself, II, or III with equal preference, 1 1 1.</p> <p></p> <p>We use  1  for standard movements and  2  for preferred movements. Let\u2019s write try to create this matrix in APL using the reshape \u2374 operator, remembering that if the right argument is not long enough, it will repeat it to fill the required dimensions.</p> <pre><code>      M \u2190 7 7 \u2374 1 1 1 0 0 0 0\n      M\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n1 1 1 0 0 0 0\n      \u235d Not quite\n      M \u2190 7 7 \u2374 1 1 1 0 0 0 0 0\n      M\n1 1 1 0 0 0 0\n0 1 1 1 0 0 0\n0 0 1 1 1 0 0\n0 0 0 1 1 1 0\n0 0 0 0 1 1 1\n0 0 0 0 0 1 1\n1 0 0 0 0 0 1\n      \u235d Closer\n      M \u2190 7 7 \u2374 1 1 0 0 0 0 0 1\n      M\n1 1 0 0 0 0 0\n1 1 1 0 0 0 0\n0 1 1 1 0 0 0\n0 0 1 1 1 0 0\n0 0 0 1 1 1 0\n0 0 0 0 1 1 1\n0 0 0 0 0 1 1\n      \u235d Getting there\n      M \u2190 7 7 \u2374 1 1 1 0 0 0 1 1\n      M\n1 1 1 0 0 0 1\n1 1 1 1 0 0 0\n1 1 1 1 1 0 0\n0 1 1 1 1 1 0\n0 0 1 1 1 1 1\n0 0 0 1 1 1 1\n1 0 0 0 1 1 1\n      \u235d Almost exactly what we want\n</code></pre> <p>Our melodies here are restricted to one octave. If we allowed a wider range, we would allow the 7th to go to the 1st of the next octave and vice versa.</p> <pre><code>      M[7;1]\u21900\n      M[1;7]\u21900\n      M[6;5]\u21902\n      M[4;3]\u21902\n      M[2;1]\u21902\n      M[2;3]\u21902\n      M\n1 1 1 0 0 0 0\n2 1 2 1 0 0 0\n1 1 1 1 1 0 0\n0 1 2 1 1 1 0\n0 0 1 1 1 1 1\n0 0 0 1 2 1 1\n0 0 0 0 1 1 1\n      \u235d Perfect\n</code></pre> <p>The next step is to figure out, given a note, what the next possible notes are. This is very easily done using the matrix multiplication +.\u00d7 operator. This operator is actually the inner product operator . applied to the functions + and \u00d7, see [Inner and Outer product section]. Represent a note with scale degree N as a vector with a 1 in the Nth slot, and 0 otherwise, then matrix multiplication with M represents picking out the Nth row, which as we mentioned above corresponds to selecting the edges in the graph where N is the starting note.</p> <p>Recall that \u23737 is 1 2 3 4 5 6 7, this is equivalent to 2=1 2 3 4 5 6 7  The subsequence notes are I (Preferred), II, III (Preferred), and IV</p> <pre><code>      II \u2190 2=\u23737\n      II\n0 1 0 0 0 0 0\n      II+.\u00d7M\n2 1 2 1 0 0 0\n</code></pre> <p>Using this, we want to decide on a movement to another note, weighed by priority. One easy way to achieve this is using the roll ? function, which simulates the rolling of a dice with faces numbering 1 to the right argument. We will roll one die from 1 to 10, or 20 for preferred movements, for every possible following note, and pick the largest result.</p> <p>The subsequent notes are I, II, III, and IV  Multiplying by 10 to prepare to roll dice with 10, or 20, faces   Notice that ? 0 returns a random real number between 0 and 1  The Grade Down operator \u2352 returns the indices of the elements of the list from largest to smallest   Getting the index of the largest roll. This is III.</p> <pre><code>      N\u2190II+.\u00d7M\n      N      \n2 1 2 1 0 0 0\n      N\u00d7\u219010\n      N\n20 10 20 10 0 0 0\n      NR\u2190?N\n      NR\n3 8 13 0.9740484038 0.3581395503 0.5245918312\n      \u2352 100 200 0.1 1\n2 1 4 3\n      \u2352 NR\n3 2 1 4 6 5\n      1\u2337\u2352NR\n      3\n      (\u23737)=1\u2337\u2352NR\n0 0 1 0 0 0 0\n</code></pre> <p>This is the basic algorithm we will use to generate our melodies. Let\u2019s enclose our note generation algorithm in a direct function and generate a melody.</p> <p>A direct function/dfn (pronounced dee-fun) is defined using {curly braces}. The right argument to the function is called \u2375, and the left \u237a.  Statements in a dfn can be separated by a \u22c4 diamond. However, only it stops as soon as a statement which returns a value is evaluated  The replicate / operator generates copies of its right argument elements depending on their left arguments  In this case, it replicates 0 of everything other than one copy of D</p> <pre><code>        10 {\u237a+\u2375} 2\n12\n      10 {\u237a+\u2375 \u22c4 \u237a-\u2375} 2 \n12\n\n      NEXT\u2190{(\u23737)=1\u2337\u2352?(\u2375\u00d710)+.\u00d7M} \n      NEXT 1 0 0 0 0 0 0\n0 1 0 0 0 0 0\n\n      NOTES\u2190'CDEFGAB'\n      (0 1 0 0 0 0 0)/NOTES\nD\n</code></pre> <p> </p> <pre><code>      MELODY\u2190{res \u2190 NEXT \u2375 \u22c4 \u235e\u2190res/NOTES \u22c4 MELODY res}\n        MELODY 1 0 0 0 0 0 0\nCDCECEGBGAGGGBBAAGBGEDEDFFEDCDCDECCDCECDECECEFEFEEGEGECEFEDEGBBBGBG\n</code></pre> <p>This function will run forever, generating notes until interrupted. One way of running the defun for a fixed number of steps is to add a variable representing the number of steps. We will use the left argument \u237a as this variable.</p> <p><pre><code>      MELODY\u2190{ \u237a \u2190 0 \u22c4 \u237a&gt;20: '\u266b' \u22c4 res \u2190 NEXT \u2375 \u22c4 \u235e\u2190res/NOTES \u22c4 (\u237a+1) MELODY res}\n      MELODY 1 0 0 0 0 0 0\nCCDEGAFDCEGFDEDCDCECC\u266b\n</code></pre> Assigning a value to the left argument \u237a gives a dfns a default left argument. The assignment is only executed if the function is called monadically, that is, if there is no supplied left argument. In this case, the left argument \u237a starts at 0. The generation of the next note, the \"(\u237a+1) MELODY res\" statement, is executed with an incremented left argument. The guarded expression \u237a&gt;20: '\u266b' states that \u266b is returned when \u237a is becomes greater than 20. Since the execution of a dfn stops as soon as a statement returns a value, the code to generate the next note is no longer executed.</p> <p>This is the result we were after! With just a couple lines of APL, we were able to encode general guidelines for melodic composition and write a function generating random melodies according to these principles algorithmically by tracing out a random walk through a graph. These random graph processes are more generally known as Markov Processes and have a much broader range of applicability than our case here. Applications include the Google PageRank algorithm which powered the Google search engine, particle physics simulations of quantum field theory on a lattice, and speech recognition systems. </p> <p>There is clearly so much more we could add to our program, from generating rhythm to accompany the melody, to adding chord progressions and harmony, and there will always be more to add. We will however stop here to enjoy the melodies our program has generated, and leave it up to the interested reader to write their own digital musicians.</p> <p>Some of the generated melodies are included below.</p> <p>  Your browser does not support the audio element.  </p> <p>  Your browser does not support the audio element.  </p> <p>  Your browser does not support the audio element. </p>"},{"location":"course/ch3/part1/","title":"Fun for everyone","text":"<p>This part will cover</p> <ul> <li>Defining your own functions using dfns</li> <li>The alpha and omega parameters</li> </ul> <p>Now that we know how data is structured in APL, it\u2019s time to look at how to use this data, more specifically, how to make your own functions from already existing ones.</p> <p>You are an engineer sitting at your cubicle. You are currently orbiting the Earth at an altitude of 160m at a speed of 1,600km/h.</p> <p>In brief intervals of time spent waiting between tasks, you have to organise project data in your data management system. Unfortunately for you, your clients all use different units of measurement, and none of your colleagues seem to share your enthusiasm for avoiding misunderstanding. Fortunately for your company, you\u2019ve decided to use your APL skills to avoid a Mars Climate Orbiter-like disaster.</p> <p>One of the ways of defining a function, taking in array arguments and outputting an array result, is using direct functions abbreviated dfn. (\"dee-fun\") A dfn is a series of statements, where the special characters \u237a and \u2375 represent the left and right arguments to the function. Functions always require a right argument. You start with the basic conversions your current project requires, and a couple fun ones just for yourself.</p> <pre><code>      FtoC \u2190 {(5 \u00d7 \u2375 - 32)\u00f79}\n      FtoC 451\n232.7777778\n      CtoF \u2190 {32 + (9 \u00d7 \u2375) \u00f7 5}\n      CtoF \u00af273.15\n\u00af459.67\n      CtoF FtoC 100\n100\n\n      \u235d Centimeters to feet and inches\n      CmtoIn \u2190 {\u230a\u2375\u00f72.54}\n      CmtoFtIn \u2190 {\n            (\u230a(CmtoIn \u2375) \u00f7 12),(12 | (CmtoIn \u2375))\n      }\n\n      CmtoFtIn 30\n0 11\n      CmtoFtIn 180\n5 10\n      CmtoFtIn 300\n9 10\n\n      \u235d From decibels to bels \n      dBtoB \u2190 {\u2375\u00f710} \n      \u235d From decibels back to a power ratio\n      dBtoratio \u2190 {10*dBtoB \u2375} \n    dBtoRatio 60\n1000000\n      dBtoRatio 3\n1.995262315\n\n\n      \u235d Pythagorean theorem\n      hypotenuse \u2190 {((\u237a*2)+\u2375*2)*0.5} \n      3 hypotenuse 4\n5\n      6 hypotenuse 8\n10\n      5 hypotenuse 12\n13\n      1 hypotenuse 3*.5\n2\n\n      \u235d golden ratio\n      PHI \u2190 0.5\u00d7 1 + 5*.5 \n      fibonacci \u2190 {((PHI*\u2375) - (-PHI)*-\u2375) \u00f7 (\u00af1 + 2\u00d7PHI)}\n      fibonacci \u23737\n1 1 2 3 5 8 13\n      fibonacci 10\n55\n</code></pre> <p>Note that for the Fibonacci function, a constant value phi for the golden ratio was used. If the value of phi is changed, the Fibonacci function will use the updated value. </p> <p>In order to let the Fibonacci function define its own phi, we have to define it inside the function itself. APL allows any number of assignment statements inside a function before the statement which evaluates the result, using the diamond-shaped statement separator \u22c4, or placing the statements on new lines. The following two functions are equivalent.</p> <pre><code>      fibonacci \u2190 {PHI \u2190 0.5\u00d7 1 + 5*.5 \u22c4 ((PHI*\u2375) - (-PHI)*-\u2375) \u00f7 (\u00af1 + 2\u00d7PHI)}\n      fibonacci \u2190 {\n            PHI \u2190 0.5\u00d7 1 + 5*.5\n            ((PHI*\u2375) - (-PHI)*-\u2375) \u00f7 (\u00af1 + 2\u00d7PHI)\n      }\n\n      separator_test \u2190 {a \u2190 1 \u22c4 a + a \u22c4 a - a}\n      \u235d The empty vector character \u236c is added here as filler since functions always require a right argument\n      separator_test \u236c\n2\n</code></pre> <p>As seen with the last function, any code beyond the first statement which produces a value is not evaluated.</p> <p>Variable Scope</p> <p>In dfns, while it is possible to access variables outside the function, it is not possible to assign to them. All quantities assigned in dfns are said to be local to the function itself.</p> <p>```apl        i \u2190 10        d_increment \u2190 {i\u2190i+1 \u22c4 i}</p> <pre><code>   i\n</code></pre> <p>10        increment \u236c 11        i 10</p> <p>Multiline support in RIDE</p> <p>In order to write multiline functions in the Dyalog RIDE, \"Extended Multiline Input\" needs to be enabled. It can be found in the Session tab under Options&gt;Configure.</p>"},{"location":"course/ch3/part2/","title":"All the math","text":"<p>This part will cover</p> <ul> <li>Basic mathematical operations</li> <li>Calculating things</li> </ul> <p>Being an engineer, you have a lot of varied computational needs which require a large range of mathematical functions. </p> <p>Thankfully, APL comes with a lot of math functions! Here we go through a bunch of them, so you can always come back to check. Remember to also check the toolbar in TryAPL and RIDE, they come with very helpful tooltips to remind you what an operator does!</p> <p>The notation of ceiling \u2308x\u2309 and \u230ax\u230b floor in mathematics matches with the corresponding APL functions, in fact, the notation of ceiling and floor (and the use of those words to describe rounding up and down) comes from APL! Before APL, there was no consistent standard to represent the ceiling and floor functions. Ceiling rounds up to the nearest integer, and floor rounds down to the nearest integer.</p> <p>Monadic <code>\u2308</code> and <code>\u230a</code> : Ceil &amp; Floor <pre><code>      \u2308 2.5 2.6 \u00af2.5 \u00af2.6 \n3 3 \u00af2 \u00af2\n\n      \u230a 2.5 2.6 \u00af2.5 \u00af2.6 \n2 2 \u00af3 \u00af3\n</code></pre></p> <p>Dyadic <code>\u2308</code> and <code>\u230a</code> : Max &amp; Min <pre><code>      4 \u2308 5 \u235d This simply returns the larger argument\n5\n      4 \u230a 5 \u235d This is for the smaller one\n4\n      4 \u2308 1 3 5 7 9 8 6 4 2 0 \u235d \"Clips\" the value of elements to a minimum\n4 4 5 7 9 8 6 4 4 4\n      4 \u230a 1 3 5 7 9 8 6 4 2 0 \u235d Similarly \"clips\" down\n1 3 4 4 4 4 4 4 2 0\n</code></pre></p> <p>The \"modulo\" operator in other languages is called the residue in APL, and the order of the arguments is reversed. The residue function calculates the residue of the division of the right argument by the left.</p> <p>Dyadic <code>|</code> : Residue <pre><code>      \u235d 100 - 13 \u00d7 7 = 9, note this is in reverse order as `%` operator in C\n      13 | 100 \n9\n\n      \u235d \u00af100 - 13 \u00d7 \u00af8 = 4\n      13 | \u00af100 \n4\n\n      \u235d 100 - \u00af13 \u00d7 \u00af8 = 4\n      \u00af13 | 100 \n\u00af4\n\n      \u235d \u00af100 - \u00af13 \u00d7 7 = \u00af9\n      \u00af13 | \u00af100 \n\u00af9\n\n      \u235d Also works for non-integers!\n      \u235d 10 - 3.3 \u00d7 3 = 0.1\n      3.3 | 10 \n0.1\n\n      \u235d 3 - 0 = 3\n      0 | 3 \n3\n</code></pre></p> <p>The residue function X|Y in APL can be written in terms of previously discussed functions. In fact, from the definition as the remainder of division, we might think it's defined as <code>Y-X\u00d7(\u230aY\u00f7X)</code>; however, <code>Y\u00f7X</code> is not defined when <code>X</code> is zero. We'd want a function that is equal to 1 when X is 0, and X when X is not zero, <code>X+(X=0)</code> is one solution.</p> <pre><code>      \u235d X|Y is\n      Y-X\u00d7(\u230aY\u00f7(X+(X=0)))\n      \u235d Without the unnecessary parentheses\n      Y-X\u00d7\u230aY\u00f7X+X=0\n</code></pre> <p>The residue operation here (which is the least absolute remainder) is different from the euclidean remainder (the least positive remainder), to obtain it simply subtract divisor back if the result is negative. <pre><code>      mod\u2190{(\u2375|\u237a)&lt;0:(\u2375|\u237a)-\u2375 \u22c4 \u2375|\u237a}\n      \u00af13 mod \u00af3\n2\n      \u00af14 mod \u00af3\n1\n      \u00af15 mod \u00af3\n0\n</code></pre></p> <p>APL also natively supports complex numbers, which makes it attractive for uses in, for example, quantum computing. A complex number is represented as XJY, where X is the real part and Y is the imaginary part. In mathematical notation, $ XJY = X + i Y $.</p> <p>Monadic <code>|</code> : Absolute value, Magnitude <pre><code>      \u235d Absolute value of \u00af1 is ...\n      | \u00af1 \n1\n      \u235d Applying to complex numbers\n      | 0J1 3J4 \n1 5\n</code></pre></p> <p>Dyadic <code>\u2228</code> &amp; <code>\u2227</code> : GCD and LCM <pre><code>      \u235d Greatest Common Divisor\n      12 \u2228 10\n2\n      \u235d Least Common Mutiple\n      12 \u2227 10\n60\n      \u235d The result is non-negative for GCD\n      \u00af2 \u2228 \u00af15 \n1\n      \u235d But the LCM is defined as product of two numbers divided by their GCD, so it could be negative\n      \u00af4 \u2227 10 \n\u00af20\n</code></pre></p> <p>As suggested by the choice of glyphs for these two operations, these two operations are also used for the boolean logic \"or\" and \"and\" operations. More on this in the next section.</p> <p>Monadic <code>+</code> : Complex Conjugate <pre><code>      + 0j1 1j\u00af1 3j4\n0J\u00af1 1J1 3J\u00af4\n</code></pre></p> <p>Monadic <code>-</code> : Negate <pre><code>      - 4 \u00af5 6\n\u00af4 5 \u00af6\n      \u235d Remember this is different from \u00af, since it could be monadic and also applies to the whole array\n      \u235d Here, -4 -5 -6 is -(4-(5-6)) = \u00af5\n      -4 -5 -6 \n\u00af5\n</code></pre></p> <p>Monadic <code>\u00d7</code> : Sign/Direction <pre><code>      \u00d7 0 3 \u00af3\n0 1 \u00af1\n      \u00d7 3J4 \u00af6J8 7J24\n0.6J0.8 \u00af0.6J0.8 0.28J0.96\n</code></pre></p> <p>Monadic <code>\u25cb</code> : Pi Times <pre><code>      \u25cb 1\n3.141592654\n      \u25cb 2\n6.283185307\n      \u25cb 0.5\n1.570796327\n      \u25cb 0J1\n0J3.141592654\n</code></pre></p> <p>Dyadic <code>\u25cb</code> : Trigonometric Functions</p> <p>The dyadic circle <code>\u25cb</code> function applies a trigonometric function to its right argument depending on its left argument.</p> <pre><code>       \u235d Sine of an approximation to PI\n       1 \u25cb \u25cb 1\n1.224646799E\u00af16\n\n       \u235d Cosine of zero\n       2 \u25cb 0\n1\n\n       \u235d Tangent of 0.5\n       3 \u25cb 0\n0.5463024898\n\n       \u235d Cosine of I\n       2 \u25cb 0J1\n1.543080635\n</code></pre>"},{"location":"course/ch3/part3/","title":"Relational and logical functions","text":"<p>This part will cover</p> <ul> <li>Functions used to compare values</li> <li>Comparing vectors and scalars</li> <li>Functions used to perform bitwise operations</li> <li>Bitwise operations on scalars and vectors</li> </ul> <p>APL also comes the standard comparison functions, with the expected representative symbols.</p> <p>Dyadic <code>=</code>, <code>\u2260</code>, <code>\u2264</code>, <code>&lt;</code>, <code>&gt;</code>, <code>\u2265</code> : Comparison Functions <pre><code>      0 = 0\n1\n      0 \u2260 0\n0\n      3 \u2264 3\n1\n      3 &lt; 3\n0\n      \u235d Getting a mask for numbers which divide 2\n      0 = 2 | 1 2 3 4 5 6 7 8 9 10\n0 1 0 1 0 1 0 1 0 1\n</code></pre></p> <p>Note that when you use these functions over two vectors, the result is a vector, denoting the function element wise. To compare arrays, use the dyadic \u2261 match function.</p> <pre><code>      1 2 1 4 5 2 5 2 3 2 = 1 2 3 4 5 2 3 2 4 2\n1 1 0 1 1 1 0 1 0 1\n      1 2 1 4 5 2 5 2 3 2 \u2264 1 2 3 4 5 2 3 2 4 2\n1 1 1 1 1 1 0 1 1 1\n      1 2 1 4 5 2 5 2 3 2 \u2261 1 2 3 4 5 2 3 2 4 2\n0\n      1 2 1 4 5 2 5 2 3 2 \u2261 1 2 1 4 5 2 5 2 3 2\n1\n\n      'Hello' \u2261 'hello'\n0\n      'hello' \u2261 'hello'\n1\n</code></pre> <p>One useful feature of APL in real-world applications is the ability to change the tolerance of comparison when it comes to floating point values (except for comparison against zero!), and the displayed precision of numbers. The tolerance can be read (and set) via the \u2395CT system variable, and the precision shown is read (and set) via \u2395PP. The tolerance can be anything from 0 (exact comparisons) to 10*\u00af10.</p> <pre><code>      \u235d 1 + Sine of Pi\n      X \u2190 1 + 1 \u25cb \u25cb 1\n      X\n1\n\n      \u2395PP \u2190 20\n      X\n1.0000000000000002\n\n      \u2395CT \u2190 0\n      1 = X\n0\n\n      \u2395CT \u2190 1E\u00af10\n      1 = X\n1\n</code></pre> <p>An amusing quote from the APL Wiki about comparison tolerance</p> <p>In an early talk Ken was explaining the advantages of tolerant  comparison. A member of the audience asked incredulously, \"Surely  you don't mean that when A=B and B=C, A may not equal C?\" Without  skipping a beat, Ken replied, \"Any carpenter knows that!\" and went on to the next question. </p> <p>\u2014Paul Berry</p> <p>As suggested by the choice of glyphs for the Greatest Common Divisor \u2227 and the Least Common Multiple \u2228, these two operations are also used for the boolean logic \"or\" and \"and\" operations. This is because 0 is divisible by everything, as the remainder is always 0. So the Greatest Common Divisor of 0 and x is just x, since x divides both 0 and x. Dually, 0 is also a multiple of everything, so the Least Common Multiple of 0 and x is just 0, since 0 is a multiple of both x and 0 (and it\u2019s the smallest!).</p> <pre><code>      3 \u2227 0\n0\n      0 \u2228 3\n3\n      \u235d Checking for numbers which divide 3\n      triples \u2190 0 = 3 | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n      triples\n0 0 1 0 0 1 0 0 1 0 0 1 0 0 1\n\n      \u235d Checking for numbers which divide 5\n      quintuples \u2190 0 = 5 | 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n      quintuples\n0 0 0 0 1 0 0 0 0 1 0 0 0 0 1\n\n      \u235d Checking for numbers which divide 3 and 5\n      triples \u2227 quintuples\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 1\n\n      \u235d Checking for numbers which divide 3 or 5\n      triples \u2228 quintuples\n0 0 1 0 1 1 0 0 1 1 0 1 0 0 1\n</code></pre> <p>Monadic <code>~</code> : Logical Not Dyadic <code>\u2372</code> &amp; <code>\u2371</code> : Logical Nand and Logical Nor <pre><code>      ~ 1 1 0 1 1\n0 0 1 0 0\n\n      \u235d However, this operator is truly logical\n      \u235d You cannot take the not of a non-0 non-1 number\n      ~ 3 \nDOMAIN ERROR\n      ~3\n      \u2227\n\n      \u235d Numbers which divide anything other than both 3 and 5\n      triples \u2372 quintuples\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 0\n\n      \u235d Numbers which divide anything other than either 3 or 5\n      1 1 0 1 1 \u2371 1 0 1 0 1 \n1 1 0 1 0 0 1 1 0 0 1 0 1 1 0\n</code></pre></p>"},{"location":"course/ch3/part4/","title":"Installing Dyalog","text":"<p>This part will cover</p> <ul> <li>Instructions on installing the Dyalog IDE, Dyalog RIDE, and Dyalogscript</li> <li>Basic usage instructions</li> </ul>"},{"location":"course/ch3/part5/","title":"Traditional fun","text":"<p>Move this section to Chapter 7</p> <p>This section should be introduced in Chapter 7</p> <p>This part will cover</p> <ul> <li>Traditional functions</li> <li>Variable Scope</li> </ul> <p>Another way of defining functions is using traditional functions, abbreviated tradfn. (\"trad-fun\") These functions look a lot more similar to functions in imperative programming languages.</p> <pre><code>       \u2207 (R1 R2) \u2190 solve_quadratic A B C;root;vertex \n          root \u2190 ((B*2)-4\u00d7A\u00d7C)*1\u00f72\n          vertex \u2190 -B\u00f72\u00d7A\n          R1 \u2190 vertex + root\u00f72\u00d7A\n          R2 \u2190 vertex - root\u00f72\u00d7A\n       \u2207\n       solve_quadratic 1 \u00af1 \u00af1\n1.618033989 \u00af0.6180339887\n\n       \u235d \u2207 results \u2190 name arguments;local_variable1;local_variable2\n       \u235d   ...\n       \u235d   Instructions\n       \u235d   ...\n       \u235d   results \u2190 values\n       \u235d \u2207\n</code></pre> <p>Tradfns are delimited by dels \u2207 and consist of a header and body. The header defines the (left or right) arguments, the variables which are local to that function (variables which do not affect the rest of the workspace), and the values that are returned. Above, the arguments are A B and C, with local variables root and vertex, returning the vector (R1 R2).</p> <p>If we try to access any of the local variables of the function outside the function, we will encounter an error. </p> <pre><code>       R1\nVALUE ERROR: Undefined name: R1\n       vertex\nVALUE ERROR: Undefined name: vertex\n</code></pre> <p>Instead of guarded expressions, there are control flow structures like :If and :For. We will see these structures in detail in Chapter 7.</p> <p>Variable Scope</p> <p>In tradfns, variables outside the function can be accessed and modified unless specified to be local. In dfns however, while it is possible to access variables outside the function, it is not possible to assign to them. <pre><code>       i \u2190 10\n       d_increment \u2190 {i\u2190i+1 \u22c4 i}\n\n       i\n10\n       increment \u236c\n11  \n       i\n10\n\n       \u2207 res \u2190 t_increment\n               i \u2190 i+1\n           res \u2190 i\n       \u2207\n\n       i\n   10\n          t_increment\n11\n       i\n   11\n</code></pre></p> <p>The follwing code gets the final velocities of a one-dimensional perfectly elastic collision of two objects with initial velocities u1 and u2 and masses m1 and m2.</p> <pre><code>   \u2207 (v1 v2) \u2190 collision (u1 u2 m1 m2);rsumM;diffM\n      rsumM \u2190 \u00f7m1+m2\n      diffM \u2190 m1-m2\n      v1 \u2190 (diffM \u00d7 rsumM \u00d7 u1) + 2 \u00d7 m2 \u00d7 rsumM \u00d7 u2\n      v2 \u2190 (2 \u00d7 m1 \u00d7 rsumM \u00d7 u1) - diffM \u00d7 rsumM \u00d7 u2\n   \u2207\n   \u235d Collision of two object moving with opposite velocities towards each other\n   \u235d where one object is twice as massive\n   \u235d \u2218\u2192  \u2190\u25cb\n   collision 1 \u00af1 1 2\n\u00af1.666666667 0.3333333333\n</code></pre>"},{"location":"course/ch3/part6/","title":"Infinite fun","text":"<p>This part will cover</p> <ul> <li>How to define recursive dfns</li> <li>Guard syntax in dfns</li> </ul> <p>The engineer sits hunched over their cubicle, focused as they diligently type out</p> <pre><code>   1+(0.99)+(0.99*2)\n2.9701\n\n   1+(0.99)+(0.99*2)+(0.99*3)+(0.99*4)\n4.90099501\n\n   1+(0.99)+(0.99*2)+(0.99*3)+(0.99*4)+(0.99*5)+(0.99*6)+(0.99*7)+(0.99*8)+(0.99*9)\n9.561792499\n</code></pre> <p>In the back of their mind, they know the task they are trying to achieve is impossible, approximating the sum of powers of 0.99 to a reasonable precision would take thousands of terms. Their anxiety grows as they reach the 20th term, the line of terms now stands longer than their computer monitor.</p> <p>A coworker suggested using a function, and provided some code to evaluate the sequence. Not wanting their skills to be overshadowed, the engineer refused the help and started creating their own function </p> <pre><code>      a \u2190 {0.99*\u2375}\n      (a 0)+(a 1)+(a 2)+(a 3)+(a 4)+(a 5)+(a 6)+(a 7)+(a 8)+(a 9)+(a 10)\n9.561792499\n</code></pre> <p>Now reaching the 50th term, the series is no closer to being evaluated. The infinite seems always just out of grasp. Resting their chin in their palm, they let their mind wander. If variables can refer to functions, and functions can use variables, can functions refer to and call themselves?</p> <p>With a renewed burst of motivation, looking over their shoulder, they write the following</p> <pre><code>      function \u2190 {function \u2375+1}\n      function 1\n</code></pre> <p>Nothing seems to be happening, adding a \u2395 quad to look at intermediate values,</p> <pre><code>      function \u2190 {\n            \u2395 \u2190 \u2375\n            function \u2375+1\n      }\n      function 1\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n...\n</code></pre> <p>They quickly halt the program using <code>Action &gt; Interrupt</code> in RIDE, through a rush of fear and excitement. realising an infinite number of computations have been specified with a finite number of symbols, by calling the function within itself. The special symbol <code>\u2207</code> can also be used in place of the function name. Trying to do this for the infinite sum,</p> <pre><code>      sum \u2190 {\n            \u2395 \u2190 \u2375\n            (\u237a+1) sum \u2375+0.99*\u237a\n      }\n      0 sum 0\n0\n1\n1.99\n2.9701\n3.940399\n4.90099501\n5.85198506\n6.793465209\n7.725530557\n8.648275252\n9.561792499\n...\n</code></pre> <p>The above function takes in a right argument \u2375 and a left argument \u237a. It displays the right argument \u2375, then applies the function again incrementing the left argument \u237a by one, and adding <code>0.99*\u237a</code> to the right argument \u2375. Expanding it out, <code>0 sum 0</code> gives <code>\u2395 \u2190 0</code> and <code>(0+1) sum 0.99*0</code> which is <code>1 sum 1</code>, giving <code>\u2395 \u2190 1</code> and <code>2 sum 1.99</code>, and so on. That is, the right argument sums up <code>(0.99*0)+(0.99*1)+(0.99*2)+...</code> using the left argument to keep track of what term comes next.</p> <p>However, infinite computations on their own will never be terminate on finite machines, and hence not useful for real computations. Thankfully, there is a way to stop and control these infinite computations, using guarded expressions.</p> <p>Guarded expressions are conditional expressions; they only execute a statement if some condition holds. The engineer rewrites the function, this time stopping the computation if the terms get smaller than <code>10*\u00af10</code>,</p> <pre><code>      sum \u2190 {\n          (10*\u00af10)&gt;0.99*\u237a: \u2395 \u2190 \u2375\n          (\u237a+1) sum \u2375+0.99*\u237a\n      }\n      0 sum 0\n99.99999999\n</code></pre> <p>The guarded expression in the above function is <code>(10*\u00af10)&gt;0.99*\u237a: \u2395 \u2190 \u2375</code>. The guarded expression consists of a logical expression <code>(10*\u00af10)&gt;0.99*\u237a</code> followed by a colon <code>:</code>, and another expression <code>\u2395 \u2190 \u2375</code>, meaning <code>\u2395 \u2190 \u2375</code> will be executed only if <code>0.99*\u237a</code> is less than <code>(10*\u00af10)</code>.</p> <p>Staring excitedly at your computer, you email your coworker and tell them about your solution. Your smile slowly fades as you read that your coworker had a solution that was exact, and required only one computation.</p> <pre><code>      sum_geometric \u2190 {1\u00f71-\u2375}\n      sum_geometric 0.99\n100\n</code></pre> <p>That was embarrasing. You did learn a new programming technique to control infinite amounts of computation, so you try to make the most of it by writing a couple more useful programs.</p> <p>The factorial function is typically defined as f(n) = n * f(n-1), such that f(0)=1. Thinking in terms of guarded expressions, if the argument of the function is 0 the result should be 1 (in symbols, <code>\u2375=0: 1</code>), otherwise multiply the right argument (<code>\u2375</code>) by the result of the function itself (<code>\u2207</code>) evaluated for the right argument minus 1 (<code>\u2375 - 1</code>).  Putting it together, <pre><code>      factorial \u2190 {\u2375=0: 1 \u22c4 \u2375 \u00d7 \u2207 \u2375 - 1} \n</code></pre> This function consists of two statements, separated by the separator <code>\u22c4</code>. The first statement in this function is an example of a guarded expression, if <code>\u2375=0</code> is true, that is, when <code>\u2375</code> is equal to 0, the expression 1 is evaluated. Otherwise, the expression <code>\u2375 \u00d7 \u2207 \u2375 - 1</code> is evaluated.  For example, the evaluation of factorial 2 can be visualised as:</p> <pre><code>           {\u2375=0: 1 \u22c4 \u2375 \u00d7 \u2207 \u2375 - 1} 2\n      \u235d    Since 2=0 is 0, the guarded statement is not evaluated.\n      \u235d    2 \u00d7 \u2207 1\n      \u235d    2 \u00d7 {\u2375=0: 1 \u22c4 \u2375 \u00d7 \u2207 \u2375 - 1} 1\n      \u235d    Since 1=0 is 0, the guarded statement is not evaluated.\n      \u235d    2 \u00d7 1 \u00d7 \u2207 0\n      \u235d    2 \u00d7 1 \u00d7 {\u2375=0: 1 \u22c4 \u2375 \u00d7 \u2207 \u2375 - 1} 0\n      \u235d    Since 0=0 is 1, the guarded statement is evaluated.\n      \u235d    2 \u00d7 1 \u00d7 1\n      factorial 2\n2\n      factorial 3\n6\n      factorial 4\n24\n</code></pre> <pre><code>      collatz \u2190 {\n            \u2375=1: 1\n            0=2|\u2375: \u2375 , \u2207 \u2375\u00f72\n            \u2375 , \u2207 1+3\u00d7\u2375}\n</code></pre> <p>This function keeps track of the evaluation of the Collatz sequence. If the <code>\u2375</code> is even, (<code>0=2|\u2375</code>) divide it by two and add it to the list (<code>\u2375 , \u2207 \u2375\u00f72</code>). If it is not, multiply it by three, add one, and add it to the list (<code>\u2375 , \u2207 1+3\u00d7\u2375</code>). Repeat this process until <code>\u2375</code> reaches 1.</p> <pre><code>      \u235d Example:\n      \u235d     collatz 3 \n      \u235d     3 , \u2207 1+3\u00d73\n      \u235d     3 , collatz  1+3\u00d73\n      \u235d     3 , collatz 10\n      \u235d     3 , 10 , \u2207 10\u00f72\n      \u235d     3 10 , collatz  10\u00f72\n      \u235d     3 10 , collatz  5\n      \u235d     and so on\n      collatz 3\n3 10 5 16 8 4 2 1\n      collatz 100\n100 50 25 76 38 19 58 29 88 44 22 11 34 17 52 26 13 40 20 10 5 16 8 4 2 1\n      collatz 2*10\n1024 512 256 128 64 32 16 8 4 2 1\n</code></pre>"},{"location":"course/ch3/part7/","title":"All aboard!","text":"<p>This part will cover</p> <ul> <li>Forks and Atops</li> <li>The tack functions</li> <li>Reduce function</li> </ul> <p>Before starting this section, we briefly introduce the commonly used monadic replicate / operator, which applies its left function argument between every element of a vector. More on this in Chapter 4.</p> <pre><code>       \u237310\n1 2 3 4 5 6 7 8 9 10\n       +/\u237310\n55\n       1+2+3+4+5+6+7+8+9+10\n55\n       -/\u237310\n\u00af5\n       1-2-3-4-5-6-7-8-9-10\n\u00af5\n       \u2227/\u237320 \u235d LCM of numbers from 1 to 20\n2520\n</code></pre> <p>Some other important functions are the dyadic right and left identity/\u201ctack\u201d functions which return their right or left arguments. They \"point\" towards which argument they return.</p> <pre><code>       \"True\"\u22a3\"False\"\nTrue\n       \"True\"\u22a2\"False\"\nFalse\n</code></pre> <p>At this point, all the functions we've defined have explicitly referred to the left \u237a and right \u2375 arguments, for example in the following function <code>range</code> which takes the difference of the largest and smallest values of a vector</p> <pre><code>      5 \u2308 6\n6\n\n       5 \u2308 6 \u2308 7 \u2308 8\n8\n\n      \u235d Maximum between whole vector\n      \u2308/ 5 6 7 8\n8\n\n      range \u2190 {(\u2308/\u2375)-(\u230a/\u2375)}\n\n      range 80 49 56 60 100 99 23 19 24 4 50 7\n50\n</code></pre> <p>or in the following function which takes the (weighted) average of a vector</p> <pre><code>      +/ 1 10 100\n111\n\n      \u235d Average\n      (+/ 1 10 100) \u00f7 3\n37\n\n      avg \u2190 {(+/\u2375)\u00f7\u2374\u2375}\n\n      avg 1 10 100\n37\n\n      \u235d Weighing the average by 1 1 1\n      (+/ 1 10 100 \u00d7 1 1 1) \u00f7 (+/ 1 1 1)\n37\n\n      \u235d Weighing the average by 2 3 4\n      (+/ 1 10 100 \u00d7 2 3 4) \u00f7 (+/ 2 3 4)\n48\n\n      weighted_avg \u2190 {+/(\u237a\u00d7\u2375)\u00f7(+/\u237a)}\n\n      2 3 4 weighted_avg 1 10 100\n48\n</code></pre> <p>in the \"plus or minus\" function and rounded (or floored) division function</p> <pre><code>      plusminus \u2190 {(\u237a-\u2375),\u237a,\u237a+\u2375}\n\n       5.7 plusminus 0.5\n5.05 5.7 6.35\n\n      round_div \u2190 {\u230a0.5+\u237a\u00f7\u2375}\n\n      1 round_div 3\n0\n\n      2 round_div 3\n1\n\n      floor_div \u2190 {\u230a\u237a\u00f7\u2375}\n\n      2 floor_div 3\n0\n\n      4 floor_div 3\n1\n</code></pre> <p>All of these functions can instead be expressed in terms of special combinations of functions, without referring to the arguments \u237a and \u2375 at all! Just like magic, it takes some time to learn, but once you do it reveals a rich world of programming spells.</p> <p>This style of programming is called tacit or \"point-free\" programming, borrowed from mathematics where it means taking data described using points to be more fundamental than the points themselves, avoiding the need to refer to points explicitly. In this case, taking functions to be more fundamental than their description in terms of explicit arguments. These point-free functions are called trains. </p> <p>There are two fundamental types of trains which can be created by stringing functions together, more advanced trains will be covered in Chapter 6. The most basic train is the 2-train (fg), in operator form f\u2364g, called an atop. The atop evaluates the function f on the result of g applied to the arguments of the train.</p> <p>The following image shows three equivalent forms of the atop, the first being the APL syntax for the atop, the second being a tree-like representation of the atop where the evaluation happens from bottom to top, and the third is the atop in traditional mathematical notation.</p> <p></p> <p>Floored division can be conveniently expressed as an atop. <pre><code>       12\u00f75\n2.4\n       \u230a2.4\n2\n       12(\u230a\u00f7)5\n2\n</code></pre></p> <p>The second fundamental type of train is the 3-train (fgh), called a fork.</p> <p></p> <p>When acting on arguments <code>\u237a</code> and <code>\u2375</code>, it applies g dyadically to <code>\u237af\u2375</code> and <code>\u237ah\u2375</code>. </p> <p>The motivation for this specific definition is to match with mathematics, where it is possible to write f+g to get the sum of the values of the functions f and g.</p> <p>Train trees</p> <p>The ]Box user command controls how trains are displayed, it is beneficial to set -trains=tree to see a tree-like representation of trains.</p> <pre><code>      f \u2190 {...}\n      g \u2190 {...}\n\n      f+g\nf+g\n\n      ]Box ON\nWas OFF\n      ]Box -trains=tree\nWas -trains=box\n\n      f+g\n\u250c\u2500\u253c\u2500\u2510\nf + g\n</code></pre> <p>Forks here look like forks! The trees are read from bottom up, if there are only two functions at the end of a branch, the result of the right function is applied to the left function, if there are three functions, the middle function is applied to the result of the right and left functions. The values then go up the tree until it reaches the root, at which point it is returned.</p> <p>Most of the above functions can be expressed as combinations of forks and atops, let's take a look at a few important cases.</p> <p>The range function is the most straightforward example, it can be written as a single fork</p> <pre><code>      range \u2190 {(\u2308/\u2375)-(\u230a/\u2375)}\n      \u235d is equivalent to\n      range \u2190 \u2308/-\u230a/\n      range\n  \u250c\u2500\u253c\u2500\u2510\n  / - /\n\u250c\u2500\u2518 \u250c\u2500\u2518\n\u2308   \u230a\n</code></pre> <p>The functions f and h here are the maximum <code>\u2308/</code> and the minumum <code>\u230a/</code>, with g being the difference <code>-</code>. When only given a right argument, the above range function evaluates the maximum <code>\u2308/\u2375</code> and the minimum <code>\u230a/\u2375</code>, then takes the difference <code>-</code> between them, as is intended.</p> <p>An example of a fork over a fork is the <code>plusminus</code> function,</p> <pre><code>      plusminus \u2190 {(\u237a-\u2375),\u237a,\u237a+\u2375}\n      \u235d is equivalent to\n      plusminus \u2190 -,\u22a3,+\n      \u235d or with redundant parentheses -,(\u22a3,+)\n      plusminus\n\u250c\u2500\u253c\u2500\u2500\u2500\u2510\n- , \u250c\u2500\u253c\u2500\u2510\n    \u22a3 , +\n</code></pre> <p>From the tree representation of plusminus, it is first seen that the function evaluates <code>\u22a3</code> and <code>+</code> to the arguments <code>\u237a</code> and <code>\u2375</code>, then applies <code>,</code> between them. The result is then applied to the <code>,</code> above, with the result of <code>-</code>. The result is <code>(\u237a-\u2375),((\u237a\u22a3\u2375),(\u237a+\u2375))</code> which is exactly <code>(\u237a-\u2375),\u237a,\u237a+\u2375</code>. </p> <p>The reason plusminus is interpreted as a fork over a fork is that APL function evaluation is always read from right to left. This extends to longer trains where, for example, (f g h i j k) is interpreted as (f (g h (i j k))), an atop over a fork over a fork.</p> <p>The rounded division function can be written as an atop over an atop,</p> <pre><code>      round_div \u2190 {\u230a0.5+\u237a\u00f7\u2375}\n      \u235d is expected to be equivalent to\n      \u230a((0.5+)\u00f7)\nSYNTAX ERROR: Missing right argument\n      \u230a((0.5+)\u00f7)\n            \u2227\n</code></pre> <p>What's going on here? The reason this doesn't work is that <code>\u230a((0.5+)\u00f7)</code> is not purely composed of functions, it contains a value <code>0.5</code> and thus is not interpreted as a train. One way around this is to write <code>\u230a({0.5+\u2375}\u00f7)</code>, which defeats the purpose of point-free programming. Instead, the bind <code>\u2218</code> function can be used to create a monadic function from a dyadic one. In this case, the dyadic function <code>+</code> is bound to the left argument <code>0.5</code> as <code>0.5\u2218+</code>, which is now a monadic function equivalent to <code>{0.5+\u2375}</code>.</p> <pre><code>      round_div \u2190 {\u230a0.5+\u237a\u00f7\u2375}\n      \u235d is equivalent to\n      round_div \u2190  \u230a(0.5\u2218+\u00f7)\n      round_div\n\u250c\u2534\u2500\u2510\n\u230a \u250c\u2534\u2510\n  \u2218 \u00f7\n\u250c\u2500\u2534\u2500\u2510\n0.5 +\n</code></pre> <p>Move the rest to Chapter 6</p> <p>The rest of this section should be adapted for chapter 6</p> <p>Some other important functions are the dyadic right and left identity/\"tack\" functions which return their right or left arguments.</p> <p><pre><code>       'True'\u22a3'False'\nTrue\n       'True'\u22a2'False'\nFalse\n</code></pre> When applied monadically, they return their only argument.</p> <p>Consider the following pairs of functions, implemented using dfns first, and trains second.</p> <pre><code>       range_average \u2190 {((\u2308/\u2375)-\u230a/\u2375),(+/\u2375)\u00f7\u2262\u2375}\n       range_average 5.48 6 5.63 6.02 5.37\n0.65 5.7\n         range_average \u2190 (\u2308/-\u230a/),+/\u00f7\u2262\n       range_average 5.48 6 5.63 6.02 5.37\n0.65 5.7\n\n       plusminus \u2190 {(\u237a-\u2375),\u237a,\u237a+\u2375}\n       5.7 plusminus 0.65\n5.05 5.7 6.35\n       plusminus \u2190 -,\u22a3,+\n       5.7 plusminus 0.2\n5.5 5.7 5.9\n</code></pre> <p>Notice that the arguments of the function were not referred to in the function trains, this style of programming is called tacit or \"point-free\" programming, borrowed from mathematics where it means taking data that can be described using points to be more fundamental than the points themselves, avoiding the need to refer to points explicitly. In this case, taking functions to be more fundamental than their description in terms of explicit arguments,</p> <p>The most basic train is the 2-train (fg), in operator form f\u2364g, called an atop. The atop evaluates the function f monadically on the result of g applied to the arguments of the train.</p> <p>The following image is composed of three parts, the first being the APL syntax for the atop, the second being a tree-like representation of the atop where the evaluation happens from bottom to top, and the third is the atop in traditional mathematical notation.</p> <p></p> <p>Trains in RIDE</p> <p>It is possible to make sense of trains by rendering them in various forms in the RIDE editor using the -trains option to the Box user command. For example, it is possible to render trains as trees using the following command. <pre><code>]Box on -trains=tree\n</code></pre> You can use the help ]? command to get help for any user command in RIDE.</p> <p>Floored division can be conveniently expressed as an atop. <pre><code>       12\u00f75\n2.4\n       \u230a2.4\n2\n       12(\u230a\u00f7)5\n2\n</code></pre> A very similar composition is achieved using the Beside operator, f\u2218g. </p> <p></p> <p>More simply, the expression \u237a(f\u2218g)\u2375 evaluates to \u237afg\u2375, and recalling that APL is right associative, is \u237af(g\u2375). <pre><code>       matrix \u2190 3 3 \u2374 (3|\u23739)\n       matrix\n1 2 0\n1 2 0\n1 2 0\n       \u2349 matrix \u235d Transpose\n1 1 1\n2 2 2\n0 0 0\n       \u235d Beside of matrix multiplication (+.\u00d7) and transpose (\u2349)\n       matrix (+.\u00d7)\u2218\u2349 matrix\n5 5 5\n5 5 5\n5 5 5\n       matrix (+.\u00d7)\u2349 matrix\n5 5 5\n5 5 5\n5 5 5\n\n       1 2 (-/\u00d7)\u2218\u2296 3 1 \u235d Cross product\n\u00af5\n       \u235d A beside of an atop and a function\n       1 2 (-/\u00d7)\u2296 3 1\n\u00af5\n</code></pre></p> <p>Notice that in the last statement, the atop <code>-/\u00d7</code> and function <code>\u2296</code> were composed into an atop. Since the atop <code>-/\u00d7</code> is a functions in its own right, it can be used as part of larger trains.</p> <p>The Over <code>\u2365</code> operator, <code>f\u2365g</code>, applies f to the value of g applied to each of its arguments.</p> <p></p> <p>The decibel conversion from the start of this chapter can be easily written in this form.</p> <pre><code>       dB_to_ratio \u2190 {10*\u2375\u00f710}\n       ratio_to_dB \u2190 {10\u00d710\u235f\u2375}\n       \u235dOver of an atop and a function\n       60 (ratio_to_dB\u00f7)\u2365dB_to_ratio 30\n30\n       ratio_to_dB ((dB_to_ratio 60) \u00f7 dB_to_ratio 30)\n13.01029996\n\n       reciprocal_sum \u2190 {\u00f7(\u00f7\u237a)+\u00f7\u2375}\n       1 reciprocal_sum 2\n0.6666666667\n       reciprocal_sum \u2190 (\u00f7+)\u2365\u00f7\n       1 reciprocal_sum 2\n0.6666666667\n\n       hypotenuse \u2190 {((\u237a*2)+\u2375*2)*0.5}\n       3 hypotenuse 4\n5\n       hypotenuse \u2190 (*0.5+)\u2365(*2)\nSYNTAX ERROR\n      hypotenuse\u2190(*0.5+)\u2365(*2)\n                      \u2227\n</code></pre> <p>When trying to adapt the hypotenuse function to point-free programming, a seemingly strange error appears complaining about syntax of our train. However, this error should not seem so bizzare after some thought, because the expression <code>(* 0.5 +)</code> is not a function, in fact, <code>(* 0.5 +)</code> evaluates to <code>(1.648721271+)</code> since the <code>*</code> function here is interpreted to act monadically on 0.5. In order to attach the value 0.5 to <code>*</code> and turn the dyadic <code>*</code> into a monadic <code>{\u2375*0.5}</code>, the bind <code>\u2218</code> operator can be used.</p> <pre><code>       hypotenuse \u2190 (*\u22180.5+)\u2365(*\u22182)\n       3 hypotenuse 4\n5\n</code></pre> <p>Another form of the hypotenuse function is obtained by taking the magnitude of a complex number, with real and imaginary parts the arguments of the function.</p> <pre><code>           complex \u2190 +/(1 0J1)\u2218\u00d7\n           complex 3 4\n3J4\n           hypotenuse \u2190 |complex\n           hypotenuse 3 4\n5\n         hypotenuse \u2190 |(+/(1 0J1)\u2218\u00d7)\n         hypotenuse 3 4\n5\n         hypotenuse \u2190 |\u2364+/(1 0J1)\u2218\u00d7\n         hypotenuse 3 4\n5\n</code></pre> <p>Another form of the hypotenuse function is obtained by taking the magnitude of a complex number, with real and imaginary parts the arguments of the function.</p> <p>Let\u2019s take a closer look at the trains at the beginning of this section, applied to vector values.</p> <pre><code>       range_average \u2190 (\u2308/-\u230a/),+/\u00f7\u2262\n       plusminus \u2190 -,\u22a3,+\n</code></pre> <p>Starting with range_average, we start reading from right to left identifying forks and atops. We first identify the 3-train <code>+/\u00f7\u2262</code>, which takes the sum <code>+/</code> of the elements of a vector and divides <code>\u00f7</code> by the length <code>\u2262</code> of the vector, <code>{(+/\u2375)\u00f7(\u2262\u2375)}</code> as a function which takes an average.</p> <p></p> <pre><code>       avg\u2190+/\u00f7\u2262\n       range_average \u2190 (\u2308/-\u230a/),avg\n</code></pre> <p>Then, the 3-train <code>(\u2308/-\u230a/)</code> takes the maximum <code>\u2308/</code> and subtracts <code>-</code> by the minimum <code>\u230a/</code>, <code>{(\u2308/\u2375)-(\u230a/\u2375)}</code>, which gives the range of a series of values. <pre><code>       avg\u2190+/\u00f7\u2262\n       range\u2190\u2308/-\u230a/\n       range_average \u2190 range,avg\n</code></pre></p> <p>Then it\u2019s clear in this form that the function range_average takes the range and average of a series of values and returns both values in the form of a vector.</p> <p>The plus_minus function can be analysed similarly.</p> <pre><code>       plusminus \u2190 -,\u22a3,+\n       plusminus \u2190 -,(\u22a3,+)\n       plusminus \u2190 -,{\u2375,\u237a+\u2375}\n       plusminus \u2190 {(\u237a-\u2375),(\u2375,\u237a+\u2375)}\n</code></pre> <p>More generally, for an n-train of functions <code>(f g h k l m \u2026 w x y z)</code>, </p> <ul> <li><code>(f g h k l m \u2026 t u v w x y z)</code> is interpreted as <code>(f g h k l m \u2026 t u v w (x y z))</code>, which can be interpreted again as <code>(f g h k l m \u2026 t u (v w (x y z)))</code>, and further recursively.</li> <li>If the number of functions is odd, then the result is of the form of forks over forks<ul> <li><code>(f g (h k (l m \u2026 (t u (v w (x y z))))\u2026)</code></li> </ul> </li> <li>If the number of functions is even, then the result is an atop over forks<ul> <li><code>(f (g h (k l (m \u2026 (t u (v w (x y z))))\u2026)</code></li> </ul> </li> </ul>"},{"location":"course/ch3/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p> <p>Read problem 1</p> InputOutput <pre><code>      6{\u2375}5\n</code></pre> <pre><code>5\n</code></pre> <p>Read problem 2</p> InputOutput <pre><code>      6{\u237a}5\n</code></pre> <pre><code>6\n</code></pre> <p>Read problem 3</p> InputOutput <pre><code>      6{\u2375-\u237a}5\n</code></pre> <pre><code>\u00af1\n</code></pre> <p>Read problem 4</p> InputOutput <pre><code>      F \u2190 {\u2375&lt;0: 0 \u22c4 1}\n      F \u00af1\n      F \u00af0.5\n      F 0\n      F 0.5\n      F 1\n</code></pre> <pre><code>      F \u00af1\n0\n      F \u00af0.5\n0\n      F 0\n1\n      F 0.5\n1\n      F 1\n1\n</code></pre> <p>Read problem 5</p> InputOutput <pre><code>      D \u2190 {0=15|\u2375: 'FizzBuzz' \u22c4 0=3|\u2375: 'Fizz' \u22c4 0=5|\u2375: 'Buzz'}\n      D 1\n      D 2\n      D 3\n      D 4\n      D 5\n      D 6\n      D 7\n      D 8\n      D 9\n      D 10\n      D 11\n      D 12\n      D 13\n      D 14\n      D 15\n</code></pre> <pre><code>      D 1\n      D 2\n      D 3\nFizz\n      D 4\n      D 5\nBuzz\n      D 6\nFizz\n      D 7\n      D 8\n      D 9\nFizz\n      D 10\nBuzz\n      D 11\n      D 12\nFizz\n      D 13\n      D 14\n      D 15\nFizzBuzz\n</code></pre> <p>The famous FizzBuzz interview question. Note that a more concise version can be written as</p> <pre><code>      D \u2190 {((0=3|\u2375)\u2374'Fizz'),(0=5|\u2375)\u2374'Buzz'}\n</code></pre> <p>Read problem 6</p> InputOutput <pre><code>      G \u2190 {\n        \u237a&lt;0: 0\n        \u237a&gt;1: \u2375\n        \u237a\u00d7\u2375\n        }\n      \u00af0.5 G 10\n      \u00af0.25 G 10\n      0 G 10\n      0.25 G 10\n      0.5 G 10\n      0.75 G 10\n      1 G 10\n      1.25 G 10\n</code></pre> <pre><code>      \u00af0.5 G 10\n0\n      \u00af0.25 G 10\n0\n      0 G 10\n0\n      0.25 G 10\n2.5\n      0.5 G 10\n5\n      0.75 G 10\n7.5\n      1 G 10\n10\n      1.25 G 10\n10\n</code></pre> <p>Read problem 7</p> InputOutput <pre><code>      H\u2190{\u237a=\u2375:\u2375 \u22c4 \u2375 \u2207 2\u25cb\u2375}\n      0 H 0.5\n</code></pre> <pre><code>      0 H 0.5\n0.7390851332\n</code></pre> <p>This function repeatedly applies cosine 2\u25cb to \u2375 until \u2375 is the same as 2 \u25cb \u2375, that is, trying to find the fixed point of cosine. The left argument keeps track of the previous iteration.</p> <p>Read problem 8</p> InputOutput <pre><code>      K \u2190 {\n        \u2375\u22642: 1\n        (\u2207 \u2375 - 2) + \u2207 \u2375 - 1\n        }\n      K 6\n</code></pre> <pre><code>      K 6\n8\n</code></pre> <p>This function calculates the \u2375th fibonacci number</p> <p>Read problem 9</p> InputOutput <pre><code>      L \u2190 {\n        \u2375=0: 1\n        2*\u2207 \u2375 - 1\n        }\n      L 3\n</code></pre> <pre><code>      L 3\n16\n      \u235d 2*2*2\n</code></pre> <p>This function calculates repeated exponentials of 2</p> <p>Read problem 10</p> InputOutput <pre><code>      A\n1 2 3\n4 5 6\n7 8 9\n      M \u2190 {(\u2374\u237a)\u2374\u2375}\n      A M \u2395A\n</code></pre> <pre><code>      A M \u2395A\nABC\nDEF\nGHI\n</code></pre> <p>This function resizes \u2375 to be the same shape as \u237a</p> <p>Read problem 11</p> InputOutput <pre><code>      5 (+,-) 1 2 3\n</code></pre> <pre><code>      5 (+,-) 1 2 3\n6 7 8 4 3 2\n</code></pre> <p>This is a fork, the corresponding dfn is 5 {(\u237a+\u2375),(\u237a-\u2375)} 1 2 3</p> <p>Read problem 12</p> InputOutput <pre><code>      (1\u2218,\u2374\u22180) 10\n</code></pre> <pre><code>      (1\u2218,\u2374\u22180) 10\n1 0 0 0 0 0 0 0 0 0 0\n\n      (1\u2218,\u2374\u22180)\n \u250c\u2500\u2534\u2500\u2510\n \u2218   \u2218\n\u250c\u2534\u2510 \u250c\u2534\u2510\n1 , \u2374 0\n</code></pre> <p>This is an atop, the dfn equivalent is {1,\u2375\u23740}</p> <p>Read problem 13</p> InputOutput <pre><code>      (2\u2218\u2374\u2374(1\u2218,\u2374\u22180)) 10\n</code></pre> <p>```apl       (2\u2218\u2374\u2374(1\u2218,\u2374\u22180)) 10 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1</p> <pre><code>  (2\u2218\u2374\u2374(1\u2218,\u2374\u22180))\n</code></pre> <p>\u250c\u2500\u253c\u2500\u2500\u2500\u2510 \u2218 \u2374 \u250c\u2500\u2534\u2500\u2510</p> <p>\u250c\u2534\u2510  \u2218   \u2218    2 \u2374 \u250c\u2534\u2510 \u250c\u2534\u2510        1 , \u2374 0</p> <pre><code>This is a fork over an atop, the dfn equivalent is {(2\u2374\u2375)\u23741,\u2375\u23740}\n```\n</code></pre> <p>Read problem 14</p> InputOutput <pre><code>      (+/\u00f7\u2374) 1 10 100\n</code></pre> <pre><code>      (+/\u00f7\u2374) 1 10 100\n37\n\nThis is a fork for the average function, the dfn equivalent is {(+/\u2375)\u00f7\u2374\u2375}\n</code></pre>"},{"location":"course/ch3/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch3/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination"},{"location":"course/ch3/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination <code>+</code> Plus Addition + <code>-</code> Minus Subtraction - <code>\u00d7</code> Times Multiplication PREFIX - <code>\u00f7</code> Divide Division PREFIX = <code>*</code> Power Exponentiation * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 <code>\u235d</code> Lamp Comment PREFIX , <code>\u2190</code> Assignment operator Assigning variables &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L"},{"location":"course/ch3/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p> <p>Write problem 1</p> <p>Write a dfn that calculates the harmonic mean of its left and right arguments, mathematically defined as $$H(\\alpha,\\omega) = \\frac{1}{\\frac{1}{\\alpha}+\\frac{1}{\\omega}}$$  H\u2190 Submit <p></p></p> <p>Write problem 2</p> <p>Write a dfn that calculates the Heronian mean of its left and right arguments, mathematically defined as $$H(\\alpha,\\omega) = \\frac{1}{3} \\cdot (A+\\sqrt{AB}+B)$$  H\u2190 Submit <p></p></p> <p>Write problem 3</p> <p>Write a dfn that calculates the geometric mean of its left and right arguments, mathematically defined as $$H(\\alpha,\\omega) = \\sqrt{AB}$$  H\u2190 Submit <p></p></p> <p>Write problem 4</p> <p>Write a dfn that calculates the arithmetic geometric mean of its left and right arguments, which is defined recursively. The left argument calculating the arithmetic mean of <code>\u237a</code> and <code>\u2375</code>, the right argument calculating the geometric mean of <code>\u237a</code> and <code>\u2375</code>, until both means converge. Mathematically, $$   H(\\alpha, \\omega) = \\left\\{ \\begin{array}{ll}     \\omega &amp; \\alpha=\\omega \\\\     H(\\frac{\\alpha + \\omega}{2}, \\sqrt{\\alpha \\omega}) &amp; \\alpha\u2260\\omega \\\\ \\end{array}  \\right. $$  H\u2190 Submit <p></p></p> <p>Write problem 5</p> <p>Write a dfn that allows the user to choose from some of the means above. The function should take in a right argument array, where the first element is an integer representing which mean to use (see table below), and that particular mean is calculated for the next two elements. \\[ \\begin{array}{cc}     1 &amp; \\text{Arithmetic mean} \\\\     2 &amp; \\text{Geometric mean} \\\\     3 &amp; \\text{Arithmetic-Geometric mean} \\\\ \\end{array} \\]  H\u2190 Submit <p></p></p> <p>Write problem 6</p> <p>Write a dfn called My that displays personal information. The My function should take a string right argument and return the following <pre><code>      My 'Name'\nDASH\n      My 'Age'\n20\n      My 'Profession'\nEngineer\n      My 'Company'\nFuture Gadget Lab LLC\n</code></pre></p> <p>Hint: Use the match \u2261 function.</p> <p> My\u2190 Submit <p></p></p> <p>Write problem 7</p> <p>Recall the tape-based machine given in the Chapter 2 Write problem 12. </p> <pre><code>      INSTRUCTIONS\n  \u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n  \u25021 R 2\u25021 L 1\u25021 L 2\u2502\n  \u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n  \u25021 L 3\u25021 R 2\u25021 N H\u2502\n  \u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The first (second) row of the matrix specifies the possible instructions when the value of the section of tape is a 1 (2). The columns similarly specify the possible instructions depending on the state of the machine.</p> <p>Create a dfn FETCH that takes in a two element right argument vector <code>\u2375</code>, specifying in the first element the value of the section of tape and the second the state of the machine, and returns the corresponding instruction.</p> <p> FETCH\u2190 Submit <p></p></p> <p>Write problem 8</p> <p>The Caesar cipher encrypts a piece of text by shifting all its letters a fixed amount of places along the alphabet. For example, 'BUNNY' (with indices 2 21 14 14 25) under a shift of 17 places (26 | 2 21 14 14 25 + 17 -&gt; 11 4 23 23 8) becomes 'SLEEP'. </p> <p>Create a dfn that does the intermediate operation of this cipher by shifting an integer right argument vector by an integer left argument, modulo 26.</p> <p> SHIFT26\u2190 Submit <p></p></p> <p>Write problem 9</p> <p>Create a dfn that returns a matrix of zeroes of size <code>\u237a</code> by <code>\u237a</code>, with a 1 in a position specified by the vector right argument <code>\u2375</code>.  <pre><code>      2 SPARSE 2 1\n0 0\n1 0\n      10 SPARSE 5 4\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n</code></pre> SPARSE\u2190 Submit <p></p></p> <p>Write problem 10</p> <p>Create a dfn that plots a heatmap of a matrix, that is, a <code>*</code> where the matrix <code>\u2375</code> is above a certain value <code>\u237a</code> and an underscore <code>_</code> otherwise. For example,</p> <pre><code>      M \u2190 10 10\u2374\u23739\n      M\n1 2 3 4 5 6 7 8 9 1\n2 3 4 5 6 7 8 9 1 2\n3 4 5 6 7 8 9 1 2 3\n4 5 6 7 8 9 1 2 3 4\n5 6 7 8 9 1 2 3 4 5\n6 7 8 9 1 2 3 4 5 6\n7 8 9 1 2 3 4 5 6 7\n8 9 1 2 3 4 5 6 7 8\n9 1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9 1\n\n      7 PLOT M\n_______**_\n______**__\n_____**___\n____**____\n___**_____\n__**______\n_**_______\n**_______*\n*_______**\n_______**_\n</code></pre> <p>Hint: Index the vector <code>'_*'</code> by a matrix</p> <p> PLOT\u2190 Submit <p></p></p> <p>Write problem 11</p> <p>Create a dfn that returns the singular form of a noun given as a vector right argument <code>\u2375</code>, returning 'an' with the noun when the noun begins with a vowel, and 'a' with the noun otherwise. In this case, 'Y' is not considered a vowel. The nouns will be given in UPPERCASE.</p> <pre><code>      SINGULAR \"DREAM\"\nA DREAM\n      SINGULAR \"SNOOZE\"\nA SNOOZE\n      SINGULAR \"AERODROME\"\nAN AERODROME\n</code></pre> <p> SINGULAR\u2190 Submit <p></p></p> <p>Write problem 12</p> <p>Create a dfn that determines an APL MOOC student's final grade. The right argument <code>\u2375</code> is the number of exercises completed. For the sake of this problem, you can assume that the APL MOOC has 72 exercises. The grade boundaries and expected results are given below</p> <pre><code>      \u235d Less than 60%\n      GRADE 42\n0\n      \u235d Between 60% and 70%\n      GRADE 43\n1\n      GRADE 50\n1\n\n      \u235d Between 70% and 80%\n      GRADE 51\n2\n      GRADE 57\n2\n\n      \u235d Between 80% and 90%\n      GRADE 58\n3\n      GRADE 64\n3\n\n      \u235d Between 90% and 99%\n      GRADE 65\n4\n      GRADE 71\n4\n\n      \u235d Between 99% and 100%\n      Grade 72\n5\n\n      \u235d Any higher returns nothing\n      Grade 73\n</code></pre> <p> GRADE\u2190 Submit <p></p></p>"},{"location":"course/ch4/bonus/","title":"Bonus content: Rotating an image","text":"<p>This part is optional</p> <p>This part is considered to be bonus content. It contains some more advanced topics that are not covered in the main course. It can also give some examples of functions and topics that are introuced later in the course. There are no exercises related to this content.</p> <p>Feel free to skim or skip this section for now, and return to it later!</p> <p>Let\u2019s try rotating the image <code>'illusion.ppm'</code> in the PPM P3 image format.</p> <p></p> <p>The PPM P3 format consists of three lines of header: the first specifying the format the string <code>'P3'</code>, the second specifying the resolution of the image <code>455 498</code>, and the third specifying the maximum value for each color value, usually <code>255</code>. After these three lines, the color data is provided in plain-text as RGB values. Here is an example PPM file a scaled version of the image it encodes</p> <pre><code>P3\n5 5\n255\n255 255 255 255 0 255 255 255 255 0 255 0 255 255 255\n255 255 255 255 255 255 255 255 0 0 255 0 255 255 255\n0 255 255 255 255 0 255 255 0 0 255 0 255 255 255\n0 255 255 0 255 255 255 255 255 255 255 255 255 0 0\n0 0 255 255 255 255 0 0 255 255 0 0 255 0 0\n</code></pre> <p></p> <p>The <code>\u2395NGET</code> command can be used to open the above image, and many different types of files. It takes as right argument a path to a file, and returns an array of the file data, the encoding, and the unicode number for the newline character.</p> <pre><code>       \u2395NGET 'test.ppm'\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502P3                                                    \u2502UTF-8-NOBOM\u250210\u2502\n\u25025 5                                                   \u2502           \u2502  \u2502\n\u2502255                                                   \u2502           \u2502  \u2502\n\u2502255 255 255 255 0 255 255 255 255 0 255 0 255 255 255 \u2502           \u2502  \u2502\n\u2502255 255 255 255 255 255 255 255 0 0 255 0 255 255 255 \u2502           \u2502  \u2502\n\u25020 255 255 255 255 0 255 255 0 0 255 0 255 255 255     \u2502           \u2502  \u2502\n\u25020 255 255 0 255 255 255 255 255 255 255 255 255 0 0   \u2502           \u2502  \u2502\n\u25020 0 255 255 255 255 0 0 255 255 0 0 255 0 0           \u2502           \u2502  \u2502\n\u2502                                                      \u2502           \u2502  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2518\n</code></pre> <p>The first element of the result is the character array consisting of the image. To get each row of the image separately in an array, the argument <code>1</code> can be used.</p> <pre><code>       \u2283\u2395NGET 'test.ppm'1\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\u2502P3 \u25025 5\u2502255\u2502255 255 255 255 0 255 255 255 255 0 255 0 255 255 255 \u2502255 255\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       255 255 255 255 255 255 0 0 255 0 255 255 255 \u25020 255 255 255 255 0 255 255 0 0 255 0 255 255 255 \u25020 255 255 0 255 2\n      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n      55 255 255 255 255 255 255 255 0 0 \u25020 0 255 255 255 255 0 0 255 255 0 0 255 0 0 \u2502\n      \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>We start by reading the illusion image and its metadata.</p> <pre><code>       file \u2190 \u2283\u2395NGET 'illusion.ppm'1\n       header \u2190 file[1 2 3]\n       resolution \u2190 2\u2283header\n       image \u2190 file~header\n         resolution\n455 498\n       resolution[1]\n4\n       \u2374resolution\n7\n</code></pre> <p>The resolution vector is not a vector of numbers, which would be useful here, but a vector of characters in the string <code>'455 497'</code>. The execute <code>\u234e</code> function evaluates strings as APL expressions, hence can turn the string <code>'455 497'</code> into the vector <code>455 497</code>.</p> <pre><code>       resolution \u2190 \u234e2\u2283header\n         resolution\n455 497\n       resolution[1]\n455\n       \u2374resolution\n2\n</code></pre> <p>The image data is then rotated by half its width, and written using the <code>\u2395NPUT</code> command with the append <code>2</code> argument.</p> <pre><code>       new_image \u2190 (3 \u00d7 resolution[2]\u00f72)\u233d\u00a8image\n       'P3'\u2395NPUT'illusion_rotated.ppm'2\n       resolution\u2395NPUT'illusion_rotated.ppm'2\nDOMAIN ERROR\n</code></pre> <p>Since the resolution data is a vector of numbers, it cannot be written directly into a file as text. The format <code>\u2355</code> function converts between the two, sometimes acting as an inverse to the <code>\u234e</code> execute function. The image data is written element by element, hence row by row (since the elements of <code>image</code> are rows of the original image).</p> <pre><code>       (\u2355resolution)\u2395NPUT'illusion_rotated.ppm'2\n       '255'\u2395NPUT'illusion_rotated.ppm'2\n       (('illusion_rotated.ppm'2)\u2218(\u2395NPUT\u2368))\u00a8new_image\n</code></pre> <p></p>"},{"location":"course/ch4/part1/","title":"Creating vectors","text":"<p>This part will cover</p> <ul> <li>Vector generating functions<ul> <li>Iota</li> <li>Rho</li> <li>Replicate</li> <li>Catenate</li> <li>Roll/deal</li> </ul> </li> <li>Index origin</li> <li>The empty vector</li> </ul> <p>All of the functions that we covered in Chapter 3 have been scalar functions. When you apply a scalar function to a scalar, you get another scalar:</p> <pre><code>      |\u00af4.2\n4.2\n      2+3\n5\n</code></pre> <p>When you apply a scalar function to an array, it just applies it to each element and returns an array of the same length:</p> <pre><code>      |\u00af4.2 5 \u00af3 0 \u00af7\n4.2 5 3 0 7\n      1 2 3 + 4 5 6\n5 7 9\n      1 + 1 2 3\n2 3 4\n</code></pre> <p>However, there are also functions that operate on whole vectors all at once. In this part, we will cover vector-generating functions: those that take in arguments to produce new vectors.</p>"},{"location":"course/ch4/part1/#index-generator","title":"Index generator","text":"<p>Typing the index generator <code>\u2373</code></p> <p>Prefix method: PREFIX i</p> <p>Tab method: i i Tab</p> <p>The monadic index generator <code>\u2373</code> (iota) is probably one of the most common and simple vector functions in APL. Can you see what it does?</p> <pre><code>      \u23735\n1 2 3 4 5\n      \u237310\n1 2 3 4 5 6 7 8 9 10\n      \u23731\n1\n</code></pre> <p>That's right, it just generates a vector containing the numbers from 1 to whatever you give it as an argument. This is quite useful, since you can now apply our familiar scalar functions to get a whole load of other vectors. For example, here is how you get the even numbers from 1 to 10:</p> <pre><code>      \u23735\n1 2 3 4 5\n      2\u00d7\u23735\n2 4 6 8 10\n</code></pre> <p>Or, if you want the numbers from 1 to 10 in decreasing order:</p> <pre><code>      \u237310\n1 2 3 4 5 6 7 8 9 10\n      -\u237310\n\u00af1 \u00af2 \u00af3 \u00af4 \u00af5 \u00af6 \u00af7 \u00af8 \u00af9 \u00af10\n      11-\u237310\n10 9 8 7 6 5 4 3 2 1\n</code></pre> <p>There's a lot of different vectors you can create: you'll get to have fun with this in the exercises.</p> <p>Let's try breaking the <code>\u2373</code> function. What do you think will happen if we give it a negative number or a letter as an argument?</p> <pre><code>      \u2373\u00af1\nDOMAIN ERROR\n      \u2373\u00af1\n      \u2227\n\n      \u2373'a'\nDOMAIN ERROR\n      \u2373'a'\n      \u2227\n</code></pre> <p>That's right, it's a domain error. APL can't handle these values, so it just throws an error. What about the number 0?</p> <pre><code>      \u23730\n</code></pre> <p>Nothing got printed, but also no error was produced. This is because of a pattern: <code>\u23735</code> produces a vector of length 5, <code>\u23734</code> produces a vector of length 4, <code>\u23733</code> produces a vector of length 3, <code>\u23732</code> produces a vector of length 2, <code>\u23731</code> produces a vector of length 1. The APL developers decided that it would also be helpful if <code>\u23730</code> produced a vector of length 0: the empty vector. This is sometimes handy to use if you want to have a vector and then add elements to it later. You can also get the empty vector directly using the zilde sign, <code>\u236c</code></p> <p>Typing the empty vector <code>\u236c</code></p> <p>Prefix method: PREFIX }</p> <p>Tab method: 0 ~ Tab</p> <p>You can also give iota a vector as a right argument. In this case, it generates a table (array) with a vector of coordinates in each cell. For example, if we give it <code>5 5</code>, it creates a 2D array with little vectors that tell you what square it is in each position.</p> <pre><code>       \u23735 5\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25021 1\u25021 2\u25021 3\u25021 4\u25021 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25022 1\u25022 2\u25022 3\u25022 4\u25022 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25023 1\u25023 2\u25023 3\u25023 4\u25023 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25024 1\u25024 2\u25024 3\u25024 4\u25024 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25025 1\u25025 2\u25025 3\u25025 4\u25025 5\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n</code></pre> <p>The same thing happens if we give it <code>2 2 2</code>: now, it makes a 3D table in the same way.</p> <pre><code>       \u23732 2 2\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 1 1\u25021 1 2\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25021 2 1\u25021 2 2\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25022 1 1\u25022 1 2\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25022 2 1\u25022 2 2\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"course/ch4/part1/#index-origin","title":"Index origin","text":"<p>Sometimes you want your numbers to start from 0 instead of 1. For example, if we wanted to generate a vector of all the numbers from 0 to 10, we could do it as before:</p> <pre><code>      \u237311\n1 2 3 4 5 6 7 8 9 10 11\n      \u00af1+\u237311\n0 1 2 3 4 5 6 7 8 9 10\n</code></pre> <p>However, this isn't always practical. A handy tool to get around this is to use the index origin variable, <code>\u2395IO</code>. You can set the value of <code>\u2395IO</code> to either 1 or 0, which will change the behaviour of all origin-sensitive functions. An example of an origin-sensitive function is the index generator. Let's see what happens when we change the index origin:</p> <pre><code>      \u2395IO\n1\n      \u23735\n1 2 3 4 5\n\n      \u2395IO \u2190 0\n      \u2395IO\n0\n      \u23735\n0 1 2 3 4\n</code></pre> <p>Note that now <code>\u2373</code> still generates a vector of the length you give it, and not up to the value you give it.</p> <p>Remember to always change back the index origin after you're done to avoid messing up other code that expects it to be 1:</p> <pre><code>      \u2395IO \u2190 1\n      \u2395IO\n1\n</code></pre>"},{"location":"course/ch4/part1/#reshape","title":"Reshape","text":"<p>You've already seen this one, but let's see how it works in more detail.</p> <p>Typing the reshape operator <code>\u2374</code></p> <p>Prefix method: PREFIX r</p> <p>Tab method: r r Tab</p> <p>The dyadic reshape operator, <code>\u2374</code>, takes in a shape on the left and a value to use as a filler on the right. Let's see it in action:</p> <pre><code>      5 \u2374 3\n3 3 3 3 3\n      7 \u2374 0\n0 0 0 0 0 0 0\n</code></pre> <p>You can also use a vector of filler items on the right. If there's not enough elements, they get repeated. If there are too many elements, they get left out.</p> <pre><code>      5 \u2374 1 2\n1 2 1 2 1\n      10 \u2374 1 2 3 4\n1 2 3 4 1 2 3 4 1 2\n      4 \u2374 1 2 3 4 5 6\n1 2 3 4\n</code></pre> <p>Iota and rho are besties: we can combine them to make nice vectors!</p> <pre><code>      \u23733\n1 2 3\n      14 \u2374 \u23733\n1 2 3 1 2 3 1 2 3 1 2 3 1 2\n</code></pre> <p>This also works with letters.</p> <pre><code>      33 \u2374 'aybabtu'\naybabtuaybabtuaybabtuaybabtuaybab\n      100 \u2374 'A'\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n</code></pre> <p>Reshape also works nicely with higher dimensional arrays. The argument on the left is now a vector that tells you the size of each of the dimensions of your array.</p> <pre><code>      3 3 \u2374 1\n1 1 1\n1 1 1\n1 1 1\n      5 5 \u2374 \u23735\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n      2 3 4 \u2374 1 2\n1 2 1 2\n1 2 1 2\n1 2 1 2\n\n1 2 1 2\n1 2 1 2\n1 2 1 2\n</code></pre>"},{"location":"course/ch4/part1/#replicate","title":"Replicate","text":"<p>What about this one?</p> <pre><code>      3 / 1 2 3 4\n1 1 1 2 2 2 3 3 3 4 4 4\n</code></pre> <p>This is the dyadic replicate function, <code>/</code>. If you give it a vector on the right and a scalar on the left, it repeats each element of the vector that many times. You can also give it two vectors of the same length on each side:</p> <pre><code>      1 2 1 2 / 1 2 3 4\n1 2 2 3 4 4\n      1 0 1 1 0 0 1 / 3 4 5 6 7 8 9\n3 5 6 9\n       0 0 0 1 1 0 0 0 1 1 0 0/'flamethrower'\nmeow\n      0 0 0 1 1 0 0 0 7 1 0 0/'flamethrower'\nmeooooooow\n</code></pre> <p>When the left-hand side contains just zeros and ones, it is called a bitmask. We can use bitmasks to select parts of a vector, which sometimes comes in useful.</p> <pre><code>      \u23739\n1 2 3 4 5 6 7 8 9\n      2|\u23739\n1 0 1 0 1 0 1 0 1\n      ~2|\u23739\n0 1 0 1 0 1 0 1 0\n\n      (2|\u23739)/'ballooned'\nblond\n      (~2|\u23739)/'ballooned'\naloe\n</code></pre> <p>A little more complicated example:</p> <pre><code>      \u237326\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n      8|\u237326\n1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2\n      5=8|\u237326\n0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0\n\n      \u2395A\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n      (5=8|\u237326)/\u2395A\nEMU\n</code></pre>"},{"location":"course/ch4/part1/#roll-and-deal","title":"Roll and deal","text":"<p>Take a gamble: what does the dyadic <code>?</code> function do?</p> <pre><code>      3?5\n1 3 5\n      3?5\n4 1 5\n      3?5\n3 2 5\n      6?100\n64 53 77 98 10 11\n</code></pre> <p>It's a random number generator called \"deal\". Specifically, it \"deals out\" numbers without replacement. The expression <code>3?5</code> means: \"generate 3 numbers from 1 to 5 without any repetitions\".</p> <p>Pseudorandom numbers</p> <p>The <code>?</code> function generates pseudorandom numbers.   They are good for simulations and generic random numbers, but never use them for cryptography since they aren't truly random.</p> <p>What if we wanted to include zero? We could, of course, subtract 1 from everything. However, deal is origin-sensitive, so we can just use our favourite <code>\u2395IO</code> variable (remember to set it back once you're done).</p> <pre><code>      \u2395IO\u21900\n\n      5?5\n1 2 0 4 3\n\n      \u2395IO\u21901\n</code></pre> <p>Ok, but what if we want repetitions? Say I wanted a random list of ones and zeros. Just trying to force APL to generate these doesn't end well...</p> <pre><code>      \u2395IO\u21900\n\n      10?2\nDOMAIN ERROR: Deal right argument must be greater than or equal to the left argument\n      10?2\n        \u2227\n\n      \u2395IO\u21901\n</code></pre> <p>There is actually another way to use deal that gives you numbers without replacement: it's called roll (like rolling a die)! And we don't even need another symbol: it's just the monadic version of <code>?</code>.</p> <pre><code>      ?5\n2\n      ?5\n5\n      ?5\n2\n      ?5\n1\n      ?5\n3\n</code></pre> <p>If we want more random numbers, we just give it more numbers as an argument.</p> <pre><code>      ?5 5 5 5 5 5 5 5 5 5\n5 1 2 4 3 2 5 4 4 2\n</code></pre> <p>Think about this for a moment: how would you use the functions you already know to do the same thing? Here's two possible answers:</p> <pre><code>      ?10\u23745\n1 2 2 4 3 4 5 4 2 2\n      ?10/5\n3 4 3 5 2 1 2 3 5 3\n</code></pre> <p>And, before we forget to answer the question we had before, here's how to generate a long list of random bits (ones and zeros):</p> <pre><code>      \u2395IO\u21900\n\n      ?15\u23742\n0 0 0 1 0 0 0 1 1 1 1 0 1 0 1\n\n      \u2395IO\u21901\n</code></pre>"},{"location":"course/ch4/part1/#catenate","title":"Catenate","text":"<p>You're also familiar with this one! Let's revise it just to be sure :)</p> <p>Remember that, when you have two vectors, combining them with a space makes them into a nested vector (Spaces Separate Scalars):</p> <pre><code>      A\u2190'bart'\n      B\u2190'ender'\n\n      A B\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502bart\u2502ender\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>But if you want to combine them into one vector, you can use the catenate function:</p> <pre><code>      A\u2190'bart'\n      B\u2190'ender'\n\n      A,B\nbartender\n</code></pre>"},{"location":"course/ch4/part2/","title":"Reductions and scans","text":"<p>This part will cover</p> <ul> <li>The reduction operator</li> <li>The scan operator</li> </ul> <p>You are a climate scientist at a remote reserach station in Antarctica. You are orbiting the Earth at an elevation of 2500 meters and a speed of 0.00008 kilometers per hour.</p> <p>In long intervals of time between antarctic expeditions, you have to process sea ice data from all over tha island. Unfortunately for you, the madness of being alone is degrading your ability to do manual calculation. Unfortunately for the scientific community, you\u2019ve decided to let the computer handle it without double checking.</p> <p>Vectors in APL are represented, and can be created, by a collection of scalars separated by spaces. The reduce / operator can be naively thought of as replacing these spaces with a function specified by its left argument, and returning the result as a scalar.</p> <pre><code>      SURFACE_ICE_TEMPERATURE\n\u00af11.15 \u00af7.15 \u00af7.55 \u00af6.15 \u00af12.15 \u00af9.55\n\n      \u235d Sum of temperatures\n      +/SURFACE_ICE_TEMPERATURE\n\u00af53.7\n\n      \u235d Sum written explicitly\n      \u00af11.15+\u00af7.15+\u00af7.55+\u00af6.15+\u00af12.15+\u00af9.55\n\u00af53.7\n\n      \u235d Average of temperatures\n      (+/SURFACE_ICE_TEMPERATURE)\u00f7\u2374SURFACE_ICE_TEMPERATURE\n\u00af8.95\n\n      SURFACE_ICE_PERCENT_CHANGE\n\u00af6.9 \u00af5.6 \u00af7.2 \u00af4.3 \u00af2.5 \u00af8.6\n\n      \u235d Convert from percent\n      SURFACE_ICE_CHANGE \u2190 1 + SURFACE_ICE_PERCENT_CHANGE \u00f7 100\n0.931 0.944 0.928 0.957 0.975 0.914\n\n      \u235d Product of all changes to get total change\n      SURFACE_ICE_TOTAL_CHANGE \u2190 \u00d7/0.931 0.944 0.928 0.957 0.975 0.914\n      SURFACE_ICE_TOTAL_CHANGE\n0.6955564796\n\n      \u235d Product written explicitly\n      0.931\u00d70.944\u00d70.928\u00d70.957\u00d70.975\u00d70.914\n0.6955564796\n\n      \u235d LCM of numbers from 1 to 20\n      \u2227/\u237320 \n2520\n\n      \u235d LCM explicitly\n      1\u22272\u22273\u22274\u22275\u22276\u22277\u22278\u22279\u222710\u222711\u222712\u222713\u222714\u222715\u222716\u222717\u222718\u222719\u222720\n2520\n</code></pre> <p>Note that the reduce / operator always reduces the rank of its right argument by one; for example, reducing using the catenate , function creates a scalar which contains the array. More on nested scalars in Chapter 5.</p> <pre><code>      ,/\u237310\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 3 4 5 6 7 8 9 10\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      1,2,3,4,5,6,7,8,9,10\n1 2 3 4 5 6 7 8 9 10\n</code></pre> <p>Since functions act from right to left, it is possible to construct a vector by catenating its elements from the right, and destruct the vector by iterating on it from the right using reduce. In type theory, these can be thought of as the general introduction and elimination rules of lists.</p> <pre><code>      1,(2,(3,(4,(5,(6,(7,(8,(9,10))))))))\n1 2 3 4 5 6 7 8 9 10\n\n      {\u2395\u2190\u2375 \u237a}/1,(2,(3,(4,(5,(6,(7,(8,(9,10))))))))\n10 9\n10 9  8\n10 9  8  7\n10 9  8  7  6\n10 9  8  7  6  5\n10 9  8  7  6  5  4\n10 9  8  7  6  5  4  3\n10 9  8  7  6  5  4  3  2\n10 9  8  7  6  5  4  3  2  1\n</code></pre> <p>It can be seen that for-each loops in imperative programming languages are equivalent to the reduce / operator, since they both destruct a list in the most general way possible. For example, the python <code>for x in range(1,11): print(x**2)</code> in APL is written as</p> <pre><code>      0,\u237310\n0 1 2 3 4 5 6 7 8 9 10\n\n      \u235d Rotate \u233d function\n      \u233d0,\u237310\n10 9 8 7 6 5 4 3 2 1 0\n\n       {\u2395\u2190\u237a*2}/\u233d0,\u237310\n1\n4\n9\n16\n25\n36\n49\n64\n81\n100\n</code></pre> <p>The cumulative sum of a list can also be easily expressed using the reduce / operator.</p> <pre><code>       {\u237a,\u237a+\u2375}/\u237310\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 3 6 10 15 21 28 36 45 55\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2283{\u237a,\u237a+\u2375}/\u237310\n1 3 6 10 15 21 28 36 45 55\n</code></pre> <p>Note that we had to disclose \u2283 the resulting scalar which contained the resulting vector. More on this in Chapter 5.</p> <p>There is a dedicated built-in operator that does not have the same limitations, and calculates cumulative functions even for higher dimensional arrays. The scan  operator cumulatively applies its left argument function on its right argument array and returns a result array of the same rank.</p> <pre><code>      ,\\\u23735\n\u250c\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021\u25021 2\u25021 2 3\u25021 2 3 4\u25021 2 3 4 5\u2502\n\u2514\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      +\\\u237310\n1 3 6 10 15 21 28 36 45 55\n\n      \u235d Cumulative alternating sum\n      -\\\u237310\n1 \u00af1 2 \u00af2 3 \u00af3 4 \u00af4 5 \u00af5\n\n\n      \u23735 5\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25021 1\u25021 2\u25021 3\u25021 4\u25021 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25022 1\u25022 2\u25022 3\u25022 4\u25022 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25023 1\u25023 2\u25023 3\u25023 4\u25023 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25024 1\u25024 2\u25024 3\u25024 4\u25024 5\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25025 1\u25025 2\u25025 3\u25025 4\u25025 5\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n\n      +\\\u23735 5\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 1\u25022 3 \u25023 6 \u25024 10 \u25025 15 \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25022 1\u25024 3 \u25026 6 \u25028 10 \u250210 15\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25023 1\u25026 3 \u25029 6 \u250212 10\u250215 15\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25024 1\u25028 3 \u250212 6\u250216 10\u250220 15\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25025 1\u250210 3\u250215 6\u250220 10\u250225 15\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n    \u235d Cumulative maximum\n      \u2308\\ 1 0 1 2 3 2 \u00af1 4 2 1\n1 1 1 2 3 3 3 4 4 4\n\n      \u235d Cumulative minimum\n      \u230a\\ 1 0 1 2 3 2 \u00af1 4 2 1\n1 0 0 0 0 0 \u00af1 \u00af1 \u00af1 \u00af1\n\n      M \u2190 ? 5 5 \u2374 10\n      M\n9 10 2 1  4\n8  2 9 3  2\n6  4 3 2  8\n8  5 5 2  1\n2 10 2 2 10\n\n      \u2308\\M\n9 10 10 10 10\n8  8  9  9  9\n6  6  6  6  8\n8  8  8  8  8\n2 10 10 10 10\n\n      \u230a\\M\n9 9 2 1 1\n8 2 2 2 2\n6 4 3 2 2\n8 5 5 2 1\n2 2 2 2 2\n</code></pre>"},{"location":"course/ch4/part3/","title":"Order from chaos","text":"<p>This part will cover</p> <ul> <li>Sorting / grade up / grade down</li> <li>Windowed reduce</li> </ul> <p>Your training as a climate sceintist has prepared you to deal with measurement of real-life systems, which can have a large amount of noise that has to be dealt with before making any inferences. Trying to test your data reduction methods on the computer, you first generate artificially noisy data.</p> <p>The monadic <code>?</code> roll function generates a random number for every scalar in its right argument, from 1 to the value of that scalar. </p> <pre><code>       \u235d Roll a 6-sided die\n       ? 6\n2\n       ? 6 6 6\n6 5 3\n       ? \u237310\n1 1 3 4 4 6 6 5 8 4\n\n       ? 10*\u237310\n8 84 545 4600 99210 693088 7548981 55682236 454935262 2471243355\n</code></pre> <p>When the argument contains zero (0), a random floating point number between 0 and 1 is returned.</p> <pre><code>       ? 0 0 0 0\n0.5073955156 0.1942971103 0.3645209613 0.8563507943\n       ? 0,\u23734\n0.1770380776 1 1 2 4\n</code></pre> <p>The dyadic <code>?</code> deal function works similarly, but generates a list of random numbers without repeats.</p> <pre><code>      5 ? 5\n2 5 4 1 3\n      5 ? 10\n5 7 1 6 8\n      10 ? 10\n7 5 6 10 1 9 4 2 8 3\n      11 ? 10\nDOMAIN ERROR: Deal right argument must be greater than or equal to the left argument\n      11 ? 10\n         \u2227\n</code></pre> <p>The replicate function can be used to generate a large number of random number in a certain range, by creating a vector of the same number of arbitrary length.</p> <pre><code>       6 / 10\n10 10 10 10 10 10 10\n       ? 6 / 10\n9 9 2 9 4 6\n</code></pre> <p>Simulating measuring a temperature of 21 degrees with some noise, fluctuating between -0.5 and 0.5</p> <pre><code>       DATA \u2190 21 + (? 20 / 0) - 0.5\n20.51270976 20.84443059 21.20961766 20.85869017 21.05525209 20.8088396 21.00197974 20.88101536 20.70209893 21.28923291\n      20.62552888 20.95059287 20.78032757 20.52831086 21.29706401 21.45739671 20.94876038 20.84444697 20.66278673\n      20.76248039\n</code></pre> <p>It is possible to recover the original data by taking an average, using the reduce <code>/</code> operator on <code>+</code> plus then dividing by the <code>\u2262</code> tally of the <code>DATA</code> vector.</p> <pre><code>       (+/DATA)\u00f7(\u2262DATA)\n20.90107811\n       (+/\u00f7\u2262) DATA\n20.90107811\n</code></pre> <p>For measurements of time-varying data, it would be useful instead to do a moving average instead. Take, for example, a simulated temperature reading of air temperature that goes from \u00af20 to \u00af30 over the course of a day's measurements.</p> <pre><code>       DATA \u2190 \u00af20-(1\u00f710)\u00d7\u2373100\n\u00af20.1 \u00af20.2 \u00af20.3 \u00af20.4 \u00af20.5 \u00af20.6 \u00af20.7 \u00af20.8 \u00af20.9 \u00af21 \u00af21.1 \u00af21.2\n \u00af21.3 \u00af21.4 \u00af21.5 \u00af21.6 \u00af21.7 \u00af21.8 \u00af21.9 \u00af22 \u00af22.1 \u00af22.2 \u00af22.3 \u00af22.4\n \u00af22.5 \u00af22.6 \u00af22.7 \u00af22.8 \u00af22.9 \u00af23 \u00af23.1 \u00af23.2 \u00af23.3 \u00af23.4 \u00af23.5 \u00af23.6\n \u00af23.7 \u00af23.8 \u00af23.9 \u00af24 \u00af24.1 \u00af24.2 \u00af24.3 \u00af24.4 \u00af24.5 \u00af24.6 \u00af24.7 \u00af24.8\n \u00af24.9 \u00af25 \u00af25.1 \u00af25.2 \u00af25.3 \u00af25.4 \u00af25.5 \u00af25.6 \u00af25.7 \u00af25.8 \u00af25.9 \u00af26\n \u00af26.1 \u00af26.2 \u00af26.3 \u00af26.4 \u00af26.5 \u00af26.6 \u00af26.7 \u00af26.8 \u00af26.9 \u00af27 \u00af27.1 \u00af27.2\n \u00af27.3 \u00af27.4 \u00af27.5 \u00af27.6 \u00af27.7 \u00af27.8 \u00af27.9 \u00af28 \u00af28.1 \u00af28.2 \u00af28.3 \u00af28.4\n \u00af28.5 \u00af28.6 \u00af28.7 \u00af28.8 \u00af28.9 \u00af29 \u00af29.1 \u00af29.2 \u00af29.3 \u00af29.4 \u00af29.5 \u00af29.6\n \u00af29.7 \u00af29.8 \u00af29.9 \u00af30\n\n\n      \u235d Add noise\n      DATA +\u2190 (? 100 / 0) - 0.5\n</code></pre> <p>In order to do a moving average, a function that takes moving windows of a vector is needed, the windowed reduce <code>/</code> operator is exactly that. It applies the reduce function on moving segments of its right argument specific by its left argument. </p> <pre><code>       3 ,/ \u237310\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 3\u25022 3 4\u25023 4 5\u25024 5 6\u25025 6 7\u25026 7 8\u25027 8 9\u25028 9 10\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n       3 +/ \u237310\n6 9 12 15 18 21 24 27\n       (1+2+3) (2+3+4) (3+4+5) (4+5+6) (5+6+7) (6+7+8) (7+8+9) (8+9+10)\n6 9 12 15 18 21 24 27\n\n       2 \u00d7/ \u237310\n2 6 12 20 30 42 56 72 90\n       (1\u00d72) (2\u00d73) (3\u00d74) (4\u00d75) (5\u00d76) (6\u00d77) (7\u00d78) (8\u00d79) (9\u00d710)\n2 6 12 20 30 42 56 72 90\n\n       3 3 \u2374 \u23739\n1 2 3\n4 5 6\n7 8 9\n       2,/(3 3 \u2374 \u23739)\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25021 2\u25022 3\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25024 5\u25025 6\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25027 8\u25028 9\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n      2+/(3 3 \u2374 \u23739)\n 3  5\n 9 11\n15 17\n</code></pre> <p>To get a moving average, the windowed reduce function can be applied to the + plus function and then divided by the size of the window, in this case 5. The result is then rounded to 1 decimal place.</p> <pre><code>      RESULT \u2190 (5+/DATA)\u00f75\n      (\u2308RESULT\u00d710)\u00f710\n\u00af20.4 \u00af20.5 \u00af20.7 \u00af20.7 \u00af20.8 \u00af20.8 \u00af20.9 \u00af20.9 \u00af21.1 \u00af21.1 \u00af21.2 \u00af21.4\n \u00af21.5 \u00af21.6 \u00af21.8 \u00af21.9 \u00af21.9 \u00af22.1 \u00af22.2 \u00af22.3 \u00af22.5 \u00af22.7 \u00af22.7 \u00af22.8\n \u00af22.8 \u00af22.8 \u00af22.8 \u00af22.9 \u00af23 \u00af23.1 \u00af23.2 \u00af23.5 \u00af23.7 \u00af23.6 \u00af23.8 \u00af23.9 \u00af24\n \u00af24.1 \u00af24.4 \u00af24.5 \u00af24.6 \u00af24.5 \u00af24.5 \u00af24.5 \u00af24.5 \u00af24.5 \u00af24.7 \u00af24.9 \u00af24.9\n \u00af25.2 \u00af25.4 \u00af25.6 \u00af25.7 \u00af25.8 \u00af25.8 \u00af25.9 \u00af25.9 \u00af26.1 \u00af26.2 \u00af26.3 \u00af26.4\n \u00af26.6 \u00af26.7 \u00af26.7 \u00af26.9 \u00af27 \u00af27.1 \u00af27.2 \u00af27.3 \u00af27.3 \u00af27.4 \u00af27.4 \u00af27.4 \n \u00af27.6 \u00af27.8 \u00af27.9 \u00af28 \u00af28.2 \u00af28.3 \u00af28.3 \u00af28.3 \u00af28.4 \u00af28.6 \u00af28.6 \u00af28.8\n \u00af29 \u00af29.1 \u00af29.2 \u00af29.3 \u00af29.4 \u00af29.3 \u00af29.3 \u00af29.4 \u00af29.6 \u00af29.7 \u00af29.8\n</code></pre> <p>A pretty good reconstruction of the data!</p> <p>Given the large number of temperature readings, it is also possible to sort ascending and descending using the grade up <code>\u234b</code> and grade down <code>\u2352</code> functions.</p> <p>The grade up <code>\u234b</code> and grade down <code>\u2352</code> functions return indices of elements of  its right argument in ascending or descending order.</p> <pre><code>       DATA \u2190 20 19 21 22\n       \u234bDATA\n2 1 3 4\n       DATA[\u234bDATA]\n19 20 21 22\n       \u2352DATA\n4 3 1 2\n       DATA[\u2352DATA]\n22 21 20 19\n</code></pre>"},{"location":"course/ch4/part4/","title":"Selecting from a vector","text":"<p>This part will cover</p> <ul> <li>The 5 ways to select from an array</li> <li>Modifying elements</li> </ul> <p>There are 5 ways to select things from an array in APL. Here they are: let's go through them all!</p> <ul> <li>Choosing the first or last N numbers (<code>\u2191</code>)</li> <li>Choosing all but the first or last N numbers (<code>\u2193</code>)</li> <li>Choosing the numbers at specific positions (<code>[]</code>)</li> <li>Choosing the numbers that satisfy certain conditions (<code>/</code>)</li> <li>Choosing one specific item (<code>\u2283</code>)</li> </ul>"},{"location":"course/ch4/part4/#take","title":"Take","text":"<p>This one is very simple: we use the dyadic <code>\u2191</code> function (called take) to choose the first or last N numbers of an array. The left argument is the number of values to take, and the right argument is the array itself.</p> <p>Typing the take function <code>\u2191</code></p> <p>Prefix method: PREFIX y</p> <p>Tab method: ^ | Tab</p> <p>Here's a quick example:</p> <pre><code>      VEC \u2190 23 4.3 \u00af23 \u00af3.3 7.5 \u00af8\n\n      3\u2191VEC\n23 4.3 \u00af23\n      5\u2191VEC\n23 4.3 \u00af23 \u00af3.3 7.5\n      1\u2191VEC\n23\n</code></pre> <p>If you give it a negative number, it does the opposite and picks the numbers from the back.</p> <pre><code>      \u00af2\u2191VEC\n7.5 \u00af8\n      \u00af5\u2191VEC\n4.3 \u00af23 \u00af3.3 7.5 \u00af8\n      \u00af1\u2191VEC\n\u00af8\n</code></pre> <p>But watch out: the order is still the same! Take doesn't reverse the list, it just selects from the back. What if you give it a number that's longer than the length of the list? Make a guess...</p> <pre><code>      10\u2191VEC\n23 4.3 \u00af23 \u00af3.3 7.5 \u00af8 0 0 0 0\n      \u00af10\u2191VEC\n0 0 0 0 23 4.3 \u00af23 \u00af3.3 7.5 \u00af8\n</code></pre> <p>It's not a <code>LENGTH ERROR</code>! APL just pads the remaining length with zeros. Very handy. This is actually the only function that works like this: use it wisely.</p> <p>The same works with character vectors:</p> <pre><code>      10\u2191'Hello!'\nHello!    \n</code></pre> <p>Oops, looks like there's nothing there. Let's try adding some characters on the side:</p> <pre><code>      '*', (10\u2191'Hello!'), '*'\n*Hello!    *\n</code></pre> <p>So character vectors get padded with spaces instead of zeros. Nice.</p> <p>Using take</p> <p>The take function is perfect for - Truncating - Padding</p>"},{"location":"course/ch4/part4/#drop","title":"Drop","text":"<p>The dyadic drop function <code>\u2193</code> works very similarly to take. Except now, instead of taking the first N elements, it takes everything but the first N elements.</p> <p>Typing the take function <code>\u2191</code></p> <p>Prefix method: PREFIX u</p> <p>Tab method: v | Tab</p> <p>Let's see it in action:</p> <pre><code>      VEC \u2190 23 4.3 \u00af23 \u00af3.3 7.5 \u00af8\n\n      3\u2193VEC\n\u00af3.3 7.5 \u00af8\n      4\u2193VEC\n7.5 \u00af8\n      5\u2193VEC\n\u00af8\n</code></pre> <p>Same thing with negative numbers: it drops elements from the back.</p> <pre><code>      \u00af3\u2193VEC\n23 4.3 \u00af23\n      \u00af4\u2193VEC\n23 4.3\n      \u00af5\u2193VEC\n23\n</code></pre> <p>What do you think happens if we drop too many elements?</p> <pre><code>      10\u2193VEC\n\n      \u00af10\u2193VEC\n</code></pre> <p>We get nothing: just the empty vector! Makes sense.</p>"},{"location":"course/ch4/part4/#index","title":"Index","text":"<p>Indexing is used to pick out values based on an index from an array. Let's compare two different programs: the first one is written in Python, and the second one is written in APL.</p> <pre><code>things = [5, -7, 6, 3, 0, 1]\nprint(things[2])\n\n# Outputs 6\n</code></pre> <pre><code>      THINGS \u2190 5 \u00af7 6 3 0 1\n      THINGS[3]\n6\n</code></pre> <p>The syntax is almost exactly the same! Except, of course, APL starts counting from 1 and not 0. If you want to change this, you can use the <code>\u2395IO</code> variable again: the brackets are context-sensitive.</p> <pre><code>      \u2395IO \u2190 0\n\n      THINGS[2]\n6\n\n      \u2395IO \u2190 1\n</code></pre> <p>There's one big difference between these brackets and Python's brackets, though: APL brackets are cooler. Take a look at this!</p> <pre><code>      THINGS \u2190 5 \u00af7 6 3 0 1\n\n      THINGS[3 6 2]\n6 1 \u00af7\n      THINGS[1 2 3]\n5 \u00af7 6\n      THINGS[\u23733]\n5 \u00af7 6\n      THINGS[1 2 2 2]\n5 \u00af7 \u00af7 \u00af7\n</code></pre> <p>By putting in a vector instead of a scalar in the argument, APL will give you back a vector of just those elements. Neat!</p> <p>One more thing: the brackets won't let you pick stuff from outside a vector.</p> <pre><code>      THINGS[0 1 2]\nINDEX ERROR\n      THINGS[0 1 2]\n            \u2227\n\n      THINGS[7 1 2]\nINDEX ERROR\n      THINGS[7 1 2]\n            \u2227\n</code></pre> <p>You just get an error: the <code>INDEX ERROR</code>.</p> <p>Square brackets and shape</p> <p>When you pass just one element to the square brackets <code>[]</code>, they return a scalar, but when you pass multiple elements it returns a vector.   Seems a little inconsistent, right?</p> <p>Actually, no!   The square brackets will always return something that has the same shape as what you give them.</p> <p>Let's see this in action. If you pass it a vector of length 2, then the response will also be a vector of length 2.</p> <pre><code>      \u23742 5\n2\n      THINGS[2 5]\n\u00af7 0\n      \u2374THINGS[2 5]\n2\n ```\n\nIf you pass it a scalar (whose shape is the empty vector), then it returns a scalar (whose shape is also the empty vector).\n\n```apl\n      \u23741\n(nothing gets printed)\n      THINGS[1]\n5\n      \u2374THINGS[1]\n(nothing gets printed again)            \n</code></pre> <p>What do you think happens if you pass it a matrix with shape <code>2 3</code>?   Well, it returns a matrix of shape <code>2 3</code>!</p> <pre><code>      2 3\u23741 3 5 2 4 4\n1 3 5\n2 4 4\n      \u23742 3\u23741 3 5 2 4 4\n2 3\n      THINGS[2 3\u23741 3 5 2 4 4]\n5 6 0\n\u00af7 3 3\n      \u2374THINGS[2 3\u23741 3 5 2 4 4]\n2 3\n</code></pre> <p>We are just converting an array of indices to an array of values.   The square brackets will always return something that has the same shape as what you give them.</p>"},{"location":"course/ch4/part4/#compress","title":"Compress","text":"<p>The dyadic compress function <code>/</code> will let you use a mask to pick elements from an array. This function is perfect for when you need to pick out items based on a certain condition.</p> <pre><code>      SUBS \u2190 0 0 0 4 5 0 2 1 4\n      1 1 1 1 1 0 0 0 0 / SUBS\n0 0 0 4 5\n</code></pre> <p>We give it a vector of the same length on the left, and it keeps all the positions with a 1 and kills all the positions with a 0. How do we generate these automatically? Say we wanted to remove all the zeros from the array. We can use the boolean function <code>=</code> to see where all the zeros are and then use <code>/</code> to get rid of them.</p> <pre><code>      0=SUBS\n1 1 1 0 0 1 0 0 0\n      (0=SUBS)/SUBS\n0 0 0 0 (1)\n      (0\u2260SUBS)/SUBS\n4 5 2 1 4\n</code></pre> <ol> <li>Hint: whoops, wrong way around</li> </ol> <p>Same thing, if you wanted all the small numbers, you can use the <code>&lt;</code> function:</p> <pre><code>      3&gt;SUBS\n1 1 1 0 0 1 1 1 0\n      (3&gt;SUBS)/SUBS\n0 0 0 0 2 1\n</code></pre> <p>If you want to combine multiple conditions, you can use the other logical functions we covered in Chapter 3. Go back and revise them if you've forgotten! Here, let's pick all the values that are small but not zero:</p> <pre><code>      3&gt;SUBS\n1 1 1 0 0 1 1 1 0\n      0\u2260SUBS\n0 0 0 1 1 0 1 1 1\n      (3&gt;SUBS)\u22270\u2260SUBS\n0 0 0 0 0 0 1 1 0\n      ((3&gt;SUBS)\u22270\u2260SUBS)/SUBS\n2 1\n</code></pre>"},{"location":"course/ch4/part4/#pick","title":"Pick","text":"<p>You can use the dyadic pick <code>\u2283</code> function to pick just one element from a vector:</p> <pre><code>      P \u2190 1 9 4 \u00af3 \u00af2 \u00af1\n      2\u2283P\n9\n      3\u2283P\n4\n      6\u2283P\n\u00af1\n</code></pre> <p>\"But why would I ever use this?! Don't the square brackets do the same thing and more? And this is harder to type!\" Good point. There's no real benefit in using pick when you have simple vectors like this. The only real case where this is useful is when you're working with nested vectors. Remember how they work?</p> <pre><code>      A \u2190 (1 2) (3 4 5) (2 44 2 1)\n      A\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2\u25023 4 5\u25022 44 2 1\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Here, we've created a nested vector <code>A</code> that has three simple vectors inside it. If we try to get the second vector out using the square brackets, we get something weird...</p> <pre><code>      A[2]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25023 4 5\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\n\n      A[2;1]\nRANK ERROR\n      A[2;1]\n       \u2227\n\n      \u2374A[2]\n(nothing gets printed)\n</code></pre> <p>Instead of getting a vector, we get a vector in a box. And when we try to use <code>\u2374</code> to find its shape, we see that its shape is the empty vector: it's a scalar! We'll get back to exactly why this is in the next chapter. For now, you can think of your vector as being trapped in a box and unable to escape. To set it free, we use pick!</p> <p>We can use it monadically to unbox the vector <pre><code>      \u2283A[2]\n3 4 5\n</code></pre></p> <p>or use it dyadically to index and unbox at the same time</p> <pre><code>      2\u2283A\n3 4 5\n\n      2 1\u2283A\n3\n\n      \u23742\u2283A\n3\n</code></pre> <p>Peace has been restored to the world.</p> <p>Typing the pick function <code>\u2283</code></p> <p>Prefix method: PREFIX x</p> <p>Tab method: ) ) Tab</p>"},{"location":"course/ch4/part5/","title":"Searching","text":"<p>This part will cover</p> <ul> <li>Different search methods on 1D arrays:<ul> <li>Iota</li> <li>Iota underbar</li> <li>Epsilon</li> <li>Epsilon underbar</li> <li>Key</li> </ul> </li> </ul>"},{"location":"course/ch4/part5/#indices-of","title":"Indices of","text":"<p>The most used searching function is the dyadic indices of, which shares its symbol with the index function <code>\u2373</code>.</p> <p>Typing the indices of function <code>\u2373</code></p> <p>Prefix method: PREFIX i</p> <p>Tab method: i i Tab</p> <p>If you want a simple way to find a value in an array, <code>\u2373</code> is your guy. On the left, you give it an array to search in; on the right, you give it an array of values to find. The function will output the indices where your values are located.</p> <pre><code>      3 5 2 1 4 \u2373 2\n3\n      'asdfghjkl' \u2373 'agl'\n1 5 9\n</code></pre> <p>What do you think happens when you try to search for a value that doesn't exist? Pick your guess:</p> <ul> <li><code>0</code></li> <li>Big number</li> <li><code>VALUE ERROR</code></li> <li><code>LENGTH ERROR</code></li> </ul> <p>If you picked any of the errors, then you think APL is too mean. After all, why punish the programmer when they are just trying to search for a value? No, there's a way better way of handling this issue. If you picked <code>0</code>, you're closer, but still a little off. It could work if zero was never a valid index; however, <code>\u2373</code> is index-sensitive. Look:</p> <pre><code>      'asdfghjkl' \u2373 'agl'\n1 5 9\n\n      \u2395IO \u2190 0\n\n      'asdfghjkl' \u2373 'agl'\n0 4 8\n\n      \u2395IO \u2190 1\n</code></pre> <p>Instead of returning zero (or a negative number), the APL developers decided to be clever and return a number that's one larger than the length of the array.</p> <pre><code>      'asdfghjkl' \u2373 'agl'\n1 5 9\n      'asdfghjkl' \u2373 'agl\u00f6'\n1 5 9 10\n</code></pre> <p>This is actually super useful! Let's say we have two vectors: <code>STUDENTS</code> contains student names, and <code>GPAS</code> contains their grades. For example,</p> <pre><code>      STUDENTS \u2190 'ALICE' 'BOB' 'CHARLIE' 'DAVID' 'EEVA'\n      GPAS \u2190 5.0 3.4 1.0 4.2 4.1\n</code></pre> <p>Say we wanted to get to find David's and Charlie's GPAs from the list, but we didn't know what position they were in. To do this, we can use iota to find their indices, and then use them along with the brackets <code>[]</code> to get the GPAs from the list:</p> <pre><code>      STUDENTS \u2373 'DAVID' 'CHARLIE'\n4 3\n      GPAS[STUDENTS \u2373 'DAVID' 'CHARLIE']\n4.2 1\n</code></pre> <p>Then, if we try to find a user that doesn't exist, we will get an index that's one larger than the largest item. So, we can just add one more \"default\" item to the GPA list and use that as a \"not found\" element!</p> <pre><code>      GPAS,'X'\n5 3.4 1 4.2 4.1 X\n      \u2374GPAS,'X'\n6\n      (GPAS,'X')[STUDENTS \u2373 'DAVID' 'CHARLIE']\n4.2 1\n      (GPAS,'X')[STUDENTS \u2373 'DAVID' 'CHARLIE' 'JULIET']\n4.2 1 X\n      (GPAS,'X')[STUDENTS \u2373 'DAVID' 'CHARLIE' 'JULIET' 'BOB']\n4.2 1 X 3.4\n      (GPAS,'X')[STUDENTS \u2373 'DAVID' 'CHARLIE' 'JULIET' 'BOB' 'ROMEO']\n4.2 1 X 3.4 X\n</code></pre> <p>Handy!</p> <p>Here's another APL idiom that you should remember: changing one value to another.</p> <pre><code>      NUMS \u2190 9 4 1 2 0 3\n      NUMS\n9 4 1 2 0 3\n\n      NUMS[NUMS\u23734]\n4\n      NUMS[NUMS\u23734]\u21906\n\n      NUMS\n9 6 1 2 0 3\n</code></pre> <p>So, using <code>NUMS[NUMS\u23734]</code> just gets you the number you were searching for (<code>4</code>), but adding an assignment <code>\u2190</code> lets you reset whatever was in the position.</p> <p>Even though iota is handy, it's not perfect. Let's say our array had repeats in it, and we wanted to find them all...</p> <pre><code>      LETTERS \u2190 'abcdefgaaahijkl'\n      LETTERS\nabcdefgaaahijkl\n\n      LETTERS \u2373 'a'\n1\n      LETTERS \u2373 'aa'\n1 1\n      LETTERS \u2373 'aaa'\n1 1 1\n</code></pre> <p>Nope. Iota just finds the first occurrence of <code>'a'</code> and stops. We'll learn how to find more than just one value later.</p> <p>Here's a funny error that can happen with <code>\u2373</code>:</p> <pre><code>      10 \u2373 10 11 12\nRANK ERROR\n      10\u237310 11 12\n        \u2227\n</code></pre> <p>You could think that this should return <code>1 2 2</code> (the first element, and two elements not in the list). But actually, the number 10 is a scalar and not an array! So you can't search inside it. Rip.</p>"},{"location":"course/ch4/part5/#member-of","title":"Member of","text":"<p>Dyadic iota <code>\u2373</code> answers the question \"where is it?\"; dyadic epsilon <code>\u220a</code> answers the question \"is it?\"</p> <pre><code>      4 \u220a 1 3 4 5 6\n1\n      4 \u220a 1 3 2 5 6\n0\n      4 3 \u220a 1 3 2 5 6\n0 1\n      4 3 4 3 \u220a 1 3 2 5 6\n0 1 0 1\n</code></pre> <p>It gives a simple yes/no answer, telling you whether the value is in the array or not.</p> <p>Typing the member of function <code>\u220a</code></p> <p>Prefix method: PREFIX e</p> <p>Tab method: e e Tab</p> <p>Watch out!</p> <p>Iota <code>\u2373</code> takes in the array to search on the left and the value(s) to find on the right.</p> <p>Epsilon <code>\u220a</code> takes in the array to search on the right and the value(s) to find on the left.</p> <p>Be careful!</p> <p>This one's farily straightforward.</p>"},{"location":"course/ch4/part5/#where","title":"Where","text":"<p>Let's try answering the question \"where are all the values?\" instead of the more boring question \"where is the first value?\" For this example, we'll use the vector <code>PRICES</code>, which has a bunch of prices of items. First, let's try finding where all the items are which have a price of <code>40</code>. Simple <code>\u2373</code> won't cut the job, since we saw earlier that it only found the first element. Let's be more creative: first, we want to find all the positions that have the number 40...</p> <pre><code>      PRICES\u219012 39 40 10 55 40 73\n      40=PRICES\n0 0 1 0 0 1 0\n</code></pre> <p>Then, we want to convert these values to indices. A good strategy is to:</p> <ol> <li>Get the length of the array (<code>\u2374</code>)</li> <li>Get a vector of indices of the same length (<code>\u2373</code>)</li> <li>Use the bit mask <code>0 0 1 0 0 1 0</code> to select the indices (<code>/</code>)</li> </ol> <p>Step-by-step:</p> <pre><code>      40=PRICES\n0 0 1 0 0 1 0\n\n      \u2374PRICES\n7\n      \u2373\u2374PRICES\n1 2 3 4 5 6 7\n      (40=PRICES)/\u2373\u2374PRICES\n3 6\n</code></pre> <p>Slashiotarho</p> <p>Look at the three symbols: slash, iota, and rho. This way of finding where values are is so useful that it has its own name: SLASHIOTARHO!</p> <p>Chant it to yourself before bed and remember it well.</p> <p>Slashiotarho is also more powerful than the dyadic <code>\u2373</code> function we looked at earlier, since we can use it to find any condition we like. For example, if we wanted to find all prices that are at most 40, we can just change one symbol:</p> <pre><code>      PRICES\n12 39 40 10 55 40 73\n\n      (40=PRICES)/\u2373\u2374PRICES\n3 6\n      (40\u2265PRICES)/\u2373\u2374PRICES\n1 2 3 4 6\n</code></pre> <p>Slashiotarho is such a useful function, that the APL developers decided to add a whole new symbol: the SUPER-IOTA (officially called \"iota underbar\") that can be used to perform the \"where\" function. This is a monadic function, which takes in a list of ones and zeros on the right and returns the location of all the ones. Let's compare slashiotarho with the where function:</p> <pre><code>      PRICES\n12 39 40 10 55 40 73\n\n      40=PRICES\n0 0 1 0 0 1 0\n      (40=PRICES)/\u2373\u2374PRICES\n3 6\n      \u237840=PRICES\n3 6\n\n      40\u2265PRICES\n1 1 1 1 0 1 0\n      (40\u2265PRICES)/\u2373\u2374PRICES\n1 2 3 4 6\n      \u237840\u2265PRICES\n1 2 3 4 6\n</code></pre> <p>Typing the where function <code>\u2378</code></p> <p>Prefix method: PREFIX I</p> <p>Tab method: i _ Tab</p> <p>It's a little more compact! Feel free to use it when needed.</p>"},{"location":"course/ch4/part5/#interval-index","title":"Interval Index","text":"<p>Sometimes, instead of finding exactly where an element is in an array, you'd like to find what elements it's between. Consider the grading function we defined in chapter 3, write problem 12</p> <pre><code>      GRADE 42\n0\n\n      GRADE 43\n1\n\n      GRADE 51\n2\n\n      GRADE 58\n3\n\n      GRADE 65\n4\n\n      Grade 72\n5\n</code></pre> <p>What this function does is try to find where the right argument <code>\u2375</code> is, between the grade boundaries <code>0 43 51 58 65 72</code> for the grades <code>0 1 2 3 4 5</code>. </p> <p>Another example of this kind of problem is looking for a word in a dictionary, where the page with the word <code>\u2375</code> is the one where <code>\u2375</code> is alphabetically between the first word of the page and the first word of the next page.</p> <p>This problem can be solved with the dyadic \u2378 interval index function. The vector left argument <code>\u237a</code> specifies the boundaries that the right argument <code>\u2375</code> is placed between.  </p> <pre><code>      43 51 58 65 72 \u2378 10\n0\n\n      43 51 58 65 72 \u2378 64\n3\n\n      43 51 58 65 72 \u2378 72\n5\n\n      'aardvark' 'abrasion' 'accessory' 'acquittance' 'adamantine' \u2378 \u2282'absolute'\n2\n</code></pre>"},{"location":"course/ch4/part5/#find","title":"Find","text":"<p>All of the finding operations that we looked at so far have been to find one element in an array. APL also has a function to find subarrays: the dyadic find function, which is written using the epsilon-underbar symbol <code>\u2377</code>.</p> <p>Typing the find function <code>\u2377</code></p> <p>Prefix method: PREFIX E</p> <p>Tab method: e _ Tab</p> <pre><code>      SENTENCE \u2190 'Hello, this is elsa from melbourne'\n      'el' \u2377 SENTENCE\n0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0\n</code></pre> <p>In this example, the ones are where each <code>'el'</code> starts in the long sentence. You can also do this with arrays of strings:</p> <pre><code>      ANIMALS \u2190 'cow' 'horse' 'dog' 'horse' 'cow' 'cat' 'horse' 'cow' 'bat' \n      'horse' 'cow' \u2377 ANIMALS\n0 0 0 1 0 0 1 0 0\n</code></pre> <p>These occurences can also overlap:</p> <pre><code>      'ooo' \u2377 'meoooooooow meooow'\n0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 0 0 0\n</code></pre>"},{"location":"course/ch4/part5/#key","title":"Key","text":"<p>Last one for this part! The key \u2338 operator provides a way of grouping together elements of an array, and apply an arbitrary function to each group</p> <pre><code>      {\u237a \u2375}\u2338'ENTENTE'\n\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502E\u25021 4 7\u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502N\u25022 5  \u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502T\u25023 6  \u2502\n\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n      {\u2395\u2190\u237a}\u2338'ENTENTE'\nENT\n      {\u2395\u2190\u2375}\u2338'ENTENTE'\n1 4 7\n2 5\n3 6\n</code></pre> <p>The left argument function for the key \u2338 operator takes as left argument the group value (in the above, the unique letters E N and T) and as right argument the indices of the elements of that group.</p> <pre><code>      PRIMER \u2190 'CGCAAATGGGCGGTAGGCGTG'\n      \u235d Number of each nucleotide\n      {\u237a,\u2374\u2375}\u2338PRIMER\nC  4\nG 10\nA  4\nT  3\n</code></pre> <p>In the dyadic case, the \u2338 key operator groups by the left argument and uses the right argument to number the elements. Consider the following two dimensional array of fast food orders</p> <pre><code>      ORDERS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502STEVE MCALE    \u2502BURGER \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502JOHNSON SWEEMEY\u2502HOT DOG\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DEREK ARCHIBELD\u2502BURGER \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502MIKE NANDES    \u2502BURGER \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SCOTT WESTON   \u2502HOT DOG\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Grouping by the second column, creating a list of names for each menu item, </p> <pre><code>      ORDERS[;1]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502STEVE MCALE\u2502JOHNSON SWEEMEY\u2502DEREK ARCHIBELD\u2502MIKE NANDES\u2502SCOTT WESTON\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      ORDERS[;2]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502BURGER\u2502HOT DOG\u2502BURGER\u2502BURGER\u2502HOT DOG\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      ORDERS[;2]{\u237a \u2375}\u2338ORDERS[;1]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502BURGER\u2502 \u2502\u2502STEVE MCALE\u2502DEREK ARCHIBELD\u2502MIKE NANDES\u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502\n\u2502\u2502HOT DOG\u2502\u2502\u2502JOHNSON SWEEMEY\u2502SCOTT WESTON\u2502           \u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Perfect!</p>"},{"location":"course/ch4/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p> <p>Read problem 1</p> InputOutput <pre><code>      5 ? 52\n</code></pre> <pre><code>      5 ? 52\n38 47 28 43 41\n\n      \u235d Dealing 5 random numbers without repetition from 1 and 52\n</code></pre> <p>Read problem 2</p> InputOutput <pre><code>      CARDS\n\u250c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502\u26602\u2502\u26603\u2502\u26604\u2502\u26605\u2502\u26606\u2502\u26607\u2502\u26608\u2502\u26609\u2502\u266010\u2502\u2660J\u2502\u2660Q\u2502\u2660K\u2502\u2660A\u2502\u26652\u2502\u26653\u2502\u26654\u2502\u26655\u2502\u26656\u2502\u26657\u2502\u26658\u2502\u26659\u2502\u266510\u2502\u2665J\u2502\u2665Q\u2502\u2665K\u2502\u2665A\u2502\u26662\u2502\u26663\u2502\u26664\u2502\u26665\u2502\u26666\u2502\u26667\u2502\u26668\u2502\u26669\u2502\u266610\u2502\u2666J\u2502\u2666Q\u2502\u2666K\u2502\u2666A\u2502\u26632\u2502\u26633\u2502\u26634\u2502\u26635\u2502\u26636\u2502\u26637\u2502\u26638\u2502\u26639\u2502\u266310\u2502\u2663J\u2502\u2663Q\u2502\u2663K\u2502\u2663A\u2502\n\u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2518\n\n      CARDS[5 ? 52]\n</code></pre> <pre><code>      CARDS\n\u250c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502\u26602\u2502\u26603\u2502\u26604\u2502\u26605\u2502\u26606\u2502\u26607\u2502\u26608\u2502\u26609\u2502\u266010\u2502\u2660J\u2502\u2660Q\u2502\u2660K\u2502\u2660A\u2502\u26652\u2502\u26653\u2502\u26654\u2502\u26655\u2502\u26656\u2502\u26657\u2502\u26658\u2502\u26659\u2502\u266510\u2502\u2665J\u2502\u2665Q\u2502\u2665K\u2502\u2665A\u2502\u26662\u2502\u26663\u2502\u26664\u2502\u26665\u2502\u26666\u2502\u26667\u2502\u26668\u2502\u26669\u2502\u266610\u2502\u2666J\u2502\u2666Q\u2502\u2666K\u2502\u2666A\u2502\u26632\u2502\u26633\u2502\u26634\u2502\u26635\u2502\u26636\u2502\u26637\u2502\u26638\u2502\u26639\u2502\u266310\u2502\u2663J\u2502\u2663Q\u2502\u2663K\u2502\u2663A\u2502\n\u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2518\n\n      CARDS[5 ? 52]\n\u250c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502\u2665K\u2502\u26663\u2502\u266010\u2502\u266510\u2502\u26607\u2502\n\u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2518\n      \u235d Dealing a hand of five cards\n</code></pre> <p>Read problem 3</p> InputOutput <pre><code>      APL\n     ._________________.    \n     |.---------------.|    \n     ||  __  ____ __  ||    \n     || / _\\(  _ (  ) ||    \n     ||/    \\) __/ (_/||    \n     ||\\_/\\_(__) \\____||    \n     ||_______________||    \n     /.-.-.-.-.-.-.-.-.\\    \n    /.-.-.-.-.-.-.-.-.-.\\   \n   /.-.-.-.-.-.-.-.-.-.-.\\  \n  /______/__________\\_____\\ \n  \\_______________________/ \n      2/APL\n</code></pre> <pre><code>      APL\n     ._________________.    \n     |.---------------.|    \n     ||  __  ____ __  ||    \n     || / _\\(  _ (  ) ||    \n     ||/    \\) __/ (_/||    \n     ||\\_/\\_(__) \\____||    \n     ||_______________||    \n     /.-.-.-.-.-.-.-.-.\\    \n    /.-.-.-.-.-.-.-.-.-.\\   \n   /.-.-.-.-.-.-.-.-.-.-.\\  \n  /______/__________\\_____\\ \n  \\_______________________/ \n      2/APL\n      ..__________________________________..        \n      ||..------------------------------..||        \n      ||||    ____    ________  ____    ||||        \n      ||||  //  __\\\\((    __  ((    ))  ||||        \n      ||||//        \\\\))  ____//  ((__//||||        \n      ||||\\\\__//\\\\__((____))  \\\\________||||        \n      ||||______________________________||||        \n      //..--..--..--..--..--..--..--..--..\\\\        \n    //..--..--..--..--..--..--..--..--..--..\\\\      \n  //..--..--..--..--..--..--..--..--..--..--..\\\\    \n//____________//____________________\\\\__________\\\\  \n\\\\______________________________________________//  \n</code></pre> <p>Read problem 4</p> InputOutput <pre><code>      DICTIONARY\nAA  \nAAHED  \nAAHING  \nAAHS  \nAALII  \nAALIIS  \nAALS  \nAARDVARK \n. . .\n      DICTIONARY[1;]\nAA\n      DICTIONARY[;1]\nA\nA\nA\nA\n. . .\n      DICTIONARY[\u2378DICTIONARY[;1]='X';]\n</code></pre> <p><pre><code>      DICTIONARY\nAA  \nAAHED  \nAAHING  \nAAHS  \nAALII  \nAALIIS  \nAALS  \nAARDVARK \n. . .\n      DICTIONARY[1;]\nAA\n      DICTIONARY[;1]\nA\nA\nA\nA\n. . .\n      DICTIONARY[\u2378DICTIONARY[;1]='X';]\nXANTHAM        \nXANTHAMS       \nXANTHAN        \nXANTHANS       \nXANTHATE       \nXANTHATES      \n. . .\n</code></pre> All words starting with 'X'</p> <p>Read problem 5</p> InputOutput <pre><code>      'TELE' \u2377 DICTIONARY\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n. . .\n      \u2378 'TELE' \u2377 DICTIONARY\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\n\u250214061 2\u250214062 2\u250214063 2\u250214064 2\u250214065 2\u250218946 3\u250218947 3\u250218948 3\u250219107 4\u250219108 4\u250219109 4\u250223447 4\u250223448 4\u250223449 4\u250235280 4\u25024\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\n      1 1\u2283(\u2378 'TELE' \u2377 DICTIONARY)\n</code></pre> <pre><code>      'TELE' \u2377 DICTIONARY\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n. . .\n      \u2378 'TELE' \u2377 DICTIONARY\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\n\u250214061 2\u250214062 2\u250214063 2\u250214064 2\u250214065 2\u250218946 3\u250218947 3\u250218948 3\u250219107 4\u250219108 4\u250219109 4\u250223447 4\u250223448 4\u250223449 4\u250235280 4\u25024\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\n      1 1\u2283(\u2378 'TELE' \u2377 DICTIONARY)\n14061\n</code></pre> <p>Read problem 6</p> InputOutput <pre><code>      DICTIONARY[1 1\u2283(\u2378 'TELE' \u2377 DICTIONARY);]\n</code></pre> <pre><code>      DICTIONARY[1 1\u2283(\u2378 'TELE' \u2377 DICTIONARY);]\nATELECTASES\n</code></pre> <p>First word with 'TELE'</p> <p>Read problem 7</p> ProblemSolution <p>$$ \\sum_{n=1}^{100} \\frac{1}{n^2} $$</p> <p>can be written in APL using reduce / as...</p> <p>$$ \\sum_{n=1}^{100} \\frac{1}{n^2} $$</p> <p>can be written in APL using reduce / as...</p> <pre><code>      +/ 1\u00f72*\u2368\u2373100\n</code></pre> <p>Read problem 8</p> ProblemSolution <p>$$ \\frac{1}{\\frac{2}{\\frac{3}{\\frac{\\dots}{10}}}} $$</p> <p>can be written in APL using reduce / as</p> <p>$$ \\frac{1}{\\frac{2}{\\frac{3}{\\frac{\\dots}{10}}}} $$</p> <p>can be written in APL using reduce / as</p> <pre><code>      \u00f7/\u237310\n</code></pre> <p>Read problem 9</p> InputOutput <p>$$ \\frac{F_1}{F_2},\\frac{F_2}{F_3},\\ldots,\\frac{F_9}{F_{10}} $$</p> <p>where $F_n$ is the nth Fibonacci number, can be written in APL (given an array FIBB of the first 10 Fibonacci numbers) as</p> <p>$$ \\frac{F_1}{F_2},\\frac{F_2}{F_3},\\ldots,\\frac{F_9}{F_{10}} $$</p> <p>where $F_n$ is the nth Fibonacci number, can be written in APL (given an array FIBB of the first 10 Fibonacci numbers) as</p> <pre><code>      2\u00f7/FIBB\n</code></pre> <p>This is a sequence of approximations to the golden ratio</p> <p>Read problem 10</p> InputOutput <pre><code>      VOTES \u2190 'HAUNTED HOUSE' 'CAFE' 'CAFE' 'CAFE' 'HAUNTED HOUSE' 'HAUNTED HOUSE' 'CAFE' 'HAUNTED HOUSE' 'ANIMAL CAFE' 'CAFE' 'CAFE'\n      {\u237a,\u2374\u2375}\u2338VOTES\n</code></pre> <pre><code>      VOTES \u2190 'HAUNTED HOUSE' 'CAFE' 'CAFE' 'CAFE' 'HAUNTED HOUSE' 'HAUNTED HOUSE' 'CAFE' 'HAUNTED HOUSE' 'ANIMAL CAFE' 'CAFE' 'CAFE'\n      {\u237a,\u2374\u2375}\u2338VOTES\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2510\n\u2502HAUNTED HOUSE\u25024\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2524\n\u2502CAFE         \u25026\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2524\n\u2502ANIMAL CAFE  \u25021\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2518\n</code></pre> <p>Read problem 11</p> InputOutput <pre><code>      ({\u237a}\u2338VOTES)[\u2352{\u2374\u2375}\u2338VOTES]\n</code></pre> <pre><code>      ({\u237a}\u2338VOTES)[\u2352{\u2374\u2375}\u2338VOTES]\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502CAFE\u2502HAUNTED HOUSE\u2502ANIMAL CAFE\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Read problem 12</p> InputOutput <pre><code>      \u235d Hours spent on homework per day\n      HOMEWORK \u2190 1 1 2 2 4 0 1\n      +/HOMEWORK\n\n      +\\HOMEWORK\n\n      2-/HOMEWORK\n\n      -2-/HOMEWORK\n\n      +\\-2-/HOMEWORK\n\n      +\\HOMEWORK[1],-2-/HOMEWORK\n</code></pre> <pre><code>      \u235d Hours spent on homework per day\n      HOMEWORK \u2190 1 1 2 2 4 0 1\n      +/HOMEWORK\n11\n      +\\HOMEWORK\n1 2 4 6 10 10 11\n      2-/HOMEWORK\n0 \u00af1 0 \u00af2 4 \u00af1\n      -2-/HOMEWORK\n0 1 0 2 \u00af4 1\n      +\\-2-/HOMEWORK\n0 1 1 3 \u00af1 0\n      +\\HOMEWORK[1],-2-/HOMEWORK\n1 1 2 2 4 0 1\n</code></pre> <p>Notice that the cumulative sum of the first element of HOMEWORK with the first differences of HOMEWORK is the same as HOMEWORK itself. If you know a little calculus, this might look familiar as the integral of the derivative being the same function up to a constant C.</p>"},{"location":"course/ch4/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch4/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination"},{"location":"course/ch4/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination <code>+</code> Plus Addition + <code>-</code> Minus Subtraction - <code>\u00d7</code> Times Multiplication PREFIX - <code>\u00f7</code> Divide Division PREFIX = <code>*</code> Power Exponentiation * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 <code>\u235d</code> Lamp Comment PREFIX , <code>\u2190</code> Assignment operator Assigning variables &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L"},{"location":"course/ch4/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p> <p>Write problem 1</p> <p>Create a dfn that returns the string 'ABBCCCDDDDEEEEFFFFF...ZZZZZZZZZZZZZZZZZZZZZZZZZZ'  ABB\u2190 Submit <p></p></p> <p>Write problem 2</p> <p>Create a dfn that returns the vector \u237a, \u237a+1, \u237a+2, \u237a+3, ..., \u2375  INT\u2190 Submit <p></p></p> <p>Write problem 3</p> <p>Create a dfn that returns the vector \u237a, \u237a+\u2375[1], \u237a+2\u00d7\u2375[1], \u237a+3\u00d7\u2375[1], ..., \u237a+\u2375[2]\u00d7\u2375[1] <pre><code>      1 step 10 10\n1 11 21 31 41 51 61 71 81 91 101\n\n      2 step 0.5 5\n2 2.5 3 3.5 4 4.5\n</code></pre> STEP\u2190 Submit <p></p></p> <p>Write problem 4</p> <p>Create a dfn that evaluates the following continued fraction to 100 1s $$       1+\\frac{1}{1+\\frac{1}{1+\\frac{1}{\\ldots}}} $$</p> <p>Hint: Use the reduce / operator with the right function left argument  RATIO\u2190 Submit <p></p></p> <p>Write problem 5</p> <p>Create a dfn that evaluates the following sum $$       \\sum_{n=0}^{100} \\frac{1}{n^2} $$</p> <p>Hint: Use the reduce / operator  SUM\u2190 Submit <p></p></p> <p>Write problem 6</p> <p>Create a dfn that returns a 1 if its left argument is totally contained in its right argument, and 0 otherwise. <pre><code>      1 1 2 3 SUBSET 1 2 3 4 5\n1\n      'MEOW' SUBSET 'HOMEOWNER'\n1\n      'I' SUBSET 'TEAM'\n0\n</code></pre> SUBSET\u2190 Submit <p></p></p> <p>Write problem 7</p> <p>Create a dfn that returns 1 if <code>\u2375</code> is prime, and 0 otherwise. A prime number is one that does not divide any number other than itself and 1, that is, the remainder of division is 0 only for 1 and <code>\u2375</code>.</p> <p> PRIME\u2190 Submit <p></p></p> <p>Write problem 8</p> <p>Create a dfn that takes in a string right argument and returns the most common letter.</p> <p> MODE\u2190 Submit <p></p></p> <p>Write problem 9</p> <p>The most common letter in the english language is the letter 'E'. A simple method of obtaining the shift (and thus deciphering) Caesar ciphered text is to look at the most common letter, and shift it back to 'E'. For example, 'GURBJYFNERABGJUNGGURLFRRZ' has most common letter 'R', shifting back 13 spaces gives us 'THEOWLSARENOTWHATTHEYSEEM'.</p> <p>Create a dfn that applies this algorithm to a string right argument.</p> <p> DECIPHER\u2190 Submit <p></p></p> <p>Write problem 10</p> <p>Create a dfn that generates a random word of length <code>\u2375</code>.</p> <pre><code>      WORD 10\nOJCCKXBSVA\n      WORD 5\nSBURB \n</code></pre> <p> WORD\u2190 Submit <p></p></p> <p>Write problem 11</p> <p>Create a dfn that generates an array with 1s separated by 0s, where the length of each run of 0s is specified by a vector right argument <code>\u2375</code>.</p> <pre><code>      RUN 2 3 4\n0 0 1 0 0 0 1 0 0 0 0 1\n      RUN 10\n0 0 0 0 0 0 0 0 0 0 1\n</code></pre> <p>Hint: One way is to use \u220a member of and + plus scan</p> <p> RUN\u2190 Submit <p></p></p> <p>Write problem 12</p> <p>Create a dfn that generates random words with lengths specified by its right vector argument <code>\u2375</code>. <pre><code>      PHRASE 3 4 5\nOG CPD HXQO \n</code></pre></p> <p>Hint: One way is to use \u220a member of and + plus scan</p> <p> PHRASE\u2190 Submit <p></p></p>"},{"location":"course/ch5/bonus/","title":"Bonus content: Computer graphics","text":"<p>This part is optional</p> <p>This part is considered to be bonus content. It contains some more advanced topics that are not covered in the main course. It can also give some examples of functions and topics that are introuced later in the course. There are no exercises related to this content.</p> <p>Feel free to skim or skip this section for now, and return to it later!</p> <p>Did you know APL was used to make graphics for the original TRON movie? Judson Rosebush, one of the founders of the computer animation studio Digital Effects, developed \"Visions\"; a library of APL functions intended for generating computer graphics. It allowed the manipulation of polygons in three-dimensional space and compute perspective transformations. The company created several animated sequences for the movie, including animating the polyhedral character \"Bit\" who could only convey one bit of information, answering yes or no questions.</p> <p>Here's a quote from Jeffrey Kleinster, one of the co-founders of Digital Effects, in an interview published in \"CG 101\": \"Our original setup was a 1200-baud modem connection to an Amdahl V6 running A Programming language (APL) in Bethesda, Maryland, using a Tektronix display to preview wireframes. (Polygons refreshed at one per second\u2014that's one polygon per second!)\u2026\"</p> <p>In this section, we will write our own ray marcher to render out 3D environments entirely in APL. The advantages of an array-based language for computer graphics will be immediately seen.</p> <p>In very simple terms, light rays travel from light sources, potentially reflecting off of surfaces, some of which eventually reach light detectors. For example, when admiring a nice forest view, rays of light from the sun get absorbed and emitted at different frequencies by leaves, some of which then make their way to your retina.</p> <p>The only rays of light that affect the final image are the ones which finally reach detectors. For the purposes of computation, light rays are usually traced from from detectors to the sources. This is entirely equivalent to tracing light from sources to detectors, as long as the assumptions of geometric optics hold, which are almost universally assumed in computer graphics.</p> <p>The procedure we will use is as follows. We place a camera at a certain position relative to a 3D environment, and send out rays from the camera for every pixel in the final rendered image in the direction of that pixel. We then calculate the intersection of each of our rays with the environment, and get the directions from the points to the light source of our scene. We finally calculate the shading for the specific points of the environment, by comparing the vector orthogonal to the surface at that point, the normal vector, to the direction of the light source. We will ignore lighting falloff and shadows in our rendering for simplicity.</p> <p></p> <p>For the first step, we create a vector called camera which stores the camera position. We refer to the first coordinate as the x coordinate, the second as the y coordinate, and the third as the z coordinate. We imagine the camera is facing the positive z direction, towards (0 0 1).</p> <pre><code>camera \u2190 0 0 \u00af10\n</code></pre> <p>We then create an array to hold pixel coordinates, in this case a 300\u00d7300 image.</p> <pre><code>       \u237310 10\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 1 \u25021 2 \u25021 3 \u25021 4 \u25021 5 \u25021 6 \u25021 7 \u25021 8 \u25021 9 \u25021 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25022 1 \u25022 2 \u25022 3 \u25022 4 \u25022 5 \u25022 6 \u25022 7 \u25022 8 \u25022 9 \u25022 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25023 1 \u25023 2 \u25023 3 \u25023 4 \u25023 5 \u25023 6 \u25023 7 \u25023 8 \u25023 9 \u25023 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25024 1 \u25024 2 \u25024 3 \u25024 4 \u25024 5 \u25024 6 \u25024 7 \u25024 8 \u25024 9 \u25024 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25025 1 \u25025 2 \u25025 3 \u25025 4 \u25025 5 \u25025 6 \u25025 7 \u25025 8 \u25025 9 \u25025 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25026 1 \u25026 2 \u25026 3 \u25026 4 \u25026 5 \u25026 6 \u25026 7 \u25026 8 \u25026 9 \u25026 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25027 1 \u25027 2 \u25027 3 \u25027 4 \u25027 5 \u25027 6 \u25027 7 \u25027 8 \u25027 9 \u25027 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25028 1 \u25028 2 \u25028 3 \u25028 4 \u25028 5 \u25028 6 \u25028 7 \u25028 8 \u25028 9 \u25028 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029 1 \u25029 2 \u25029 3 \u25029 4 \u25029 5 \u25029 6 \u25029 7 \u25029 8 \u25029 9 \u25029 10 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210 1\u250210 2\u250210 3\u250210 4\u250210 5\u250210 6\u250210 7\u250210 8\u250210 9\u250210 10\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n       pxl_coords \u2190 \u2373300 300\n</code></pre> <p>If we picture the image as being in front of the camera, with the camera facing the center of the image, we divide the values by the width/height, and shift them so that the vector 0 0 is at the center.</p> <pre><code>       (\u23735 5)\u00f75\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020.2 0.2\u25020.2 0.4\u25020.2 0.6\u25020.2 0.8\u25020.2 1\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.4 0.2\u25020.4 0.4\u25020.4 0.6\u25020.4 0.8\u25020.4 1\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.6 0.2\u25020.6 0.4\u25020.6 0.6\u25020.6 0.8\u25020.6 1\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.8 0.2\u25020.8 0.4\u25020.8 0.6\u25020.8 0.8\u25020.8 1\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25021 0.2  \u25021 0.4  \u25021 0.6  \u25021 0.8  \u25021 1  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n       ((\u23735 5)\u00f75)-\u22820.6 0.6\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u00af0.4 \u00af0.4\u2502\u00af0.4 \u00af0.2\u2502\u00af0.4 0\u2502\u00af0.4 0.2\u2502\u00af0.4 0.4\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502\u00af0.2 \u00af0.4\u2502\u00af0.2 \u00af0.2\u2502\u00af0.2 0\u2502\u00af0.2 0.2\u2502\u00af0.2 0.4\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 \u00af0.4   \u25020 \u00af0.2   \u25020 0   \u25020 0.2   \u25020 0.4   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.2 \u00af0.4 \u25020.2 \u00af0.2 \u25020.2 0 \u25020.2 0.2 \u25020.2 0.4 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.4 \u00af0.4 \u25020.4 \u00af0.2 \u25020.4 0 \u25020.4 0.2 \u25020.4 0.4 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n       pxl_directions \u2190 (pxl_coords\u00f7\u2262pxl_coords)-\u22820.6 0.6\n</code></pre> <p>If we picture the image as being in front of the camera, with the camera facing the center of the image, we divide the values by the width/height, and shift them so that the vector 0 0 is at the center.</p> <pre><code>       ,\u22181\u00a8(((\u23735 5)\u00f75)-\u22820.6 0.6)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u00af0.4 \u00af0.4 1\u2502\u00af0.4 \u00af0.2 1\u2502\u00af0.4 0 1\u2502\u00af0.4 0.2 1\u2502\u00af0.4 0.4 1\u2502\n\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502\u00af0.2 \u00af0.4 1\u2502\u00af0.2 \u00af0.2 1\u2502\u00af0.2 0 1\u2502\u00af0.2 0.2 1\u2502\u00af0.2 0.4 1\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 \u00af0.4 1   \u25020 \u00af0.2 1   \u25020 0 1   \u25020 0.2 1   \u25020 0.4 1   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.2 \u00af0.4 1 \u25020.2 \u00af0.2 1 \u25020.2 0 1 \u25020.2 0.2 1 \u25020.2 0.4 1 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020.4 \u00af0.4 1 \u25020.4 \u00af0.2 1 \u25020.4 0 1 \u25020.4 0.2 1 \u25020.4 0.4 1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       pxl_directions \u2190 ,\u22181\u00a8pxl_directions \n</code></pre> <p>Where here, the each \u00a8 operator is used to apply the function (,\u22181) to each element of the array. Remember, (,\u22181) is binding the value 1 to the function (,), which means (,\u22181)x is the same as (x,1).</p> <p>Next, we have to calculate the intersection of our rays with the environment. One way is to do this is to keep moving along our rays in small steps until we are close enough to an object in the environment, which we detect using a function that returns the distance to the nearest object. This function should also return negative values for being inside the object, this function is usually called a signed distance function.</p> <p>A more efficient solution is to use this distance function to move along our rays by the distance to the nearest object, guaranteeing first that we do not accidentally move beyond the nearest object while moving along our rays, and second that we approach these objects as quickly as possible. This approach is called \"sphere tracing\".</p> Teadrinker, Visualization of SDF ray marching algorithm, CC BY-SA 4.0 <p>We first setup the environment. The function for getting the distance between two points \u237a and \u2375 in 3D space can be obtained using the Pythagorean theorem:</p> <p></p> <pre><code>           dist \u2190 {0.5*\u2368+/(\u237a-\u2375)*2}\n           1 2 3 dist 4 6 3\n5\n</code></pre> <p>The signed distance function for a sphere is immediate from the definition of a sphere as the set of points a distance R away from some center point C.</p> <p></p> <pre><code>      sphere \u2190 {\u2375[3] -\u2368 \u2375[1] dist \u2375[2]}\n       R \u2190 2\n       C \u2190 0 0 0\n       P \u2190 0 0 4\n       sphere P C R\n  2\n       P \u2190 0 3 4\n       sphere P C R\n  3\n</code></pre> <p>Defining our environment as a sphere at the origin, we define the distance function for the environment.</p> <pre><code>       env \u2190 {C \u2190 0 0 0 \u22c4 R \u2190 2 \u22c4 sphere \u2375 C R}\n       P \u2190 0 3 4\n       env P\n3\n</code></pre> <p>Let\u2019s define the other functions we need and leave the marching function for last.</p> <p>When a point on an object is hit by a ray, the color of that point needs to be calculated in order to make it into the final image. The main insight is that, at every point on the surface of an object, the lighting at that point depends on the angle between the light ray and the surface. For example, if the light ray hits the surface directly, so that it is parallel to the normal at that point, that point will be at the maximum brightness compared to points where the light ray does not hit exactly. If the light ray is perpendicular or makes a negative angle with the surface, then that part of the object is obscured.</p> <p></p> <p>We first normalise the vectors then take their dot product, this gives us the cosine of the angle between the two. Mathematically,</p> <p></p> <p>We will use the cosine of the angle for shading, instead of using the angle explicitly.</p> <pre><code>       length \u2190 0\u2218dist\n       normalize \u2190 \u22a2\u00f7length\n       normalize 3 4 0\n0.6 0.8 0\n</code></pre> <p>The last function we will need is one which returns the normal to the environment at some point. Consider a point on the sphere. Intuitively, the vector orthogonal to the sphere will be the direction which makes the distance to the sphere increase the fastest, since every other direction either takes us towards the center of the sphere or away from the sphere at a slower rate</p> <p></p> <p>We can construct this vector by calculating how much the distance function changes with a small variation in the x, y, and z directions, and normalizing the resulting vector. Small variations are needed so that we only consider points close to the surface point. In vector analysis terms, we are calculating the gradient of the distance function at that point.</p> <pre><code>       small \u2190 0.0001 0 0\n       P \u2190 2 0 0\n         \u0394env_x \u2190 (env (P+small)) - env (P-small)\n         \u0394env_x\n0.0002\n</code></pre> <p>We can use the rotate \u233d operator to make the small vector in the y and z direction too.</p> <pre><code>       1 \u233d small\n0 0 0.0001\n       (\u233d\u2218(0.0001 0 0))\u00a83 2 1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020.0001 0 0\u25020 0.0001 0\u25020 0 0.0001\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u233d\u23733\n3 2 1\n       (\u233d\u2218small)\u00a8\u233d\u23733\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020.0001 0 0\u25020 0.0001 0\u25020 0 0.0001\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       P ((env+)-(env-))\u2368 small\n0.0002\n       P ((env+)-(env-))\u2368((\u233d\u2218(0.0001 0 0))\u00a8\u233d\u23733)\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020.0002 0 0\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2283 P ((env+)-(env-))\u2368((\u233d\u2218(0.0001 0 0))\u00a8\u233d\u23733)\n0.0002 0 0\n       norm \u2190 {normalize \u2283 \u2375 ((env+)-(env-))\u2368((\u233d\u2218(0.0001 0 0))\u00a8\u233d\u23733)}\n       norm P\n1 0 0\n</code></pre> <p>Finally, we are now ready to write the ray marching function. The marching function should take the camera\u2019s initial position, and move it along a ray according to the distance function for either a maximum number of marches or a point is hit, and for the latter return the dot product of the normal at that point with the vector from that point to the light source.</p> <pre><code>       march\u2190({cur_pos\u2190\u2283\u2375 \n            \u22c4 ray\u21902\u2283\u2375\n            \u22c4 i\u21903\u2283\u2375 \n            \u22c4 cur_pos \u2190 cur_pos + (env cur_pos)\u00d7ray \n            \u22c4 (env cur_pos)&lt;0.0001:0\u2308(norm cur_pos)(+.\u00d7)(normalize cur_pos-light)   \n            \u22c4  cur_pos ray (i+1)}\u2363{(1=\u2262\u237a)\u2228((\u237a,0 0)[3]&gt;32)})\n\n       camera \u2190 0 0 \u00af10\n       ray \u2190 0 0 1\n       light \u2190 2 3 4\n       march camera ray 0\n0.8571428571\n       march camera (0 1 0) 0\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2510\n\u25020 3.969795284E10 \u00af10\u25020 1 0\u250233\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2518\n</code></pre> <p>Let\u2019s go through the above code step by step.</p> <p>The function takes in a three element nested array, the first being the camera position, the second is the ray to march along, and the third is a counter variable. It starts from the camera position and adds to it the distance to the environment times the ray. If the distance to the environment is less than a small value, then it returns the dot product of the vector to the light source with the normal to the environment at that point, or zero, depending on which is greater. If not, then it returns the current position, ray, and counter incremented by one.</p> <p>The power operator f\u2363g allows us to evaluate the function f until the function g returns a value of 1. The function g takes in the previous return value of f, and the current return value of f, as left and right arguments. </p> <p>Here, the march function keeps moving the current position along the ray until either the result is a single value, that is, if the if statement in the march function returns either 0 or the dot product, by checking the number of elements (1=\u2262\u237a), or if the number of iterations exceeds 32, \u237a[3]&gt;32.</p> <p>Wrapping the march function in a function that returns zero if the result is not a single number, we apply the function to the pixel coordinates and store the result.</p> <pre><code>       color \u2190 {i \u2190 march camera \u2375 0 \u22c4 1=\u2262i:i \u22c4 0}\n       color (0 1 0)\n0\n       color\u00a8(,\u22181\u00a8((\u23735 5)\u00f75)-\u22820.6 0.6)\n0 0            0            0           0\n0 0            0.7893982995 0           0\n0 0.8900597217 0.8571428571 0.145402276 0\n0 0            0.3004347993 0           0\n0 0            0            0           0\n       image \u2190 color\u00a8pxl_directions\n</code></pre> <p>This calculation might take a couple seconds.</p> <p>To actually see our rendered image, we need to export our array as an image file. We will be using the very simple PPM file format, in which images are plain text files. The header of a PPM file consists of a format indicator \"P3\", the size of the image (5 5), the maximum value for each color (255), and the colors in RGB format. Using the \u2395NPUT function with the append (2) argument, we write to a file called \"image.ppm\". We use the encode <code>\u2355</code> operator to convert between numerical arrays to character arrays.</p> <pre><code>       'P3'\u2395NPUT'image.ppm'2\n       (\u2355\u2374image)\u2395NPUT'image.ppm'2\n       '255'\u2395NPUT'image.ppm'2\n\n       test \u2190 color\u00a8(,\u22181\u00a8((\u23735 5)\u00f75)-\u22820.6 0.6)\n       test\n0 0            0            0           0\n0 0            0.7893982995 0           0\n0 0.8900597217 0.8571428571 0.145402276 0\n0 0            0.3004347993 0           0\n0 0            0            0           0\n\n       test \u2190 \u2308\u00a8255\u00d7(test)\n       test\n0   0   0  0 0\n0   0 202  0 0\n0 227 219 38 0\n0   0  77  0 0\n0   0   0  0 0\n\n       ,\u2218(0 0)\u00a8test\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020 0 0\u25020 0 0  \u25020 0 0  \u25020 0 0 \u25020 0 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 0 0\u25020 0 0  \u2502202 0 0\u25020 0 0 \u25020 0 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 0 0\u2502227 0 0\u2502219 0 0\u250238 0 0\u25020 0 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 0 0\u25020 0 0  \u250277 0 0 \u25020 0 0 \u25020 0 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 0 0\u25020 0 0  \u25020 0 0  \u25020 0 0 \u25020 0 0\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n       ,/test\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020 0 0 0 0\u25020 0 202 0 0\u25020 227 219 38 0\u25020 0 77 0 0\u25020 0 0 0 0\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n       image \u2190 ,\u2218(0 0)\u00a8(\u2308\u00a8255\u00d7image)\n       (('image.ppm' 2)\u2218(\u2395NPUT\u2368)\u2355)\u00a8,/image\n</code></pre> <p>Opening the file in a compatible program, such as the GIMP image editor, we see the beautifully shaded sphere.</p> <p></p> <p>By changing the distance function of the world, it is possible to render more complex objects. Take for example, the distance function for a torus.</p> <pre><code>       torus \u2190 {r \u2190 \u237a \u22c4 p \u2190 \u2375\n              \u22c4 q \u2190 (r[1]-\u2368length p[1],p[3]),p[2]\n              \u22c4 r[2]-\u2368length q               \n              }\n       env \u2190 {1 0.5 torus \u2375}\n</code></pre> <p></p> <p>There are also ways of combining distance functions to create more complex scenes, such as taking the minimum of two distance functions. However, we will leave the creation of more complex 3D scenes to the interested reader.</p>"},{"location":"course/ch5/part1/","title":"Elements of set theory","text":"<p>This part will cover</p> <ul> <li>Unique</li> <li>Union</li> <li>Set difference</li> <li>Intersection</li> </ul> <p>You are a system administrator aboard the corporate OC-3. You are currently deploying a database change affecting 413 customers at a speed of 155.52Mbit/s.</p> <p>In brief intervals of time spent waiting between helping your sales staff with Excel, you enjoy maintaining a forum dedicated to signal processing. Unfortunately for you, you had a lapse of judgement and your forum's been completely spammed. Unfortunately for management, you\u2019ve decided to use company time to fix this issue.</p> <pre><code>      POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?                             \u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250210:34\u2502DAC in QPSK modulation                                              \u2502radioComputer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:30\u2502We\u2019ve Received Your Payment                                         \u2502fccvrybkas      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:16\u2502Order number 1045534719 / Nice savings with this offer...           \u2502cherylebowmiq   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:03\u2502TREND ALERT: Discover one of a kind items                           \u2502k.a6            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250200:12\u2502WARNING! This is not a joke! Carry on reading or you will be cursed!\u2502mark0847        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250223:28\u2502I know your password T.J Eckleburg                                  \u2502johnsmith       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250223:17\u2502Whats with all the spam??                                           \u2502fluxLinker      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250222:36\u2502HACKED BY APT1 // FIX YOUR SITE                                     \u2502YouKnowWho      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250221:38\u2502Nordtel OC3 Express                                                 \u2502corporateRaider \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Not this again, you need to get rid of all the spam before the situation gets out of hand. You first remove all duplicate posts using the monadic unique \u222a function.</p> <pre><code>      \u222a POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?                             \u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250210:34\u2502DAC in QPSK modulation                                              \u2502radioComputer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:30\u2502We\u2019ve Received Your Payment                                         \u2502fccvrybkas      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:16\u2502Order number 1045534719 / Nice savings with this offer...           \u2502cherylebowmiq   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250202:03\u2502TREND ALERT: Discover one of a kind items                           \u2502k.a6            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250200:12\u2502WARNING! This is not a joke! Carry on reading or you will be cursed!\u2502mark0847        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250223:28\u2502I know your password T.J Eckleburg                                  \u2502johnsmith       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250223:17\u2502Whats with all the spam??                                           \u2502fluxLinker      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250222:36\u2502HACKED BY APT1 // FIX YOUR SITE                                     \u2502YouKnowWho      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250201-01-1970\u250200:00\u2502XXXXXXXXXX                                                          \u2502XXXXXXXXXX      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250221:38\u2502Nordtel OC3 Express                                                 \u2502corporateRaider \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The duplicate 'XXXXXXXXXX' spam posts have been removed. Next is removing specific posts using the set difference ~ function. First, listing all the indices of the post then removing the specific spam posts.</p> <pre><code>      \u2374 POSTS\n11 4\n      \u237311\n1 2 3 4 5 6 7 8 9 10 11\n      (\u237311) ~ 3 4 5 6 7 8 9 10\n1 2 11\n      POSTS \u2190 POSTS[(\u237313) ~ 3 4 5 6 7 8 9 10]\n      POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u250210:34\u2502DAC in QPSK modulation                 \u2502radioComputer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250221:38\u2502Nordtel OC3 Express                    \u2502corporateRaider \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>That's better! Let's take a closer look at some other set functions, too.</p> <p>Take the following vectors of emoticons</p> <pre><code>HAPPY_EMOTICONS \u2190 ':)' ':-)' ':D' ':]' ':o)' '8)' ':3' 'c:' ':x'\n\nSAD_EMOTICONS \u2190 '):' ':c' ']:' ')-:' 'D:' '&gt;:(' ':/' ':x' ':|'\n</code></pre> <p>The symbol \u222a acts dyadically as Set Union.</p> <pre><code>       HAPPY_EMOTICONS \u222a SAD_EMOTICONS\n:) :-) :D :] :o) 8) :3 c: :x ): :c ]: )-: D: &gt;:( :/ :|\n</code></pre> <p>Notice how the element \u2018:x\u2019 only appears once, where it would appear twice if we were to use the dyadic catenate , operator introduced in Chapter 2.</p> <pre><code>       HAPPY_EMOTICONS , SAD_EMOTICONS\n:) :-) :D :] :o) 8) :3 c: :x ): :c ]: )-: D: :x &gt;:( :/ :|\n</code></pre> <p>Similarly, the symbol \u2229 acts dyadically as the Set Intersection operation.</p> <pre><code>       HAPPY_EMOTICONS \u2229 SAD_EMOTICONS\n:x\n</code></pre> <p>The symbol ~, which monadically refers to boolean NOT, is dyadically the Set Difference operation.</p> <pre><code>       HAPPY_EMOTICONS ~ SAD_EMOTICONS\n:) :-) :D :] :o) 8) :3 c:\n       \u235d Notice the ':x' emoticon is gone\n</code></pre> <p>Monadically, the symbol \u222a acts as the Unique operator, removing duplicate entries in a vector.</p> <pre><code>       \u222a HAPPY_EMOTICONS , SAD_EMOTICONS\n:) :-) :D :] :o) 8) :3 c: :x ): :c ]: )-: D: &gt;:( :/ :|\n       \u235d Notice the ':x' emoticon only appears once\n</code></pre>"},{"location":"course/ch5/part2/","title":"Anything can be a scalar","text":"<p>This part will cover</p> <ul> <li>Nested arrays</li> <li>Enclose</li> <li>Disclose</li> <li>Nest</li> <li>Each</li> <li>Tally</li> </ul> <p></p> <p>It is now time to continue the discussion we had in chapter 2 about nested arrays. This topic tends to be the most difficult part of learning APL; hopefully the following exposition will make it seem like a natural development of what we\u2019ve already discussed.</p> <p>Data in APL are represented using arrays. The elements of an array are called scalars, which can contain any arbitrary types of data. They could contain arrays with rank zero (simple scalars) such as the array <code>(7)</code>, vectors <code>(7 14 21 28 35 42 49 56 63)</code>, matrices <code>3 3\u2374(7 14 21 28 35 42 49 56 63)</code>, or any higher rank array.</p> <p>Since scalars are elements of arrays, they themselves carry no rank or size. Consider the following example of a record of a forum post</p> <pre><code>      \u235d Boxing will be on throughout this whole section, to help see the nesting\n      ]Box On\nWas Off\n\n      post \u2190 '27-08-2024' '15:38' 'How good was broadcast NTSC/PAL in practice?' 'dataMoshpit'\n      post\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250227-08-2024\u250215:38\u2502How good was broadcast NTSC/PAL in practice?\u2502dataMoshpit\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The variable <code>post</code> is a vector of length 4; it contains four scalars, each of which contains a string.</p> <pre><code>      \u2374 post\n4\n      post[3]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502How good was broadcast NTSC/PAL in practice?\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d Empty shape!\n      \u2374 post[3]\n\n      \u235d Just like simple scalars\n      \u2374 5\n</code></pre> <p>It is a nested vector, since these scalars contain vector data, whose depth can be measured using the monadic depth \u2261 function.</p> <pre><code>      \u2261 post\n2\n</code></pre> <p>The data inside a nested array can be accessed using the dyadic pick \u2283 function.</p> <pre><code>      3\u2283post\nHow good was broadcast NTSC/PAL in practice?\n\n      \u2374 3\u2283post\n44\n</code></pre> <p>The left argument to the dyadic pick function is a special nested index vector that matches the right hand nested array. Each element of this index vector must be a valid index for each layer of nesting of the right hand array. Let's see what this means concretely for the following nested array of posts</p> <pre><code>      POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Why does DVB-C use QAM instead of OFDM?       \u2502frequencySniffer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DAC in QPSK modulation                        \u2502radioComputer      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                              \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                              |                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250229-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Nordtel OC3 Express                           \u2502corporateRaider    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Record for longest television broadcast       \u2502RedScanLine        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Book on Digital Signal Processing             \u2502vacuumTubed        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250228-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Early color TV in Finland                     \u2502televisioniini     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Soviet Tube Substitute for 6TGSN7             \u2502logorrheicLogarithm\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502OFDM, carriers and useful data symbol rate    \u2502selfConstructing   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Varicap-tuned filters                         \u2502thomasedison96     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250227-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502How good was broadcast NTSC/PAL in practice?  \u2502dataMoshpit        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Looking for flyback                           \u2502pacAttack          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CTCSS in NBFM                                 \u2502Radiovangelist     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502455 kHz and 10.7 MHz as intermediate freqs    |Decibels_per_Kg    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The depth of this array is the same as the depth of the above vector, since all values are boxed once.</p> <pre><code>      \u2261POSTS\n2\n</code></pre> <p>However this array is three dimensional</p> <pre><code>      \u2374POSTS\n4 5 2\n      \u2374\u2374POSTS\n3\n</code></pre> <p>To pick an element from this array, we must provide an index vector where each element is a valid index for each layer of the array. In this case, we can provide two elements, since the depth is 2. Let's get the first element of this array</p> <pre><code>      (1 2 1)\u2283POSTS\nRANK ERROR\n      (1 2 1)\u2283POSTS\n             \u2227\n</code></pre> <p>What happened here? The reason why this doesn't work is that (1 2 1) is not a single element, it is a vector of three elements. In order to turn data into a single element, a scalar, we can enclose \u2282 it in a box.</p> <pre><code>      \u22821 2 1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 1\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\n      (\u22821 2 1)\u2283POSTS\nWhy does DVB-C use QAM instead of OFDM?\n\n      (1 2 1)1\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2510\n\u25021 2 1\u25021\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2518\n      ((1 2 1)1)\u2283POSTS\nW\n</code></pre> <p>Let's create a more nested example, posts with replies</p> <pre><code>      reply1 \u2190 '30-08-2024' '19:22' 'OFDM is more reliable and easily equalized over difficult channels like a radio link.' 'RedScanLine'\n      post1 \u2190 '30-08-2024' '18:52' 'Why does DVB-C use QAM instead of OFDM?' 'frequencySniffer' reply1\n      post1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                       \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502\n\u2502          \u2502     \u2502                                       \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      reply2 \u2190 '29-08-2024' '15:38' 'You need a better tuner' 'dataMoshpit'\n      post2 \u2190 '29-08-2024' '11:28' 'Trying to obtain a clear QAM signal from cable' 'hadamardMardy' reply2\n      post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                              \u2502             \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502\u2502\n\u2502          \u2502     \u2502                                              \u2502             \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>There are several ways to combine these vectors into a matrix, the first is to use reshape</p> <pre><code>      post1 , post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                       \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502          \u2502     \u2502                                              \u2502             \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502\u2502\n\u2502          \u2502     \u2502                                       \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502          \u2502     \u2502                                              \u2502             \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2374 post1 , post2\n10\n      2 5 \u2374 post1 , post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?       \u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy   \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>This method requires us to know what the size is, and resize correctly. For more complex nested arrays, it might be too bothersome. Thankfully, there is a very useful function to mix \u2191 nested vectors together by reducing the level of nesting.</p> <pre><code>      post1 post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\n\u2502\u2502          \u2502     \u2502                                       \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502\u2502\u2502          \u2502     \u2502                                              \u2502             \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502\u2502\u2502\n\u2502\u2502          \u2502     \u2502                                       \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\u2502          \u2502     \u2502                                              \u2502             \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      \u2191 post1 post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?       \u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy   \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Another example of mix \u2191</p> <pre><code>      school \u2190 ('MATH' ('101' 30 ('COMPETED')) ('102' 37 ('CANCELLED')))  ('CS' ('101' 53 ('COMPETED')) ('102' 28 ('COMPLETED')) ('103' 20 ('IN PROGRESS')))\n      school\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\u2502\u250c\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\n\u2502\u2502\u2502MATH\u2502\u2502\u2502101\u250230\u2502COMPETED\u2502\u2502\u2502102\u250237\u2502CANCELLED\u2502\u2502\u2502\u2502\u2502CS\u2502\u2502\u2502101\u250253\u2502COMPETED\u2502\u2502\u2502102\u250228\u2502COMPLETED\u2502\u2502\u2502103\u250220\u2502IN PROGRESS\u2502\u2502\u2502\n\u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\u2502\u2514\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2191school\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2510              \u2502\n\u2502\u2502MATH\u2502\u2502\u2502101\u250230\u2502COMPETED\u2502\u2502\u2502102\u250237\u2502CANCELLED\u2502\u2502\u2502    \u2502              \u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2518              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502\u250c\u2500\u2500\u2510  \u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502CS\u2502  \u2502\u2502101\u250253\u2502COMPETED\u2502\u2502\u2502102\u250228\u2502COMPLETED\u2502\u2502\u2502103\u250220\u2502IN PROGRESS\u2502\u2502\n\u2502\u2514\u2500\u2500\u2518  \u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Notice that the Math row was given an extra element with an empty nested array by the Mix function in order to match with the shape of CS row</p> <pre><code>      \u2191\u2191school\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502MATH\u2502    \u2502           \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502101 \u250230  \u2502COMPETED   \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502102 \u250237  \u2502CANCELLED  \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    \u2502    \u2502           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502CS  \u2502    \u2502           \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502101 \u250253  \u2502COMPETED   \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502102 \u250228  \u2502COMPLETED  \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502103 \u250220  \u2502IN PROGRESS\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>To access elements in the POSTS array,</p> <pre><code>     POSTS \u2190 \u2191 post1 post2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250218:52\u2502Why does DVB-C use QAM instead of OFDM?       \u2502frequencySniffer\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u250211:28\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy   \u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u250229-08-2024\u250215:38\u2502You need a better tuner\u2502dataMoshpit\u2502                                                              \u2502\n\u2502          \u2502     \u2502                                              \u2502                \u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                                                              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2261POSTS\n\u00af3\n</code></pre> <p>We can specify three indices, note that negative depth means an array of mixed depth; the reply is nested one more than all the other data.</p> <pre><code>      (\u22821 5)\u2283POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u250219:22\u2502OFDM is more reliable and easily equalized over difficult channels like a radio link.\u2502RedScanLine\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      ((1 5)3)\u2283POSTS\nOFDM is more reliable and easily equalized over difficult channels like a radio link.\n      ((1 5)3 1)\u2283POSTS\nO\n</code></pre> <p>There is also a nested variant of the , ravel function called the \u220a enlist function.</p> <pre><code>      \u220aPOSTS\n30-08-202418:52Why does DVB-C use QAM instead of OFDM?frequencySniffer30-08-202419:22OFDM is more reliable and easily equalized over difficult channels like a radio link.RedSyncLine29-08-202411:28Trying to obtain a clear QAM signal from cablehadamardMardy29-08-202415:38You need a better tunerdataMoshpit\n</code></pre> <p>The power of nested arrays lies in the way in which they allow applying operations on many arrays at once. Recall how arithmetic operations act each element of an array</p> <pre><code>      5 5\u2374\u237325\n 1  2  3  4  5\n 6  7  8  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n      2*5 5\u2374\u237325\n      2       4       8       16       32\n     64     128     256      512     1024\n   2048    4096    8192    16384    32768\n  65536  131072  262144   524288  1048576\n2097152 4194304 8388608 16777216 33554432\n</code></pre> <p>For more complex functions, the each \u00a8 operator allows applying a function to each element of the right argument array, potentially returning a nested array. </p> <p><pre><code>      {2*\u2375}\u00a85 5\u2374\u237325\n      2       4       8       16       32\n     64     128     256      512     1024\n   2048    4096    8192    16384    32768\n  65536  131072  262144   524288  1048576\n2097152 4194304 8388608 16777216 33554432\n\n      {\u2375,2*\u2375}\u00a85 5\u2374\u237325\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2       \u25022 4       \u25023 8       \u25024 16       \u25025 32       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25026 64      \u25027 128     \u25028 256     \u25029 512      \u250210 1024    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211 2048   \u250212 4096   \u250213 8192   \u250214 16384   \u250215 32768   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250216 65536  \u250217 131072 \u250218 262144 \u250219 524288  \u250220 1048576 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250221 2097152\u250222 4194304\u250223 8388608\u250224 16777216\u250225 33554432\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> It matches the left argument array scalars with the right argument array scalars and applies the function with the scalars as left or right arguments respectively</p> <pre><code>      2|5 5\u2374\u237325\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n\n      (2|5 5\u2374\u237325) {\u237a,\u2375} (5 5\u2374\u237325)\n1 0 1 0 1  1  2  3  4  5\n0 1 0 1 0  6  7  8  9 10\n1 0 1 0 1 11 12 13 14 15\n0 1 0 1 0 16 17 18 19 20\n1 0 1 0 1 21 22 23 24 25\n\n      (2|5 5\u2374\u237325) {\u237a,\u2375}\u00a8 (5 5\u2374\u237325)\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510\n\u25021 1 \u25020 2 \u25021 3 \u25020 4 \u25021 5 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25020 6 \u25021 7 \u25020 8 \u25021 9 \u25020 10\u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25021 11\u25020 12\u25021 13\u25020 14\u25021 15\u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25020 16\u25021 17\u25020 18\u25021 19\u25020 20\u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25021 21\u25020 22\u25021 23\u25020 24\u25021 25\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Since scalars can contain array data, array operations can be applied on many arrays at once. Suppose we wanted to add an 'X' at the start of each deleted post, and replace the username with [deleted]</p> <pre><code>      POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250230-08-2024\u2502DAC in QPSK modulation                 \u2502radioComputer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250229-08-2024\u2502Nordtel OC3 Express                    \u2502corporateRaider \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n     DELETED\n0 1 0\n</code></pre> <p>The first thing to do is enclose the three rows separately, which can be done using the inverse to mix, the split \u2193 function</p> <pre><code>      \u2193POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u250230-08-2024\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\u2502\u250230-08-2024\u2502DAC in QPSK modulation\u2502radioComputer\u2502\u2502\u250229-08-2024\u2502Nordtel OC3 Express\u2502corporateRaider\u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Then, using each</p> <pre><code>      DELETED{\u237a: 'X',\u2375[1 2],\u2282'[deleted]' \u22c4 ' ',\u2375}\u00a8\u2193POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502 \u250230-08-2024\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\u2502\u2502X\u250230-08-2024\u2502DAC in QPSK modulation\u2502[deleted]\u2502\u2502\u2502 \u250229-08-2024\u2502Nordtel OC3 Express\u2502corporateRaider\u2502\u2502\n\u2502\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u2191DELETED{\u237a: 'X',\u2375[1 2],\u2282'[deleted]' \u22c4 ' ',\u2375}\u00a8\u2193POSTS\n\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u250230-08-2024\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502X\u250230-08-2024\u2502DAC in QPSK modulation                 \u2502[deleted]       \u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u250229-08-2024\u2502Nordtel OC3 Express                    \u2502corporateRaider \u2502\n\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"course/ch5/part3/","title":"Choose your axis!","text":"<p>This part will cover</p> <ul> <li>Bracket-axis notation</li> <li>The axis operator</li> <li>Squad indexing</li> </ul> <p>So far, we\u2019ve only covered reducing along a vector. Vectors, being one-dimensional arrays, have a clear unambiguous axis along which reduction can be done. Higher dimensional arrays do not have this same privilege, the axis along which to reduce must be specified.</p> <p>Take the following example matrix</p> <pre><code>      \u234910 10\u2374\u237310\n 1  1  1  1  1  1  1  1  1  1\n 2  2  2  2  2  2  2  2  2  2\n 3  3  3  3  3  3  3  3  3  3\n 4  4  4  4  4  4  4  4  4  4\n 5  5  5  5  5  5  5  5  5  5\n 6  6  6  6  6  6  6  6  6  6\n 7  7  7  7  7  7  7  7  7  7\n 8  8  8  8  8  8  8  8  8  8\n 9  9  9  9  9  9  9  9  9  9\n10 10 10 10 10 10 10 10 10 10\n</code></pre> <p>The leading axis of the matrix is the first axis along which indexing is done. In this case, </p> <pre><code>       M[1;]\n 1  1  1  1  1  1  1  1  1  1\n       M[1 2 3;]\n 1  1  1  1  1  1  1  1  1  1\n 2  2  2  2  2  2  2  2  2  2\n 3  3  3  3  3  3  3  3  3  3\n</code></pre> <p>the leading axis is the vertical axis of this matrix. The last axis then is the horizontal axis of this matrix. </p> <p>Notice that elements fill an array from the last axis first</p> <pre><code>      3 3 3\u2374\u237327\n 1  2  3\n 4  5  6\n 7  8  9\n\n10 11 12\n13 14 15\n16 17 18\n\n19 20 21\n22 23 24\n25 26 27\n\n      \u235d The last axis is filled first\n      (3 3 3\u2374\u237327)[1;1;]\n1 2 3\n      \u235d Then we move one step along the middle axis\n      (3 3 3\u2374\u237327)[1;2;]\n4 5 6\n      \u235d Repeating until we move on one step in the first axis\n      (3 3 3\u2374\u237327)[1;3;]\n7 8 9\n      (3 3 3\u2374\u237327)[2;1;]\n10 11 12\n</code></pre> <p>To specify the axis along which to reduce, we can use one of the two reduce operators \u233f and /, corresponding to reducing along the leading axis and last axis respectively.</p> <pre><code>       +\u233fM\n55 55 55 55 55 55 55 55 55 55\n       +/M\n10 20 30 40 50 60 70 80 90 100\n</code></pre> <p>Since the leading axis is the vertical axis, the plus reduce first +\u233f function returned the sums of the vertical columns of the matrix; similarly, the plus reduce last +/ function returned the sums of the horizontal rows of the matrix. For higher dimensional arrays, only reducing along either the leading axis or the last axis is not sufficient, as there are intermediate axes that need to be considered.</p> <p>There is special syntax that allows for such general axis specification for certain built-in functions. It consists of adding a set of square brackets [ ] after the function containing an increasing integer axis number starting from 1, corresponding to the leading axis.</p> <p>Consider the following random 3-dimensional array</p> <pre><code>      ?3 3 3\u237410\n5 2 4\n9 1 4\n5 8 4\n\n9 5 8\n5 2 2\n3 2 5\n\n2 9 4\n7 2 10\n7 10 6\n</code></pre> <p>It is visualized in 3-dimensional space as follows. Click and drag on the 3D view to orbit the array, use the scroll wheel to zoom in and out. Move your mouse over a ball to see it highlighted.</p> <p>The three axes of the array can be seen, with the red axis representing the leading axis, the green axis representing the intermediate axis, and the blue axis representing the last axis.</p> <pre><code>      M[1;;]\n5 2 4\n9 1 4\n5 8 4\n      M[;1;]\n5 2 4\n9 5 8\n2 9 4\n      M[;;1]\n5 9 5\n9 5 3\n2 7 7\n</code></pre> <p>Move your mouse over a ball to see the three axis slices.</p> <p>Then, using the bracket-axis notation, is it possible to obtain all 3 possible reductions. <pre><code>      (+/[1])M\n16 16 16\n21  5 16\n15 20 15\n      (+/[2])M\n19 11 12\n17  9 15\n16 21 20\n      (+/[3])M\n11 14 17\n22  9 10\n15 19 23\n</code></pre></p> <p>Note that there is also a different method of specifying axes for functions which is more general than bracket-axis notation, since it behaves consistently and can be applied to any arbitrary function. The rank \u2364 operator allows for such general axis specification of a function left argument, via an integer right argument which specifies what rank cells to act on. </p> <p>An n-cell of a rank r array is a rank n array formed from picking (r-n) indices from that array. Some n-cells of the above array are</p> <pre><code>      \u235d 2-cell of M\n      M[1;;]\n5 2 4\n9 1 4\n5 8 4\n      \u235d 1-cell of M\n      M[1;1;]\n5 2 4\n      \u235d 0-cell of M\n      M[1;1;1]\n5\n</code></pre> <p>As an example, we study the action of the rank operator \u2364 on the plus reduce +\u233f function, +\u233f\u2364n. For n=3, the modified plus reduce function +\u233f\u23643 acts on the 3-cells of the array. Since the whole array is of rank 3, there is only one 3-cell which is the array itself. Then, +\u233f\u23643 is equivalent to the action of the plus reduce +\u233f function on the whole array, adding up terms along its leading axis.</p> <pre><code>      (+\u233f\u23643)M\n16 16 16\n21  5 16\n15 20 15\n      +\u233fM\n16 16 16\n21  5 16\n15 20 15\n</code></pre> <p>For n=2, +\u233f\u23642 acts on the 2-cells of the array. The 2-cells of the array are the cells M[1;;], M[2;;], and M[3;;].</p> <pre><code>     M[1;;]\n5 2 4\n9 1 4\n5 8 4\n      M[2;;]\n9 5 8\n5 2 2\n3 2 5\n      M[3;;]\n2  9  4\n7  2 10\n7 10  6\n</code></pre> <p>The leading axis of these 2-cells is vertical, hence the plus reduce first +\u233f function will return the sum of the columns of these arrays.</p> <pre><code>      +\u233fM[1;;]\n19 11 12\n      +\u233fM[2;;]\n17 9 15\n      +\u233fM[3;;]\n16 21 20\n</code></pre> <p>Then, the action of +\u233f\u23642 on the original array is equivalent to adding up along its second axis.</p> <pre><code>      (+\u233f\u23642)M\n19 11 12\n17  9 15\n16 21 20\n      +\u233f[2]M\n19 11 12\n17  9 15\n16 21 20\n</code></pre> <p>Similarly, for n=1, the action of (+\u233f\u23641) on the array is adding up its 1-cells, which is equivalent to adding along its last axis.</p> <pre><code>      M[1;1;]\n5 2 4\n      M[1;2;]\n9 1 4\n      M[1;3;]\n5 8 4\n      +\u233fM[1;1;]\n11\n      +\u233fM[1;2;]\n14\n      +\u233fM[1;3;]\n17\n      (+\u233f\u23641)M\n11 14 17\n22  9 10\n15 19 23\n      +\u233f[3]M\n11 14 17\n22  9 10\n15 19 23\n</code></pre> <p>An operator form of (partially) indexing a matrix, such as M[1;3;], is given by the squad (\u201dsquish quad\u201d) indexing \u2337 operator.  <pre><code>      M[1;3;]\n5 8 4\n      1 3\u2337M\n5 8 4\n</code></pre></p> <p>It is equivalent to bracket indexing, but can be used like any other operator.</p> <pre><code>      N \u2190 3 3 3 \u2374 \u237327\n      N\n 1  2  3\n 4  5  6\n 7  8  9\n\n10 11 12\n13 14 15\n16 17 18\n\n19 20 21\n22 23 24\n25 26 27\n\n      (\u2282\u23642)N\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 3\u250210 11 12\u250219 20 21\u2502\n\u25024 5 6\u250213 14 15\u250222 23 24\u2502\n\u25027 8 9\u250216 17 18\u250225 26 27\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      1(\u2337\u23642)N\n 1  2  3\n10 11 12\n19 20 21\n\n      (\u2282\u23641)N\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25021 2 3   \u25024 5 6   \u25027 8 9   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210 11 12\u250213 14 15\u250216 17 18\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250219 20 21\u250222 23 24\u250225 26 27\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      1(\u2337\u23641)N\n 1  4  7\n10 13 16\n19 22 25\n</code></pre> <p>//Add ,\u23640\u23641</p>"},{"location":"course/ch5/part4/","title":"I knew he swapped those numbers!","text":"<p>This part will cover</p> <ul> <li>Transpose</li> <li>Reverse</li> <li>Rotate</li> </ul> <p></p> <p>With data stored in higher dimensional arrays, it is often necessary to rotate, flip, and transpose the axes of these arrays in order to make sense of them. This is especially true in the case of highly structured data.</p> <p>Let's look at an array tracking the number of replies a user has posted per day, for two weeks</p> <pre><code>      w1 \u2190 (\u2282'Week 1') ('RedScanLine' 'frequencySniffer' 'dataMoshpit' 'Radiovangelist') (12    8   15  6) (10  7   12  9) (14  9   11  8) (11  6   14  7) (9   10  13  5) (13  8   16  10) (10 12  15  6)\n      \u2191w1\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 1     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25028               \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25029               \u250211         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u25026               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029          \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u25028               \u250216         \u250210            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u250212              \u250215         \u25026             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      w2 \u2190 (\u2282'Week 2') ('RedScanLine' 'frequencySniffer' 'dataMoshpit' 'Radiovangelist') (15    11  17  8) (12  9   14  7) (11  10  13  5) (14  8   12  9) (10  7   16  11) (13 12  15  6) (12  11  14  8)\n      \u2191w2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 2     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250215         \u250211              \u250217         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25029               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25028               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250216         \u250211            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u250212              \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u250211              \u250214         \u25028             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n      activity \u2190 \u2191\u2191w1 w2\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 1     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25028               \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25029               \u250211         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u25026               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029          \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u25028               \u250216         \u250210            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u250212              \u250215         \u25026             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 2     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250215         \u250211              \u250217         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25029               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25028               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250216         \u250211            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u250212              \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u250211              \u250214         \u25028             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>The array above is structures along three axes, the first being the week, the second being the day of the week, and the third is the user. Note that there are also several non-data entries that are used to make the tables easier to read.</p> <pre><code>      \u235d Two weeks, 7 days, 4 users (Note that there are two rows which are used for labels)\n      \u2374activity\n2 9 4\n      activity[1;;]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 1     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25028               \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25029               \u250211         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u25026               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029          \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u25028               \u250216         \u250210            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u250212              \u250215         \u25026             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d Data from first day of both weeks\n      activity[;3;]\n12  8 15 6\n15 11 17 8\n      activity[;;1]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502Week 1\u2502RedScanLine\u250212\u250210\u250214\u250211\u25029 \u250213\u250210\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524\n\u2502Week 2\u2502RedScanLine\u250215\u250212\u250211\u250214\u250210\u250213\u250212\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2518\n</code></pre> <p>To get the total list of replies for each user, we need to enlist along the day and week axis to be left with a matrix of replies per user per day. Unfortunately, the 2-cells of this array are not the matrix of all replies for a single user, but the matrix of all replies for a single week, as can be seen above, or by looking at how the axes are arranged as Week \u00d7 (Days \u00d7 User). If we used the rank \u2364 operator, instead of getting a 7 row matrix of daily replies for each user, we'd obtain a 2 row matrix of replies per week.</p> <pre><code>      (,\u23642)activity\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2510\n\u2502Week 1\u2502      \u2502      \u2502      \u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u250212\u25028 \u250215\u25026\u250210\u25027\u250212\u25029\u250214\u25029 \u250211\u25028\u250211\u25026\u250214\u25027\u25029 \u250210\u250213\u25025 \u250213\u25028 \u250216\u250210\u250210\u250212\u250215\u25026\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2524\n\u2502Week 2\u2502      \u2502      \u2502      \u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u250215\u250211\u250217\u25028\u250212\u25029\u250214\u25027\u250211\u250210\u250213\u25025\u250214\u25028\u250212\u25029\u250210\u25027 \u250216\u250211\u250213\u250212\u250215\u25026 \u250212\u250211\u250214\u25028\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2518\n</code></pre> <p>The way to solve this is to swap the Week and User axes to get an array of the form User x (Week x Days), this problem is easily solved by the \u2349 transpose function. The left argument to the transpose function is a list of integers starting from 1, which represents where each axes is in the resulting array. For example, <code>1 2 3 \u2349 activity</code> is the same as <code>activity</code>, but <code>3 2 1\u2349activity</code> swaps the first and third axis.</p> <pre><code>      \u235d Week \u00d7 Day \u00d7 User\n      1 2 3 \u2349 activity\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 1     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25028               \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25029               \u250211         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u25026               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029          \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u25028               \u250216         \u250210            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u250212              \u250215         \u25026             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 2     \u2502                \u2502           \u2502              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine\u2502frequencySniffer\u2502dataMoshpit\u2502Radiovangelist\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250215         \u250211              \u250217         \u25028             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u25029               \u250214         \u25027             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211         \u250210              \u250213         \u25025             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214         \u25028               \u250212         \u25029             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210         \u25027               \u250216         \u250211            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213         \u250212              \u250215         \u25026             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212         \u250211              \u250214         \u25028             \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d User \u00d7 Week \u00d7 Day\n      3 2 1 \u2349 activity\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Week 1          \u2502Week 2          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502RedScanLine     \u2502RedScanLine     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212              \u250215              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210              \u250212              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214              \u250211              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211              \u250214              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029               \u250210              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213              \u250213              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210              \u250212              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                \u2502                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502frequencySniffer\u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25028               \u250211              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25027               \u25029               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029               \u250210              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25026               \u25028               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210              \u25027               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25028               \u250212              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212              \u250211              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                \u2502                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502dataMoshpit     \u2502dataMoshpit     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250215              \u250217              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250212              \u250214              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250211              \u250213              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250214              \u250212              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250213              \u250216              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250216              \u250215              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250215              \u250214              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                \u2502                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Radiovangelist  \u2502Radiovangelist  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25026               \u25028               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25029               \u25027               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25028               \u25025               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25027               \u25029               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25025               \u250211              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u250210              \u25026               \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u25026               \u25028               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Removing the labels</p> <pre><code>      \u235d Check how \u23642 acts on the above matrix\n      (\u2282\u23642)3 2 1 \u2349 activity\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502Week 1     \u2502Week 2     \u2502\u2502\u2502                \u2502                \u2502\u2502\u2502           \u2502           \u2502\u2502\u2502              \u2502              \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u2502RedScanLine\u2502RedScanLine\u2502\u2502\u2502frequencySniffer\u2502frequencySniffer\u2502\u2502\u2502dataMoshpit\u2502dataMoshpit\u2502\u2502\u2502Radiovangelist\u2502Radiovangelist\u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250212         \u250215         \u2502\u2502\u25028               \u250211              \u2502\u2502\u250215         \u250217         \u2502\u2502\u25026             \u25028             \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250210         \u250212         \u2502\u2502\u25027               \u25029               \u2502\u2502\u250212         \u250214         \u2502\u2502\u25029             \u25027             \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250214         \u250211         \u2502\u2502\u25029               \u250210              \u2502\u2502\u250211         \u250213         \u2502\u2502\u25028             \u25025             \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250211         \u250214         \u2502\u2502\u25026               \u25028               \u2502\u2502\u250214         \u250212         \u2502\u2502\u25027             \u25029             \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u25029          \u250210         \u2502\u2502\u250210              \u25027               \u2502\u2502\u250213         \u250216         \u2502\u2502\u25025             \u250211            \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250213         \u250213         \u2502\u2502\u25028               \u250212              \u2502\u2502\u250216         \u250215         \u2502\u2502\u250210            \u25026             \u2502\u2502\n\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\u2502\n\u2502\u250210         \u250212         \u2502\u2502\u250212              \u250211              \u2502\u2502\u250215         \u250214         \u2502\u2502\u25026             \u25028             \u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d Use drop \u2193 to remove the first two rows of every enclosed array\n      2(\u2193\u23642)3 2 1 \u2349 activity\n12 15\n10 12\n14 11\n11 14\n 9 10\n13 13\n10 12\n\n 8 11\n 7  9\n 9 10\n 6  8\n10  7\n 8 12\n12 11\n\n15 17\n12 14\n11 13\n14 12\n13 16\n16 15\n15 14\n\n 6  8\n 9  7\n 8  5\n 7  9\n 5 11\n10  6\n 6  8\n ```\n\n Finally obtaining the replies per user per day\n\n```apl\n      \u235d Ravel the above 2-cells to get the replies per day for every user\n      (,\u23642)(2(\u2193\u23642)(3 2 1 \u2349 activity))\n12 15 10 12 14 11 11 14  9 10 13 13 10 12\n 8 11  7  9  9 10  6  8 10  7  8 12 12 11\n15 17 12 14 11 13 14 12 13 16 16 15 15 14\n 6  8  9  7  8  5  7  9  5 11 10  6  6  8\n\n      \u235d Without the unnecessary parentheses\n\n      (,\u23642) 2 (\u2193\u23642) 3 2 1 \u2349 activity\n12 15 10 12 14 11 11 14  9 10 13 13 10 12\n 8 11  7  9  9 10  6  8 10  7  8 12 12 11\n15 17 12 14 11 13 14 12 13 16 16 15 15 14\n 6  8  9  7  8  5  7  9  5 11 10  6  6  8\n ```\n\n\nMore examples of transpose\n\n```apl\n      PEOPLE \u2190 2 3 2 \u2374 '\u2363\u2364\u2262\u236c^\u2227\u2368\u2365\u233f\u2340^\u2227'\n      \u235d The first axis is from first couple to second couple, the second axis is from head to toe, the third axis is from first partner to second partner\n      PEOPLE\n\u2363\u2364\n\u2262\u236c\n^\u2227\n\n\u2368\u2365\n\u233f\u2340\n^\u2227\n      \u235d Convince yourself of what was said above, remember that the last axis is the one that is filled first\n      (\u237312){\u237a \u2375}\u00a8PEOPLE\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510\n\u25021 \u2363 \u25022 \u2364 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25023 \u2262 \u25024 \u236c \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25025 ^ \u25026 \u2227 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2510\n\u25027 \u2368 \u25028 \u2365 \u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u25029 \u233f \u250210 \u2340\u2502\n\u251c\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\n\u250211 ^\u250212 \u2227\u2502\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\n\n      \u235d Transposing the array, the axes are now\n\n      \u235d first couple to second couple, first partner to second partner, head to toe\n      \u235d The last axis is filled by people from head to toe, then the middle axis switches partner, and the first axis switches couple\n      1 3 2\u2349PEOPLE\n\u2363\u2262^\n\u2364\u236c\u2227\n\n\u2368\u233f^\n\u2365\u2340\u2227\n\n      \u235d head to toe, first couple to second couple, first partner to second partner\n      2 1 3\u2349PEOPLE\n\u2363\u2364\n\u2368\u2365\n\n\u2262\u236c\n\u233f\u2340\n\n^\u2227\n^\u2227\n\n      \u235d first partner to second partner, head to toe, first couple to second couple\n      3 2 1\u2349PEOPLE\n\u2363\u2368\n\u2262\u233f\n^^\n\n\u2364\u2365\n\u236c\u2340\n\u2227\u2227\n      \u235d They swapped partners!\n</code></pre> <p>The dyadic <code>\u233d</code> <code>\u2296</code> rotate functions rotate an array by an amount specific by the left argument, around a specific axis.</p> <pre><code>       3\u233d\u00a8'hotbloods' 'mentally' 'outbreak' 'clean' 'kyoto'\nbloodshot  tallymen  breakout  ancle  tokyo\n</code></pre> <p>Another example:</p> <pre><code>SAD_EMOTICONS \u2190 '):' ':c' ']:' ')-:' 'D:' '&gt;:(' ':/' ':x' ':|'\n</code></pre> <p>Notice that some of the sad emoticons can be turned into happy emoticons by reflecting the emoticon vertically, turning the frown upside down! The monadic \u233d \u2296 reverse functions reflect an array along the horizontal (last) or vertical (first) axis.</p> <pre><code>       \u233d '):'\n:)\n       \u233d SAD_EMOTICONS\n:|  :x  :/  &gt;:(  D:  )-:  ]:  :c  ):\n\n       \u233d\u00a8SAD_EMOTICONS\n :)  c:  :]  :-)  :D  (:&gt;  /:  x:  |:\n</code></pre>"},{"location":"course/ch5/part5/","title":"5.5 - More searching and selecting","text":"<p>searching and selecting in higher dimensional arrays, also partition enclose</p> <p>You notice that the user 'YouKnowWho' had taken over several posts and replaced the author with themselves. You've exported an array of posts to look for any suspicious activity that might hint at how the forum was compromised.</p> <pre><code>      POSTS\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Why does DVB-C use QAM instead of OFDM?       \u2502frequencySniffer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DAC in QPSK modulation                        \u2502radioComputer      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                              \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                              |                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250229-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Nordtel OC3 Express                           \u2502corporateRaider    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Record for longest television broadcast       \u2502YouKnowWho         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Book on Digital Signal Processing             \u2502vacuumTubed        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Trying to obtain a clear QAM signal from cable\u2502hadamardMardy      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250228-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Early color TV in Finland                     \u2502YouKnowWho         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Soviet Tube Substitute for 6TGSN7             \u2502YouKnowWho         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502OFDM, carriers and useful data symbol rate    \u2502YouKnowWho         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Varicap-tuned filters                         \u2502thomasedison96     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250227-08-2024                                    \u2502                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502How good was broadcast NTSC/PAL in practice?  \u2502dataMoshpit        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Looking for flyback                           \u2502YouKnowWho         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502CTCSS in NBFM                                 \u2502Radiovangelist     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502455 kHz and 10.7 MHz as intermediate freqs    |Decibels_per_Kg    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>This array is three dimensional, where each axis represents, respectively, Date, Post number, Post information.</p> <pre><code>      \u235d First day of posts\n      POSTS[1;;]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u250230-08-2024                             \u2502                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Why does DVB-C use QAM instead of OFDM?\u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502DAC in QPSK modulation                 \u2502radioComputer   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                       \u2502                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                       \u2502                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d Second post from every day\n      POSTS[;2;]\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502Why does DVB-C use QAM instead of OFDM?     \u2502frequencySniffer\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Nordtel OC3 Express                         \u2502corporateRaider \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502Early color TV in Finland                   \u2502YouKnowWho      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502How good was broadcast NTSC/PAL in practice?\u2502dataMoshpit     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      \u235d Username of every post\n      POSTS[;;2]\n\u250c\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2502frequencySniffer\u2502radioComputer\u2502              \u2502               \u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u2502corporateRaider \u2502YouKnowWho   \u2502vacuumTubed   \u2502hadamardMardy  \u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u2502YouKnowWho      \u2502YouKnowWho   \u2502YouKnowWho    \u2502thomasedison96 \u2502\n\u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \u2502dataMoshpit     \u2502YouKnowWho   \u2502Radiovangelist\u2502Decibels_per_Kg\u2502\n\u2514\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"course/ch5/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p>"},{"location":"course/ch5/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch5/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination"},{"location":"course/ch5/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination <code>+</code> Plus Addition + <code>-</code> Minus Subtraction - <code>\u00d7</code> Times Multiplication PREFIX - <code>\u00f7</code> Divide Division PREFIX = <code>*</code> Power Exponentiation * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 <code>\u235d</code> Lamp Comment PREFIX , <code>\u2190</code> Assignment operator Assigning variables &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L"},{"location":"course/ch5/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p>"},{"location":"course/ch6/bonus/","title":"Bonus content: Minesweeper in APL and Python","text":"<p>This part is optional</p> <p>This part is considered to be bonus content. It contains some more advanced topics that are not covered in the main course. It can also give some examples of functions and topics that are introuced later in the course. There are no exercises related to this content.</p> <p>Feel free to skim or skip this section for now, and return to it later!</p> <p>One of the central advantages of APL over other programming languages is that it provides a powerful notation for reasoning about higher dimensional data. When writing code in other languages, there are times where using this notation would simplify code significantly, and luckily, APL code can be used in Python programs, and vice versa, using the Py'n'APL interface. </p> <p>In this section, we will write a simple minesweeper game in APL, using Py'n'APL to connect to a user interface written in Python.</p> <p>The Py'n'APL interface can be downloaded from the Dyalog repository. To start, create a python file inside the same directory as <code>pynapl</code>, and paste the following example code.</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\nprint(apl.eval(\"3 3\u2374\u2206\", 1, 2, 3, 4, 5, 6, 7, 8, 9))\n\napl.eval(\"a \u2190 \u2206\", 57)\nprint(apl.eval(\"a\u00f73\"))\n</code></pre> <p>The output should be <code>[[1, 2, 3], [4, 5, 6], [7, 8, 9]]</code> and <code>[19]</code>.</p> <p>The above code starts and connects to a Dyalog session. The session can then be sent commands using the <code>eval</code> function. Extra arguments to the eval function are substituted for <code>\u2206</code> in the eval expression; above, the arguments <code>1, 2, 3, 4, 5, 6, 7, 8, 9</code> are passed as an array replacing <code>\u2206</code> in <code>3 3\u2374\u2206</code>.</p> <p>The Dyalog session should be thought of like any other session, with its own variables.</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\napl.eval(\"a \u2190 \u23733 3\")\nprint(apl.eval(\"a\"))\n</code></pre> <p>The result should be <code>[[[1, 1], [1, 2], [1, 3]], [[2, 1], [2, 2], [2, 3]], [[3, 1], [3, 2], [3, 3]]]</code>.</p> <p>APL functions can be defined using the <code>apl.fn</code> function which, if assigned in Python, can be used like any other Python function.</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\naverage = apl.fn(\"+/\u00f7\u2262\")\nprint(average([1,2,3,4,5]))\n</code></pre> <p>The result is 3.</p> <p>To define functions in APL, <code>fix</code> is used rather than than the <code>eval</code>.</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\napl.fix(\"average \u2190 +/\u00f7\u2262\")\n\nprint(apl.eval(\"average 1 2 3 4 5\"))\n</code></pre> <p>The result is 3.</p> <p>Minesweeper is a logic game, where the goal is to find out the location of all hidden 'mines' on a board. The size of the board and number of mines vary depending on difficulty; here we will implement a rectangular board of width 30 and height 16, with 99 mines. </p> <p>When the user left-clicks on a tile that does not contain a mine on the board, that tile is uncovered. Uncovered tiles display the total number of mines that are in adjacent tiles (including diagonals!). If the tile has no adjacent mines, then it reveals the adjacent tiles automatically. If the user left-clicks on a tile containing a mine, the game is lost and the mines are detonated. If the user right-clicks on a tile, that tile is flagged, representing where the user believes a mine is. </p> <p>The game is won when all hidden mine tiles are flagged, and all other tiles are uncovered.</p> <p>We recommend the reader to play at-least one game of minesweeper, in order to get familiar with the rules we will implement.</p> <p>We first need to create the board, which will be represented with a 2D matrix of values, 1 being mine and 0 a blank tile. </p> <pre><code>       board \u2190 16 30 \u2374 0\n</code></pre> <p>Random unique positions for the mines can be obtained using deal ? dyadic function.</p> <pre><code>       99 ? 16\u00d730\n215 385 164 68 310 453 255 115 28 234 239 456 243 39 302 447 263 383 94 236 10 337 35 98 432 127 403 431 408 237 356 330 2\n      30 201 351 438 130 377 434 71 258 34 13 312 55 62 95 137 382 387 154 3 66 427 12 257 30 70 113 304 283 50 180 207 22\n      7 77 333 409 53 369 473 428 266 100 24 297 323 424 309 276 160 170 110 460 459 184 376 364 268 256 328 305 174 196 6\n      0 359 350 396 6\n</code></pre> <p>it is possible to see which 2D positions these numbers encode using the encode <code>\u22a4</code> function</p> <pre><code>       (16 30 \u22a4 (99 ? 16\u00d730))\n 8 10  8 13 8  4 11 14 0 10  4  1 11  9  5  6 9 12 10  6 11 3 14 14 2 12  5 1 10  5 15 14 5 11  5 2  0 14  0  2  9 12 11 1\n17 20 12 15 7 27  6  0 8 24 19 22 27 12 29 23 7 18 11 11 12 2 29 18 3  3 12 9  5 20 17  8 1 16 27 0 15  3 24 19 19 26  0  \n       4 13  7  7  4  1 6 10 5  3 10 12  9 14 14  3 15  7 2 13 0  3 3 6 10 8  4 15  2 10 5 5 4 13 11  8 15 15 13 6 11 1  4 \n       2 13 10 20 15 14 7 13 3 23 29  4 25  7 24 28 22 17 8  4 7 20 1 6 17 3 20  1 12  7 9 7 1 21  8 13 11 12 27 1  1 5 14 \n       2  7 4  0  9 7  6  6 9  3  9 15 11\n       9 27 6 23 20 6 21 12 1 10 10  8 28\n       (16 30 \u22a4 (99 ? 16\u00d730))[;1]\n7 27\n</code></pre> <p>Assigning these positions to 1 on the board by (un)raveling the board into a vector, then using the <code>@</code> at operator</p> <pre><code>      positions \u2190 99 ? 16\u00d730\n      board \u2190 ,board\n      board\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 0 0 0 0 0 0 0 0 0\n      (1 @ positions) board\n0 0 0 0 0 1 0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 \n      0 0 0 1 0 0 0 0 0 1 1 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      1 0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 1 1 0 1 0 0 0 1 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 \n      0 0 0 1 0 0 0 0 1 1 1 1 0 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 0 1 0 0 \n      0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 1 0 1 1 0 0 0 0 0 1 0 0 1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 \n      0 1 0 1 1 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 0 0 0 0 1 0 1 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 1 1 0 1 0 0 0 1 0 0 \n      0 0 0 0 0 0 0 0 1 0 1 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 1 1 0 0 0 1 \n      1 0 1 0 0 0 1 0 1 1 0 0 1\n      board \u2190 16 30 \u2374 board\n</code></pre> <p>Putting this operation in a single Python function</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\ndef new_board():\n    apl.eval(\"board \u2190  (16\u00d730) \u2374 0\")\n    apl.eval(\"board \u2190 (1 @ (99 ? 16\u00d730)) board\")\n    apl.eval(\"board \u2190 16 30 \u2374 board\")\n\nnew_board();\nprint(apl.eval(\"board\"));\n# The output is \n#[[0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], \n#[1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1], \n#[0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n#[0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0], \n#[0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \n#[0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], \n#[0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1], \n#[0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0], \n#[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1], \n#[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0], \n#[1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0], \n#[0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0], \n#[0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0], \n#[0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0], \n#[0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0], \n#[0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0]]\n</code></pre> <p>Next, we need to obtain the number of adjacent mines for every tile on the board. Consider a 1-dimensional board first, for simplicity.</p> <pre><code>       board \u2190 1 -\u2368 ? 7 \u2374 2\n0 1 1 1 0 1 1\n</code></pre> <p>What is needed is a function that takes length 3 sections of the above board, and sums them up to give a new board of values.</p> <pre><code>       adjacency \u2190 (0+1) (0+1+1) (1+1+1) (1+1+0) (1+0+1) (0+1+1) (1+1)\n</code></pre> <p>This can be partly obtained using the / windowed reduction operator applied to + plus and a left argument of 3.</p> <pre><code>       3,/board\n 0 1 1  1 1 1  1 1 0  1 0 1  0 1 1\n       3+/board\n 2 3 2 2 2\n</code></pre> <p>Notice that the windowed reduction operator did not include the values at the left and right, <code>(0+1)</code> and <code>(1+1)</code>, edges of the board. This can be remedied by padding the board with zeroes on either side, the @ function can be used to do this.</p> <pre><code>      board\n0 1 1 1 0 1 1\n      \u2374 board\n7\n      \u2373 \u2374 board\n1 2 3 4 5 6 7\n      1 + \u2373 \u2374 board\n2 3 4 5 6 7 8\n\n      ((\u2374 board)+2)\u23740\n0 0 0 0 0 0 0 0 0\n\n      (board@(1 + \u2373 \u2374 board))((\u2374 board)+2)\u23740\n0 0 1 1 1 0 1 1 0\n\n      3+/(board@(1 + \u2373 \u2374 board))((\u2374 board)+2)\u23740\n1 2 3 2 2 2 2\n</code></pre> <p>The advantage of using the @ function is that it can be generalised to matrices, too.</p> <pre><code>      board \u2190 5 5 \u2374 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n      1 + \u2373 \u2374 board\n 2 2  2 3  2 4  2 5  2 6 \n 3 2  3 3  3 4  3 5  3 6 \n 4 2  4 3  4 4  4 5  4 6 \n 5 2  5 3  5 4  5 5  5 6 \n 6 2  6 3  6 4  6 5  6 6\n      ((\u2374 board)+2)\u23740\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n      (board@(1 + \u2373 \u2374 board))((\u2374 board)+2)\u23740\n0 0 0 0 0 0 0\n0 1 1 1 1 1 0\n0 1 1 1 1 1 0\n0 1 1 1 1 1 0\n0 1 1 1 1 1 0\n0 1 1 1 1 1 0\n0 0 0 0 0 0 0\n</code></pre> <p>The 2-dimensional generalisation of the +/ windowed reduce function is the stencil <code>\u233a</code> operator. The stencil operator takes in a right argument vector which specifies the size of the window, similarly to the left argument to the windowed reduce function, and a left argument which specifies the function to be applied to the window.</p> <pre><code>       board \u2190 7 \u2374 1\n       ({\u2282\u2375}\u233a3)board\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Notice that it includes the edges, unlike the windowed reduce function.</p> <pre><code>      board \u2190 5 5 \u2374 1\n      ({\u2282\u2375}\u233a3 3)board\n\u250c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2510\n\u25020 0 0\u25020 0 0\u25020 0 0\u25020 0 0\u25020 0 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2524\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 1 1\u25021 1 1\u25021 1 1\u25021 1 1\u25021 1 0\u2502\n\u25020 0 0\u25020 0 0\u25020 0 0\u25020 0 0\u25020 0 0\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n      board \u2190 1 -\u2368 ? 5 5 \u2374 2\n      board\n0 0 0 0 0\n1 1 1 1 1\n0 0 1 1 0\n1 0 0 1 0\n0 1 0 1 0\n      ({+/,\u2375}\u233a3 3)board\n2 3 3 3 2\n2 4 5 5 3\n3 5 6 6 4\n2 3 5 4 3\n2 2 3 2 2\n</code></pre> <p>Putting this in a python function</p> <pre><code>def calculate_adjacency():\n  apl.eval(\"adjacency \u2190 ({+/,\u2375}\u233a3 3)board\")\n</code></pre> <p>The last thing that is needed is a function to decide what happens when a tile is clicked. The first thing to implement is the uncovering of tiles. Whenever a tile that does not contain a mine is left-clicked, it is uncovered, and any tiles with no adjacent mines automatically uncover the adjacent tiles. We will use <code>\u00af1</code> to denote uncovered tiles on the board. For checking if the tile is a mine, we write a simple <code>is_mine</code> function that can be called from the Python code</p> <pre><code>      is_mine \u2190 {(\u2375\u2337board)=1}\n      board \u2190 1 -\u2368 ? 5 5 \u2374 2\n      board\n0 1 1 1 0\n1 0 0 1 0\n0 1 0 0 1\n1 1 1 0 1\n0 1 0 0 0\n      is_mine \u2282(1 2)\n1\n</code></pre> <p>We will write the tile uncovering algorithm recursively. If the tile clicked does not have any adjacent mines, then the tiles adjacent to that tile are uncovered too, forming a list of tile positions to be uncovered in the process. This is the usual flood-fill algorithm. </p> <p>The following function makes sure the indices we are checking are not beyond the bounds of the board matrix. </p> <pre><code>      in_bounds \u2190 {\u2227/\u220a(\u2375&lt;\u2374board)(\u2375&gt;(0 0))}\n</code></pre> <p>For example, using the clearly invalid index <code>\u00af1 3</code>, it is less than the maximum index <code>\u2374board</code>, but not greater than <code>(0 0)</code>.</p> <pre><code>       \u2374board\n5 5\n\n       \u00af1 3 &lt; \u2374board\n1 1\n       0 0 &lt; \u00af1 3\n0 1\n\n       \u220a (\u00af1 3 &lt; \u2374board)(0 0 &lt; \u00af1 3)\n1 1 0 1\n\n       \u2227/\u220a (\u00af1 3 &lt; \u2374board)(0 0 &lt; \u00af1 3)\n0\n       in_bounds \u00af1 3\n0\n</code></pre> <pre><code>      directions \u2190 (1 0)(0 1)(\u00af1 0)(0 \u00af1)(1 1)(\u00af1 \u00af1)(1 \u00af1)(\u00af1 1)\n      uncover \u2190 {(in_bounds \u2375)=0: \u236c \u22c4 \u2375\u2337adjacency=0: (\u2282\u2375), uncover\u00a8((\u2282\u2375)+\u00a8directions) \u22c4 \u2375}\n\n      board \u2190 (0@(1 + \u2373 3 3))(5 5)\u23741\n      board\n1 1 1 1 1\n1 0 0 0 1\n1 0 0 0 1\n1 0 0 0 1\n1 1 1 1 1\n      adjacency \u2190 ({+/,\u2375}\u233a3 3)board \n      adjacency\n3 4 3 4 3\n4 5 3 5 4\n3 3 0 3 3\n4 5 3 5 4\n3 4 3 4 3\n      uncover 3 3\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25023 3\u25024 3\u25023 4\u25022 3\u25023 2\u25024 4\u25022 2\u25024 2\u25022 4\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n</code></pre> <p>The uncover function constructs a list of indices to mark as uncovered. The function first checks if the index is within the right bounds, if not it returns an empty array. If it is in the right bounds and it has no adjacent mines, then it returns the index catenated to the result of uncovering the tiles in all directions (since a tile with no adjacent mines needs to uncover all adjacent tiles), otherwise it just returns the index of the tile. Notice how the enclose functions is used here to apply <code>+</code> between <code>\u2375</code> and every direction.</p> <p>Finally, the <code>@</code> at operator can be used to replace the board indices to be uncovered with <code>\u00af1</code>.</p> <pre><code>      (\u00af1@(uncover 3 3))board\n1  1  1  1 1\n1 \u00af1 \u00af1 \u00af1 1\n1 \u00af1 \u00af1 \u00af1 1\n1 \u00af1 \u00af1 \u00af1 1\n1  1  1  1 1\n</code></pre> <p>Putting these functions in the Python code</p> <pre><code>from pynapl import APL\napl = APL.APL()\n\ndef new_board():\n    apl.eval(\"board \u2190  (16\u00d730) \u2374 0\")\n    apl.eval(\"board \u2190 (1 @ (99 ? 16\u00d730)) board\")\n    apl.eval(\"board \u2190 16 30 \u2374 board\")\n\ndef calculate_adjacency():\n  apl.eval(\"adjacency \u2190 ({+/,\u2375}\u233a3 3)board\")\n\napl.fix(\"in_bounds \u2190 {(+/\u2375&lt;\u2374board)\u2227(\u2227/\u2375&gt;(0 0))&gt;0}\")\napl.eval(\"directions \u2190 (1 0)(0 1)(\u00af1 0)(0 \u00af1)(1 1)(\u00af1 \u00af1)(1 \u00af1)(\u00af1 1)\")\napl.fix(\"uncover \u2190 {(in_bounds \u2375)=0: \u236c \u22c4 \u2375\u2337adjacency=0: (\u2282\u2375), uncover\u00a8((\u2282\u2375)+\u00a8directions) \u22c4 \u2375}\")\nis_mine = apl.fn(\"{(\u2375\u2337board)=1}\")\n\ndef uncover(x, y):\n  if(is_mine([x,y])):\n      # Lose\n      return\n  apl.eval(\"board \u2190 (\u00af1@(uncover \u2206))board\", x, y)\n\napl.eval(\"board \u2190 (0@(1 + \u2373 3 3))(5 5)\u23741\")\ncalculate_adjacency();\nuncover(3,3);\nprint(apl.eval(\"board\"))\n</code></pre> <p>The result is <code>[[1, 1, 1, 1, 1], [1, -1, -1, -1, 1], [1, -1, -1, -1, 1], [1, -1, -1, -1, 1], [1, 1, 1, 1, 1]]</code>, as is expected.</p> <p>The last piece of logic needed is flagging, and win/loss states. We will create a separate board to keep track of tile icons, '\u2691' for flags, '\u26ef' for mines, and numbers for adjacency numbers of uncovered tiles. We write a function that takes in a tile index to be flagged, and flags it if it is not already uncovered.</p> <pre><code>apl.eval(\"labels \u2190 (\u2374 board) \u2374 ' '\")\ndef flag(x, y):\n    if(apl.eval(\"\u2206\u2337board\", x, y)!=-1): #Not uncovered\n      apl.eval(\"\u2206\u2337labels \u2190 \\'\u2691\\'\", x, y)\n</code></pre> <p>We also need to update the adjacency numbers shown to the player when more tiles are uncovered. The labels matrix should have the values in the adjacency matrix where the board matrix has a <code>\u00af1</code> value (where a tile is uncovered). First find where board is <code>\u00af1</code>, then selectively assign the adjacency values to the labels.</p> <pre><code>      labels \u2190 (\u2374 board) \u2374 ' '\n      board \u2190 1 -\u2368 ? 5 5 \u2374 2\n      adjacency \u2190 ({+/,\u2375}\u233a3 3)board\n      board\n1 1 0 0 1\n1 0 0 1 0\n0 1 1 1 1\n0 1 0 1 0\n1 1 0 1 0\n      adjacency\n3 3 2 2 2\n4 5 5 5 4\n3 4 6 5 4\n4 5 7 5 4\n3 3 4 2 2\n\n      board[1;3] \u2190 \u00af1\n      board[1;4] \u2190 \u00af1\n      board\n1 1 \u00af1 \u00af1 1\n1 0  0  1 0\n0 1  1  1 1\n0 1  0  1 0\n1 1  0  1 0\n      board=\u00af1\n0 0 1 1 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n\n      ((board=\u00af1)/\u00a8labels) \u2190 adjacency\n      labels\n   2 2  \n</code></pre> <p>Putting this in our uncover function</p> <pre><code>def uncover(x, y):\n  if(is_mine([x,y])):\n      # Lose\n      return\n  apl.eval(\"board \u2190 (\u00af1@(uncover \u2206))board\", x, y)\n  apl.eval(\"((board=\u00af1)/\u00a8labels) \u2190 adjacency\")\n</code></pre> <p>Revealing mines when the game is lost</p> <pre><code>def uncover(x, y):\n  if(is_mine([x,y])):\n      apl.eval(\"((board=1)/\u00a8labels) \u2190 \\'\u26ef\\'\")\n      # Lose\n      return\n  apl.eval(\"board \u2190 (\u00af1@(uncover \u2206))board\", x, y)\n  apl.eval(\"((board=\u00af1)/\u00a8labels) \u2190 adjacency\")\n</code></pre>"},{"location":"course/ch6/part1/","title":"String manipulation","text":"<p>This part will cover</p> <ul> <li>Partition</li> <li>Partitioned enclose</li> <li>Interval index</li> </ul>"},{"location":"course/ch6/part2/","title":"Inner and outer products","text":"<p>This part will cover</p> <ul> <li>Inner products</li> <li>Outer products</li> <li>Matrix inverse</li> </ul> <p>Recall the Rank \u2364 operator which specified what rank cells a function acts on, <pre><code>      M \u2190 ? 5 5 \u2374 10\n3 2  2 9 5\n9 2 10 8 2\n3 4  6 5 2\n9 3  5 3 2\n8 8  6 8 8\n      (\u2282\u23642)M\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25023 2  2 9 5\u2502\n\u25029 2 10 8 2\u2502\n\u25023 4  6 5 2\u2502\n\u25029 3  5 3 2\u2502\n\u25028 8  6 8 8\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n      (\u2282\u23641)M\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u25023 2 2 9 5\u25029 2 10 8 2\u25023 4 6 5 2\u25029 3 5 3 2\u25028 8 6 8 8\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518      \n      (\u2282\u23640)M\n3 2  2 9 5\n9 2 10 8 2\n3 4  6 5 2\n9 3  5 3 2\n8 8  6 8 8\n</code></pre></p> <p>As can be seen above, a rank-n cell of a rank-r array obtained by specifying the first (r-n) indices of the array.</p> <pre><code>      M[;]\n3 2  2 9 5\n9 2 10 8 2\n3 4  6 5 2\n9 3  5 3 2\n8 8  6 8 8\n      M[1;]\n3 2 2 9 5\n      M[1;1]\n3\n</code></pre> <p>This specifies the cells to act on monadically; for dyadic functions, two ranks must be specified, to be interpreted as matching up cells of a certain rank from the left argument with certain cells of the right argument.</p> <pre><code>      v \u2190 ? 5 \u2374 5\n      v\n3 4 4 3 2\n      M \u2190 5 5 \u2374 \u237325\n      M\n 1  2  3  4  5\n 6  7  8  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n      \u235d See pairing of 0-cells of v and 1-cells of M\n      v({\u237a,'-',\u2375}\u2364(0 1))M\n3 -  1  2  3  4  5\n4 -  6  7  8  9 10\n4 - 11 12 13 14 15\n3 - 16 17 18 19 20\n2 - 21 22 23 24 25\n\n      \u235d Pairing of 1-cells of v and 1-cells of M\n      v({\u237a,'-',\u2375}\u2364(1 1))M\n3 4 4 3 2 -  1  2  3  4  5\n3 4 4 3 2 -  6  7  8  9 10\n3 4 4 3 2 - 11 12 13 14 15\n3 4 4 3 2 - 16 17 18 19 20\n3 4 4 3 2 - 21 22 23 24 25\n\n      N \u2190 5 5 \u2374 +\\\u237325\n      N\n  1   3   6  10  15\n 21  28  36  45  55\n 66  78  91 105 120\n136 153 171 190 210\n231 253 276 300 325\n\n      \u235d Pairing of 1-cells of v and 1-cells of M\n      N({\u237a,'-',\u2375}\u2364(1 1))M\n  1   3   6  10  15 -  1  2  3  4  5\n 21  28  36  45  55 -  6  7  8  9 10\n 66  78  91 105 120 - 11 12 13 14 15\n136 153 171 190 210 - 16 17 18 19 20\n231 253 276 300 325 - 21 22 23 24 25\n</code></pre> <p>One commonly used operation is matching every pair of elements from two vectors, one way to write this is using each and rank \u2364</p> <pre><code>      v1 \u2190 ? 5 \u2374 5\n5 5 3 4 1\n      v2 \u2190 \u2395A[? 5 \u2374 26]\nHTOKY\n      v1(,\u2364(0 1))v2\n5 HTOKY\n5 HTOKY\n3 HTOKY\n4 HTOKY\n1 HTOKY\n      v1(,\u00a8\u2364(0 1))v2\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25025 H\u25025 T\u25025 O\u25025 K\u25025 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25025 H\u25025 T\u25025 O\u25025 K\u25025 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25023 H\u25023 T\u25023 O\u25023 K\u25023 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25024 H\u25024 T\u25024 O\u25024 K\u25024 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25021 H\u25021 T\u25021 O\u25021 K\u25021 Y\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n</code></pre> <p>There is a specific operator for this operation called the outer product (\u2218.f), this operator is special in that it takes a right function argument.</p> <pre><code>      v1(\u2218.,)v2\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25025 H\u25025 T\u25025 O\u25025 K\u25025 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25025 H\u25025 T\u25025 O\u25025 K\u25025 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25023 H\u25023 T\u25023 O\u25023 K\u25023 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25024 H\u25024 T\u25024 O\u25024 K\u25024 Y\u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u25021 H\u25021 T\u25021 O\u25021 K\u25021 Y\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n\n      'POP' 'HEAVY' 'ALT' 'SYNTH' \u2218., 'ROCK' 'METAL' 'PUNK' 'WAVE'\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502POPROCK  \u2502POPMETAL  \u2502POPPUNK  \u2502POPWAVE  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502HEAVYROCK\u2502HEAVYMETAL\u2502HEAVYPUNK\u2502HEAVYWAVE\u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502ALTROCK  \u2502ALTMETAL  \u2502ALTPUNK  \u2502ALTWAVE  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502SYNTHROCK\u2502SYNTHMETAL\u2502SYNTHPUNK\u2502SYNTHWAVE\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\n      \u235d Multiplication table\n      (\u237310)(\u2218.\u00d7)\u237310\n 1  2  3  4  5  6  7  8  9  10\n 2  4  6  8 10 12 14 16 18  20\n 3  6  9 12 15 18 21 24 27  30\n 4  8 12 16 20 24 28 32 36  40\n 5 10 15 20 25 30 35 40 45  50\n 6 12 18 24 30 36 42 48 54  60\n 7 14 21 28 35 42 49 56 63  70\n 8 16 24 32 40 48 56 64 72  80\n 9 18 27 36 45 54 63 72 81  90\n10 20 30 40 50 60 70 80 90 100\n\n      \u235d Composite numbers\n      (1+\u23739)(\u2218.\u00d7)1+\u23739\n 4  6  8 10 12 14 16 18  20\n 6  9 12 15 18 21 24 27  30\n 8 12 16 20 24 28 32 36  40\n10 15 20 25 30 35 40 45  50\n12 18 24 30 36 42 48 54  60\n14 21 28 35 42 49 56 63  70\n16 24 32 40 48 56 64 72  80\n18 27 36 45 54 63 72 81  90\n20 30 40 50 60 70 80 90 100\n\n      \u235d Prime numbers up to N as numbers minus composite numbers up to N/2\n      (\u2373100) ~ (1+\u237349)(\u2218.\u00d7)1+\u237349\n1 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97\n</code></pre> <p>In many applications, it is useful to reduce over the diagonal of the outer product. That is, match each element of the vectors in order, then reduce over them. The inner product of vectors is an example of this, which APL generalizes using the inner product (f.g) operator.</p> <pre><code>      v1 \u2190 3 -\u2368 ? 5 \u2374 5\n      v1\n0 \u00af1 0 2 \u00af2\n\n      v2 \u2190 3 -\u2368 ? 5 \u2374 5\n      v2\n\u00af1 \u00af2 2 0 0\n\n      v1\u2218.\u00d7v2\n 0  0  0 0 0\n 1  2 \u00af2 0 0\n 0  0  0 0 0\n\u00af2 \u00af4  4 0 0\n 2  4 \u00af4 0 0\n\n      \u235d Diagonal\n      (1 1)\u2218\u2349(v1\u2218.\u00d7v2)\n0 2 0 0 0\n      +/(1 1)\u2218\u2349(v1\u2218.\u00d7v2)\n2\n      v1+.\u00d7v2\n2\n\n      \u235d Absolute difference between pairs of elements\n      v1 \u2218.(|-) v2\n1 2 2 0 0\n0 1 3 1 1\n1 2 2 0 0\n3 4 0 2 2\n1 0 4 2 2\n\n      \u235d Maximum absolute difference between all pairs of elements of two vectors\n      \u2308/, v1 \u2218.(|-) v2\n4\n\n      \u235d Maximum absolute difference between matching elements of two vectors\n      \u2308/ (1 1)\u2218\u2349 v1\u2218.(|-)v2\n2\n      v1 \u2308.(|-) v2\n2\n</code></pre> <p>The inner product function +.\u00d7 applied to matrices is the matrix product function</p> <pre><code>      M \u2190 (\u23735)\u2218.=\u23735\n      M\n1 0 0 0 0\n0 1 0 0 0\n0 0 1 0 0\n0 0 0 1 0\n0 0 0 0 1\n     5 ? 5\n3 4 2 1 5\n      M \u2190 M[5 ? 5;]\n      M\n0 0 0 1 0\n0 0 0 0 1\n0 0 1 0 0\n1 0 0 0 0\n0 1 0 0 0\n\n      N \u2190 +\\ 5 5 \u2374 \u23736\n      N\n1  3  6 10 15\n6  7  9 12 16\n5 11 12 14 17\n4  9 15 16 18\n3  7 12 18 19\n\n      M +.\u00d7 N\n4  9 15 16 18\n3  7 12 18 19\n5 11 12 14 17\n1  3  6 10 15\n6  7  9 12 16\n\n\n      M \u2190 0 1 0 0 0 \u2218.\u00d7 0 0 1 0 0\n      M\n0 0 0 0 0\n0 0 1 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n\n      M +.\u00d7 N\n0  0  0  0  0\n5 11 12 14 17\n0  0  0  0  0\n0  0  0  0  0\n0  0  0  0  0\n</code></pre> <p>Using the matrix inverse \u2339 function to verify the multiplication</p> <pre><code>      M \u2190 +\\ 5 5 \u2374 \u23737\n      M\n1  3  6 10 15\n6 13 14 16 19\n4  9 15 22 23\n2  5  9 14 20\n7  8 10 13 17\n\n      N \u2190 +\\ 5 5 \u2374 \u23736\n      N\n1  3  6 10 15\n6  7  9 12 16\n5 11 12 14 17\n4  9 15 16 18\n3  7 12 18 19\n\n      L \u2190 M +.\u00d7 N\n      L\n134 285 435  560  630\n275 540 789 1010 1185\n290 599 891 1124 1292\n193 406 615  790  895\n208 423 633  820  960\n\n      L+.\u00d7\u2339N\n1  3  6 10 15\n6 13 14 16 19\n4  9 15 22 23\n2  5  9 14 20\n7  8 10 13 17\n\n      \u2339M+.\u00d7L\n1  3  6 10 15\n6  7  9 12 16\n5 11 12 14 17\n4  9 15 16 18\n3  7 12 18 19\n</code></pre> <p>The matrix inverse \u2339 also takes the pseudoinverse of a matrix, if the inverse does not exist, which can be used to get least squares solutions of systems of linear equations when a unique solution is not possible. Take the example of a bakery, wanting to make the most out of their ingredients</p> <pre><code>\u235d Recipes\n\u235d           Flour   Milk    Sugar   Butter  Eggs\nCake    \u2190   450     0       700     500     6\nPancake \u2190   200     300     50      50      1\nCupcake \u2190   150     125     150     50      0\nCookies \u2190   280     0       250     200     2\n\nAvailable \u2190 2200 1000 2200 1600 19\n</code></pre> <p>Since there are more ingredients than recipes, there will not be a unique solution to this problem. The system of equations here is</p> <p>\\[ \\text{Cakes}\\cdot\\begin{bmatrix}450\\\\ 0\\\\ 700\\\\ 500\\\\ 2 \\end{bmatrix}+\\text{Pancake}\\cdot\\begin{bmatrix}200\\\\ 300\\\\ 50\\\\ 50\\\\ 1 \\end{bmatrix}+\\text{Cupcakes}\\cdot\\begin{bmatrix}150\\\\ 125\\\\ 150\\\\ 50\\\\ 0 \\end{bmatrix}+\\text{Cookies}\\cdot\\begin{bmatrix}280\\\\ 0\\\\ 250\\\\ 200\\\\ 2 \\end{bmatrix}=\\begin{bmatrix} 2200\\\\ 1000\\\\ 2200\\\\ 1600\\\\ 19 \\end{bmatrix} \\]</p> <p>which can be written in matrix form as</p> <p>\\[ \\begin{bmatrix} 450 &amp; 200 &amp; 150 &amp; 280 \\\\ 0 &amp; 300 &amp; 125 &amp; 0 \\\\ 700 &amp; 50 &amp; 150 &amp; 250 \\\\ 500 &amp; 50 &amp; 50 &amp; 200 \\\\ 2 &amp; 1 &amp; 0 &amp; 2 \\end{bmatrix} \\begin{bmatrix} \\text{Cakes} \\\\ \\text{Pancake} \\\\ \\text{Cupcake} \\\\ \\text{Cookies} \\end{bmatrix} = \\begin{bmatrix} 2200 \\\\ 1000 \\\\ 2200 \\\\ 1600 \\\\ 19 \\end{bmatrix} \\]</p> <p>which can be solved by obtaining the pseudoinverse of the matrix (represented below using the + symbol), and multiplying it by the target vector.</p> <p>\\[ \\begin{bmatrix} \\text{Cakes} \\\\ \\text{Pancake} \\\\ \\text{Cupcake} \\\\ \\text{Cookies} \\end{bmatrix} = \\begin{bmatrix} 450 &amp; 200 &amp; 150 &amp; 280 \\\\ 0 &amp; 300 &amp; 125 &amp; 0 \\\\ 700 &amp; 50 &amp; 150 &amp; 250 \\\\ 500 &amp; 50 &amp; 50 &amp; 200 \\\\ 2 &amp; 1 &amp; 0 &amp; 2 \\end{bmatrix}^+ \\begin{bmatrix} 2200 \\\\ 1000 \\\\ 2200 \\\\ 1600 \\\\ 19 \\end{bmatrix} \\]</p> <pre><code>       Goods \u2190 \u2349 \u2191 Cake Pancake Cupcake Cookies\n       Goods\n450 200 150 280\n  0 300 125   0\n700  50 150 250\n500  50  50 200\n  6   1   0   2\n\n       \u235d (Pseudo)inverse multiplied by the target vector \n       (\u2339Goods)+.\u00d7Available  \n1.99585722 2.919959252 0.992099059 2.032347529\n</code></pre> <p>Then, the closest solution is baking roughly 2 cakes, 3 batches of pancakes, 1 batch of cupcakes, and 2 batches of cookies.</p>"},{"location":"course/ch6/part3/","title":"Encoding and decoding","text":"<p>This part will cover</p> <ul> <li>Inner products</li> <li>Outer products</li> <li>Matrix inverse</li> </ul> <p>A common operation in the manipulation of time data is the formatting of a period of time into a standard format in terms of days, hours, minutes, and seconds. This appears, for example, when calculating the time difference between two dates. </p> <p>A similar problem of grouping numbers is converting between decimal and binary, a very common operation when dealing with encoding or decoding numbers numbers between human-readable data and machine data.</p> <p>The same calculation even appears when dealing with measurements and converting between measurement systems, such length or weight in SI or imperial units.</p> <p>The general problem is solved by the \u22a4 encode and \u22a5 decode functions, which convert to and from a different groupings of a number. Mathematically, this is converting between mixed-radix number systems.</p> <p>For the problems mentioned above, we implement solutions using encode and decode functions. The encode \u22a4 function takes in a left argument vector of groupings and a right argument to be encoded.</p> <pre><code>       \u235d Converting 10000 seconds\n         \u235d 24 hours in a day, 60 minutes in an hour, 60 seconds in a minute\n         24 60 60 \u22a4 10000 \n2 46 40\n       \u235d Two hours, 46 minutes, 40 seconds\n</code></pre> <p>The left argument can even be decimal numbers, for example in the case of getting the average number of years (since leap years have 366 days, as opposed to 365).</p> <pre><code>       \u235d Converting 1000000000 (one billion) seconds to average years, days\n       \u235d Up to 1000 years, ~365.25 days in a year, 24 hours in a day, ...\n       1000 365.25 24 60 60 \u22a4 1000000000\n 31 251.25 1 46 40\n             \u235d 31 average years, 251.25 days, 1 hour, 46 minutes, 40 seconds\n</code></pre> <p>Note that an extra grouping for the leftmost value had to be added (measuring 1000 years), otherwise it would not be returned.</p> <p>The decode function takes in a left argument vector of groupings and a right argument to be encoded. It can also take in one simple scalar left argument in case the groupings are equal.</p> <pre><code>      \u235d Convert 10 to 8-bit binary\n        (8/2) \u22a4 10\n0 0 0 0 1 0 1 0\n\n      2 \u22a5 1 0 1 0 1 0\n42\n      \u235d Equivalent to\n        (1\u00d72*5)+(1\u00d72*3)+(1\u00d72*1)\n42\n</code></pre> <p>For converting between SI units of distance and imperial units</p> <pre><code>      \u235d One million millimeters \n      \u235d to millimeters, centimeters, meters, kilometers, up to 10000km\n      10000 1000 10 10 \u22a4 1000000\n1 0 0 0\n      \u235d 1 kilometer\n\n      \u235d Convert from millimeters to mils (thousands of an inch)\n      1000000 \u00d7 (1\u00f70.0254)\n39370078.7402\n\n      \u235d One million millimeters\n      \u235d to mils, inches, feet, yards, miles, leagues\n      \u235d (1\u00f70.0254) mm to mils\n      \u235d 1000 mils to inches\n      \u235d 12 inches to a foot\n      \u235d 3 feet to a yard\n      \u235d 1760 yards to a mile\n      \u235d Measuring up to 1000 miles\n      1000 1760 3 12 1000 \u22a4 1000000\n0 1093 1 10 78.7402\n      \u235d 1093 yards, 1 foot, 10 inches, 78.7402 mils\n\n      \u235d Back to millimeters\n        0.0254 \u00d7 1000 1760 3 12 1000 \u22a5 0 1093 1 10 78.7402\n1000000\n</code></pre>"},{"location":"course/ch6/part4/","title":"Repeat, Masking","text":"<p>This part will cover</p> <ul> <li>Repeat</li> <li>Masking</li> </ul> <p>Just as the reduce / operator destructs a list by iterating through it from the right, the power \u2363 operator can be thought of as destructing a number n by repeating n times. The power operator repeats its left function argument the amount of times specified by its right argument.</p> <pre><code>      2(+\u23633)5\n11\n      (2+(2+(2+5)))\n11\n\n      2(\u00d7\u23633)5\n40\n      (2\u00d7(2\u00d7(2\u00d75)))\n40\n\n      0.5(*\u23633)0.5\n0.65404086\n\n            0.5(0.5*(0.5*0.5))\n0.65404086\n\n      1(,\u236310)2\n1 1 1 1 1 1 1 1 1 1 2\n\n      1({\u2375,\u237a,\u2375}\u23632)2\n2 1 2 1 2 1 2\n\n      (\u2282\u23635)'Welcome'\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\n\u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\n\u2502\u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\u2502\n\u2502\u2502\u2502\u2502\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\u2502\u2502\u2502\u2502\n\u2502\u2502\u2502\u2502\u2502Welcome\u2502\u2502\u2502\u2502\u2502\n\u2502\u2502\u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\u2502\u2502\n\u2502\u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\u2502\n\u2502\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\u2502\n\u2502\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>Note that X (f\u2363g) Y is equivalent to binding the left argument as the left argument to f, (X\u2218f\u2363g) Y.</p> <pre><code>      2(\u00d7\u23633)5\n40\n      (2\u2218\u00d7\u23633)5\n40\n</code></pre> <p>The right argument to the power \u2363 operator can be a function, f\u2363g, where the f is applied until g, applied to the current and previous value of f, returns 1. For example, the following code multiplies 5 by 2 until the current value is greater than 100.</p> <pre><code>      2 (\u00d7\u2363{\u237a&gt;100})5\n160\n      2 (\u00d7\u2363{\u2395\u2190\u237a,\u2375 \u22c4 \u237a&gt;100})5\n10 5\n20 10\n40 20\n80 40\n160 80\n160\n</code></pre> <p>This is equivalent to  <pre><code>      \u236c {\u237a&gt;100: \u237a \u22c4 (2\u00d7\u2375) \u2207 \u237a} 5\n160\n</code></pre></p> <p>For a more complicated example, the power operator can also be used to find fixed points of functions.</p> <pre><code>      \u235d Fixed point of 0.5\u2218*\n      0.5 (*\u2363=) 0.5\n0.6411857445\n\n      0.5 * 0.6411857445\n0.6411857445\n</code></pre> <p>The code applies 0.5\u2218* until the current and previous values are equal.</p> <p>When the power operator is applied to a negative right argument, it acts as the repeated inverse operator for its function left argument, for certain functions.</p> <pre><code>      3(+\u23632)5\n11\n      3(+\u2363\u00af2)5\n\u00af1\n\n            2 \u22a5 1 0 1 0 1 0\n42\n      2 (\u22a5\u2363\u00af1) 42\n1 0 1 0 1 0\n</code></pre> <p>Recall how we modified elements of arrays in Chapter 2; the elements were specified on the left-hand side of the assignment, and the replacement values were specified on the right.</p> <pre><code>      M \u2190 5 5\u2374\u237325\n      M\n 1  2  3  4  5\n 6  7  8  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n      M[1;]\n1 2 3 4 5\n      M[1;] \u2190 0\n\n      M\n 0  0  0  0  0\n 6  7  8  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n</code></pre> <p>It was also possible to replace specified arrays with other arrays as long as their shape matched.</p> <pre><code>      M[1 2;1 2]\n1 2\n6 7\n      M[1 2;1 2] \u2190 2 2\u23740 1 1 0\n      M\n 0  1  1  4  5\n 1  0  0  9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n</code></pre> <p>The story does not end there, for any expression that selects from an array can be used on the left-hand side of the assignment.</p> <pre><code>      M \u2190 5 5 \u2374 \u237325\n      2\u2191M\n1 2 3 4  5 \n6 7 8 9 10\n      (2\u2191M) \u2190 5\n      M\n 5  5  5  5  5\n 5  5  5  5  5\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\n      M \u2190 5 5 \u2374 \u237325\n      (2\u2193M)\u21905 \n      M\n1 2 3 4  5\n6 7 8 9 10\n5 5 5 5  5\n5 5 5 5  5\n5 5 5 5  5\n</code></pre> <p>With replicate each, the right-hand side can also be an array of the same shape as the original array to then selectively copy values depending on the left-hand side.</p> <pre><code>      M \u2190 5 5\u2374\u237325\n      \u235d Random logical array\n      B \u2190 1 -\u2368 ? 5 5\u23742\n      B\n0 1 0 1 1\n0 1 0 1 1\n1 1 0 0 0\n0 1 0 0 0\n0 1 1 1 1\n\n      (B/\u00a8M)\n\u250c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u252c\u2500\u2500\u2510\n\u2502  \u25022 \u2502  \u25024 \u25025 \u2502\n\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524\n\u2502  \u25027 \u2502  \u25029 \u250210\u2502\n\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524\n\u250211\u250212\u2502  \u2502  \u2502  \u2502\n\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524\n\u2502  \u250217\u2502  \u2502  \u2502  \u2502\n\u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2524\n\u2502  \u250222\u250223\u250224\u250225\u2502\n\u2514\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2534\u2500\u2500\u2518\n\n      (B/\u00a8M) \u2190 5 5\u2374\u2395A\n      M\n 1 B  3  D  E\n 6 G  8  I  J\n K L 13 14 15\n16 Q 18 19 20\n21 V  W  X  Y\n</code></pre> <p>For other types of replacements, the At @ operator comes in handy. For array left and right arguments, the At @ operator returns a function which replaces the elements at the indices specified by the right argument, using the values of the left argument. Note that the arrays have to match shape. Then, replacing each element masked by B using successive letters of the alphabet,</p> <pre><code>      M \u2190 5 5 \u2374 \u237325\n      \u2378B\n\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u25021 2\u25021 4\u25021 5\u25022 2\u25022 4\u25022 5\u25023 1\u25023 2\u25024 2\u25025 2\u25025 3\u25025 4\u25025 5\u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n      \u2374\u2378B\n13\n      (\u2374\u2378B)\u2191\u2395A\nABCDEFGHIJKLM\n      (((\u2374\u2378B)\u2191\u2395A)@(\u2378B)) M\n 1 A  3  B  C\n 6 D  8  E  F\n G H 13 14 15\n16 I 18 19 20\n21 J  K  L  M\n</code></pre> <p>The arguments to @ can be functions instead, where the left argument function is the function to apply to the selected elements, and the right argument is a logical function that selects the elements out of the right argument array.</p> <pre><code>      M \u2190 5 5 \u2374 \u237325\n      \u235d Negate elements which are multiples of 3\n      (-@{0=3|\u2375})M\n  1   2  \u00af3   4   5\n \u00af6   7   8  \u00af9  10\n 11 \u00af12  13  14 \u00af15\n 16  17 \u00af18  19  20\n\u00af21  22  23 \u00af24  25\n\n      M \u2190 5 5 \u2374 \u237325\n        \u235d Reverse list of elements which are multiples of 3\n      (\u2296@{0=3|\u2375})M\n 1  2 24  4  5\n21  7  8 18 10\n11 15 13 14 12\n16 17  9 19 20\n 6 22 23  3 25\n</code></pre>"},{"location":"course/ch6/part5/","title":"Choo choo","text":"<p>This part will cover</p> <ul> <li>4-trains</li> <li>5-trains</li> <li>advanced trains</li> </ul>"},{"location":"course/ch6/read/","title":"Read exercises","text":"<p>For each of the following exercises, try to figure out what the input will produce in the TryAPL terminal. Check your answers by opening the \"Output\" tab.</p> <p>If you think an error will occur, try to predict which error it will be and where the arrow will point to.</p> <p>The exercises are not checked or graded: use them to check your knowledge!</p>"},{"location":"course/ch6/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch6/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination"},{"location":"course/ch6/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination <code>+</code> Plus Addition + <code>-</code> Minus Subtraction - <code>\u00d7</code> Times Multiplication PREFIX - <code>\u00f7</code> Divide Division PREFIX = <code>*</code> Power Exponentiation * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 <code>\u235d</code> Lamp Comment PREFIX , <code>\u2190</code> Assignment operator Assigning variables &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L"},{"location":"course/ch6/write/","title":"Write exercises","text":"<p>Submit APL code for the following exercises. Your submissions are graded using TMC.</p> <p>Make sure to log in to be able to submit your work!</p> <p>Remember, you can test out ideas and develop you solution at TryAPL before submitting it here.</p> <p>You can submit as many solutions as you like. If you submit a correct solution at least once, you will receive points on the TMC server and be able to see the model solution.</p> <p>If the write problem is red, it is unsolved. If it it green, you have solved it and received points for it on the server.</p>"},{"location":"course/ch7/part1/","title":"Development environment","text":"<p>This part will cover</p> <ul> <li>Setting up your development environment</li> <li>Dyalog LINK</li> </ul>"},{"location":"course/ch7/part2/","title":"Branching and looping","text":"<p>This part will cover</p> <ul> <li>The branch operator</li> <li>If, else if, else</li> <li>For, while</li> </ul>"},{"location":"course/ch7/part3/","title":"Execute and format","text":"<p>This part will cover</p> <ul> <li>Execute</li> <li>Format</li> </ul>"},{"location":"course/ch7/part4/","title":"Writing interactive programs","text":"<p>This part will cover</p> <ul> <li>Writing interactive programs</li> <li>Input and output</li> <li>Configurability</li> </ul>"},{"location":"course/ch7/part5/","title":"File I/O","text":"<p>This part will cover</p> <ul> <li>File reading and writing</li> <li>Quad CSV</li> </ul>"},{"location":"course/ch7/part6/","title":"External libraries","text":"<p>This part will cover</p> <ul> <li>Tatin package manager</li> <li>Using external libraries<ul> <li>HTTP server</li> <li>OpenAI</li> <li>etc.</li> </ul> </li> </ul>"},{"location":"course/ch7/project/","title":"Project work","text":"<p>This section will contain the final exercises students need to submit. The exercises will be long and require students to write longer, more involved programs and submit them to the test server.</p>"},{"location":"course/ch7/summary/","title":"Function index","text":"<p>Here is a table of symbols we have used and how to type them in TryAPL.</p> <p>It might be useful to review this page as you are doing the read and write exercises in the next sections.</p>"},{"location":"course/ch7/summary/#new-functions","title":"New functions","text":"Symbol Name Function Key combination"},{"location":"course/ch7/summary/#old-functions","title":"Old functions","text":"Symbol Name Function Key combination <code>+</code> Plus Addition + <code>-</code> Minus Subtraction - <code>\u00d7</code> Times Multiplication PREFIX - <code>\u00f7</code> Divide Division PREFIX = <code>*</code> Power Exponentiation * <code>\u00af</code> Negative sign Negation of a number PREFIX 2 <code>\u235d</code> Lamp Comment PREFIX , <code>\u2190</code> Assignment operator Assigning variables &lt; - Tab <code>\u2395</code> Quad Printing PREFIX L"}]}